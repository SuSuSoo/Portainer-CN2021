!function(e){function t(t){for(var a,o,s=t[0],l=t[1],c=t[2],p=0,u=[];p<s.length;p++)o=s[p],r[o]&&u.push(r[o][0]),r[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(t);u.length;)u.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],a=!0,s=1;s<n.length;s++){var l=n[s];0!==r[l]&&(a=!1)}a&&(i.splice(t--,1),e=o(o.s=n[0]))}return e}var a={},r={0:0},i=[];function o(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=a,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)o.d(n,a,function(t){return e[t]}.bind(null,a));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;i.push([265,1]),n()}([,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"jsonObjectsToArrayHandler",function(){return i}),n.d(t,"genericHandler",function(){return o}),n.d(t,"logsHandler",function(){return s}),n.d(t,"deleteImageHandler",function(){return l});n(129),n(130),n(42),n(224),n(225);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){try{var t=JSON.parse(e);if(t&&"object"===a(t))return t}catch(e){}return!1}function i(e){var t="["+e.replace(/\n/g," ").replace(/\}\s*\{/g,"}, {")+"]";return angular.fromJson(t)}function o(e){var t={};return e?(r(e)?t=angular.fromJson(e):t.message=e,t):t}function s(e){return{logs:e}}function l(e){var t,n=[];if(r(e))if(t=e,"[object Array]"!==Object.prototype.toString.call(t)){var a=angular.fromJson(e);n.push(a)}else n=angular.fromJson(e);else n.push({message:e});return n}},,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(){this.AccessControlEnabled=!0,this.Ownership="private",this.AuthorizedUsers=[],this.AuthorizedTeams=[]}n.r(t),n.d(t,"AccessControlFormData",function(){return a})},function(e,t,n){"use strict";function a(e){var t;this.Id=e.Id,this.Type=e.Type,this.ResourceId=e.ResourceId,this.UserAccesses=e.UserAccesses,this.TeamAccesses=e.TeamAccesses,this.Public=e.Public,this.Ownership=(t=this).Public?"public":1===t.UserAccesses.length&&0===t.TeamAccesses.length?"private":t.UserAccesses.length>1||t.TeamAccesses.length>0?"restricted":"administrators"}n.r(t),n.d(t,"ResourceControlViewModel",function(){return a})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(){this.Directory="/cio/",this.Capacity=20,this.Redundancy=2,this.Provisioning="thin",this.Type="ssd",this.MinIOPS=100,this.MaxIOPS=2e3,this.MinBandwidth=1,this.MaxBandwidth=100,this.Filesystem="btrfs",this.SnapshotEnabled=!1,this.SnapshotInterval=1440,this.SnapshotMax=1,this.EncryptionEnabled=!1,this.InterfaceType="",this.InterfaceDriver="",this.InterfaceNetwork="",this.InterfaceConf="",this.Labels=[]}function r(e){this.Name=e,this.Checked=!1}function i(e,t){this.Name=e,this.Directory=t.directory,this.Capacity=t.capacity,this.Provisioning=t.provision,this.Type=t.type,this.Redundancy=t.level,t.iops&&(this.MinIOPS=t.iops.min,this.MaxIOPS=t.iops.max),t.bandwidth&&(this.MinBandwidth=t.bandwidth.min,this.MaxBandwidth=t.bandwidth.max),t.filesystem&&(this.Filesystem=t.filesystem.type);var n=t.service;n.snapshot?(this.SnapshotEnabled=n.snapshot.enabled,this.SnapshotInterval=n.snapshot.interval,this.SnapshotMax=n.snapshot.max):this.SnapshotEnabled=!1,n.encryption?this.EncryptionEnabled=n.encryption.enabled:this.EncryptionEnabled=!1,t.interface&&(this.InterfaceType=t.interface.type,this.InterfaceDriver=t.interface.driver,this.InterfaceNetwork=t.interface.network,this.InterfaceConf=t.interface.conf),t.label?this.Labels=t.label:this.Labels=[]}function o(e){this.name=e.Name,this.capacity=e.Capacity,this.directory=e.Directory,this.provision=e.Provisioning,this.type=e.Type,this.level=e.Redundancy,e.MinIOPS&&e.MaxIOPS&&(this.iops={min:e.MinIOPS,max:e.MaxIOPS}),e.MinBandwidth&&e.MaxBandwidth&&(this.bandwidth={min:e.MinBandwidth,max:e.MaxBandwidth}),this.filesystem={type:e.Filesystem};var t={};t.snapshot={enabled:e.SnapshotEnabled},e.SnapshotEnabled&&(t.snapshot.interval=e.SnapshotInterval,t.snapshot.max=e.SnapshotMax),t.encryption={enabled:e.EncryptionEnabled},this.service=t,this.interface={driver:e.InterfaceDriver,network:e.InterfaceNetwork,conf:e.InterfaceConf},e.InterfaceType&&(this.interface.type=e.InterfaceType),this.label=e.Labels}n.r(t),n.d(t,"StoridgeProfileDefaultModel",function(){return a}),n.d(t,"StoridgeProfileListModel",function(){return r}),n.d(t,"StoridgeProfileModel",function(){return i}),n.d(t,"StoridgeCreateProfileRequest",function(){return o})},,function(e,t,n){"use strict";n.r(t),n.d(t,"ScheduleDefaultModel",function(){return r}),n.d(t,"ScheduleModel",function(){return o}),n.d(t,"ScriptExecutionTaskModel",function(){return l}),n.d(t,"ScheduleCreateRequest",function(){return c}),n.d(t,"ScheduleUpdateRequest",function(){return d});var a=n(61);function r(){this.Name="",this.Recurring=!1,this.CronExpression="",this.JobType=1,this.Job=new i}function i(){this.Image="",this.Endpoints=[],this.FileContent="",this.File=null,this.Method="editor"}function o(e){this.Id=e.Id,this.Name=e.Name,this.Recurring=e.Recurring,this.JobType=e.JobType,this.CronExpression=e.CronExpression,this.Created=e.Created,1===this.JobType&&(this.Job=new s(e.ScriptExecutionJob))}function s(e){this.Image=e.Image,this.Endpoints=e.Endpoints,this.FileContent="",this.Method="editor",this.RetryCount=e.RetryCount,this.RetryInterval=e.RetryInterval}function l(e){this.Id=e.Id,this.EndpointId=e.EndpointId,this.Status=Object(a.createStatus)(e.Status),this.Created=e.Created}function c(e){this.Name=e.Name,this.Recurring=e.Recurring,this.CronExpression=e.CronExpression,this.Image=e.Job.Image,this.Endpoints=e.Job.Endpoints,this.FileContent=e.Job.FileContent,this.RetryCount=e.Job.RetryCount,this.RetryInterval=e.Job.RetryInterval,this.File=e.Job.File}function d(e){this.id=e.Id,this.Name=e.Name,this.Recurring=e.Recurring,this.CronExpression=e.CronExpression,this.Image=e.Job.Image,this.Endpoints=e.Job.Endpoints,this.FileContent=e.Job.FileContent,this.RetryCount=e.Job.RetryCount,this.RetryInterval=e.Job.RetryInterval}},,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"createStatus",function(){return s}),n.d(t,"ContainerViewModel",function(){return l}),n.d(t,"ContainerStatsViewModel",function(){return c}),n.d(t,"ContainerDetailsViewModel",function(){return d});n(1),n(19),n(34),n(5);var a=n(117),r=n(76),i=n(28),o=n(25);function s(e){var t=Object(i.a)(e);return t.indexOf("paused")>-1?"paused":t.indexOf("dead")>-1?"dead":t.indexOf("created")>-1?"created":t.indexOf("exited")>-1?"stopped":t.indexOf("(healthy)")>-1?"healthy":t.indexOf("(unhealthy)")>-1?"unhealthy":t.indexOf("(health: starting)")>-1?"starting":"running"}function l(e){if(this.Id=e.Id,this.Status=s(e.Status),this.State=e.State,this.Created=e.Created,this.Names=e.Names,e.NetworkSettings&&!Object(r.a)(e.NetworkSettings.Networks)&&(this.IP=e.NetworkSettings.Networks[Object.keys(e.NetworkSettings.Networks)[0]].IPAddress),this.NetworkSettings=e.NetworkSettings,this.Image=e.Image,this.ImageID=e.ImageID,this.Command=e.Command,this.Checked=!1,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),this.Mounts=e.Mounts,this.Ports=[],e.Ports)for(var t=0;t<e.Ports.length;++t){var n=e.Ports[t];n.PublicPort&&this.Ports.push({host:n.IP,private:n.PrivatePort,public:n.PublicPort})}e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new o.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName))}function c(e){this.read=e.read,this.preread=e.preread,void 0!==e.memory_stats.privateworkingset?(this.MemoryUsage=e.memory_stats.privateworkingset,this.MemoryCache=0,this.NumProcs=e.num_procs,this.isWindows=!0):void 0===e.memory_stats.stats||void 0===e.memory_stats.usage?this.MemoryUsage=this.MemoryCache=0:(this.MemoryUsage=e.memory_stats.usage-e.memory_stats.stats.cache,this.MemoryCache=e.memory_stats.stats.cache),this.PreviousCPUTotalUsage=e.precpu_stats.cpu_usage.total_usage,this.PreviousCPUSystemUsage=e.precpu_stats.system_cpu_usage,this.CurrentCPUTotalUsage=e.cpu_stats.cpu_usage.total_usage,this.CurrentCPUSystemUsage=e.cpu_stats.system_cpu_usage,e.cpu_stats.cpu_usage.percpu_usage&&(this.CPUCores=e.cpu_stats.cpu_usage.percpu_usage.length),this.Networks=Object(a.a)(e.networks)}function d(e){this.Model=e,this.Id=e.Id,this.State=e.State,this.Created=e.Created,this.Name=e.Name,this.NetworkSettings=e.NetworkSettings,this.Args=e.Args,this.Image=e.Image,this.Config=e.Config,this.HostConfig=e.HostConfig,this.Mounts=e.Mounts,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new o.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Type=e.Type,this.Name=e.Name,this.URL=e.URL,this.Authentication=e.Authentication,this.Username=e.Username,this.Password=e.Password,this.AuthorizedUsers=e.AuthorizedUsers,this.AuthorizedTeams=e.AuthorizedTeams,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies,this.Checked=!1}function r(e){this.Authentication=!1,this.Password="",this.TLS=!1,this.TLSSkipVerify=!1,this.TLSCACertFile=null,this.TLSCertFile=null,this.TLSKeyFile=null,1!==e.Type&&2!==e.Type||(this.Authentication=!0,this.Username=e.Username,this.TLS=!0),3===e.Type&&e.Authentication&&(this.Authentication=!0,this.Username=e.Username)}function i(){this.Type=3,this.URL="",this.Name="",this.Authentication=!1,this.Username="",this.Password=""}function o(e){this.Name=e.Name,this.Type=e.Type,this.URL=e.URL,this.Authentication=e.Authentication,e.Authentication&&(this.Username=e.Username,this.Password=e.Password)}n.r(t),n.d(t,"RegistryViewModel",function(){return a}),n.d(t,"RegistryManagementConfigurationDefaultModel",function(){return r}),n.d(t,"RegistryDefaultModel",function(){return i}),n.d(t,"RegistryCreateRequest",function(){return o})},,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"TemplateDefaultModel",function(){return r}),n.d(t,"TemplateCreateRequest",function(){return i}),n.d(t,"TemplateUpdateRequest",function(){return o}),n.d(t,"TemplateViewModel",function(){return s});n(70),n(3),n(11);var a=n(50);function r(){this.Type=1,this.AdministratorOnly=!1,this.Title="",this.Image="",this.Description="",this.Volumes=[],this.Ports=[],this.Env=[],this.Labels=[],this.RestartPolicy="always",this.Registry={}}function i(e){this.Type=e.Type,this.Name=e.Name,this.Hostname=e.Hostname,this.Title=e.Title,this.Description=e.Description,this.Note=e.Note,this.Categories=e.Categories,this.Platform=e.Platform,this.Logo=e.Logo,this.Image=e.Image,this.Registry=e.Registry.URL,this.Command=e.Command,this.Network=e.Network&&e.Network.Name,this.Privileged=e.Privileged,this.Interactive=e.Interactive,this.RestartPolicy=e.RestartPolicy,this.Labels=e.Labels,this.Repository=e.Repository,this.Env=e.Env,this.AdministratorOnly=e.AdministratorOnly,this.Ports=[];for(var t=0;t<e.Ports.length;t++){var n=e.Ports[t];if(n.containerPort&&n.protocol){var a=n.hostPort?n.hostPort+":"+n.containerPort+"/"+n.protocol:n.containerPort+"/"+n.protocol;this.Ports.push(a)}}this.Volumes=e.Volumes}function o(e){i.call(this,e),this.id=e.Id}function s(e){this.Id=e.Id,this.Title=e.title,this.Type=e.type,this.Description=e.description,this.AdministratorOnly=e.AdministratorOnly,this.Name=e.name,this.Note=e.note,this.Categories=e.categories?e.categories:[],this.Platform=e.platform?e.platform:"",this.Logo=e.logo,this.Repository=e.repository,this.Hostname=e.hostname,this.Registry=e.registry?{URL:e.registry}:{},this.Image=e.image,this.Registry=e.registry?e.registry:"",this.Command=e.command?e.command:"",this.Network=e.network?e.network:"",this.Privileged=!!e.privileged&&e.privileged,this.Interactive=!!e.interactive&&e.interactive,this.RestartPolicy=e.restart_policy?e.restart_policy:"always",this.Labels=e.labels?e.labels:[],this.Hosts=e.hosts?e.hosts:[],this.Env=function(e){var t=[];e.env&&(t=e.env.map(function(e){if(e.type=2,e.value=e.default?e.default:"",e.preset&&(e.type=1),e.select){e.type=3;for(var t=0;t<e.select.length;t++){var n=e.select[t];if(n.default){e.value=n.value;break}}}return e}));return t}(e),this.Volumes=function(e){var t=[];e.volumes&&(t=e.volumes.map(function(e){return{container:e.container,readonly:e.readonly||!1,type:e.bind?"bind":"auto",bind:e.bind?e.bind:null}}));return t}(e),this.Ports=function(e){var t=[];e.ports&&(t=e.ports.map(function(e){var t=Object(a.a)(e,"/"),n=Object(a.a)(t[0],":");return{hostPort:n.length>1?n[0]:void 0,containerPort:n.length>1?n[1]:n[0],protocol:t[1]}}));return t}(e)}},,,,,,,,function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.UserId=e.UserID,this.TeamId=e.TeamID,this.Role=e.Role}n.r(t),n.d(t,"TeamMembershipModel",function(){return a})},,,function(e,t,n){"use strict";n.r(t),n.d(t,"ImageViewModel",function(){return a}),n.d(t,"ImageBuildModel",function(){return r});n(42),n(5);function a(e){if(this.Id=e.Id,this.Tag=e.Tag,this.Repository=e.Repository,this.Created=e.Created,this.Checked=!1,this.RepoTags=e.RepoTags,!this.RepoTags&&e.RepoDigests){this.RepoTags=[];for(var t=0;t<e.RepoDigests.length;t++){var n=e.RepoDigests[t],a=n.substring(0,n.indexOf("@"));this.RepoTags.push(a+":<none>")}}this.VirtualSize=e.VirtualSize,this.ContainerCount=e.ContainerCount,e.Portainer&&e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName)}function r(e){this.hasError=!1;for(var t=[],n=0;n<e.length;n++){var a=e[n];a.stream&&(a=a.stream.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),t.push(a)),a.errorDetail&&(t.push(a.errorDetail.message),this.hasError=!0)}this.buildLogs=t}},function(e,t,n){"use strict";function a(){this.Name="",this.Description="",this.Tags=[]}function r(e){this.Id=e.Id,this.Name=e.Name,this.Description=e.Description,this.Tags=e.Tags,this.AuthorizedUsers=e.AuthorizedUsers,this.AuthorizedTeams=e.AuthorizedTeams,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies}function i(e,t){this.Name=e.Name,this.Description=e.Description,this.Tags=e.Tags,this.AssociatedEndpoints=t}function o(e,t){this.id=e.Id,this.Name=e.Name,this.Description=e.Description,this.Tags=e.Tags,this.AssociatedEndpoints=t,this.UserAccessPolicies=e.UserAccessPolicies,this.TeamAccessPolicies=e.TeamAccessPolicies}n.r(t),n.d(t,"EndpointGroupDefaultModel",function(){return a}),n.d(t,"EndpointGroupModel",function(){return r}),n.d(t,"EndpointGroupCreateRequest",function(){return i}),n.d(t,"EndpointGroupUpdateRequest",function(){return o})},,function(e,t,n){"use strict";n.r(t),n.d(t,"StackViewModel",function(){return r}),n.d(t,"ExternalStackViewModel",function(){return i});var a=n(25);function r(e){this.Id=e.Id,this.Type=e.Type,this.Name=e.Name,this.Checked=!1,this.EndpointId=e.EndpointId,this.SwarmId=e.SwarmId,this.Env=e.Env?e.Env:[],e.ResourceControl&&0!==e.ResourceControl.Id&&(this.ResourceControl=new a.ResourceControlViewModel(e.ResourceControl)),this.External=!1}function i(e,t){this.Name=e,this.Type=t,this.External=!0,this.Checked=!1}},,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ContainerGroupDefaultModel",function(){return a}),n.d(t,"ContainerGroupViewModel",function(){return r}),n.d(t,"CreateContainerGroupRequest",function(){return i});n(11);function a(){this.Location="",this.OSType="Linux",this.Name="",this.Image="",this.AllocatePublicIP=!0,this.Ports=[{container:80,host:80,protocol:"TCP"}],this.CPU=1,this.Memory=1}function r(e){this.Id=e.id,this.Name=e.name,this.Location=e.location,this.IPAddress=e.properties.ipAddress.ip,this.Ports=e.properties.ipAddress.ports}function i(e){this.location=e.Location;for(var t=[],n=[],a=0;a<e.Ports.length;a++){var r=e.Ports[a];t.push({port:r.container}),n.push({port:r.host,protocol:r.protocol})}this.properties={osType:e.OSType,containers:[{name:e.Name,properties:{image:e.Image,ports:t,resources:{requests:{cpu:e.CPU,memoryInGB:e.Memory}}}}],ipAddress:{type:e.AllocatePublicIP?"Public":"Private",ports:n}}}},,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ContainerCapabilities",function(){return r}),n.d(t,"ContainerCapability",function(){return i});n(289);var a={SETPCAP:"修改流程处理能力.",MKNOD:"使用mknod(2)创建特殊文件.",AUDIT_WRITE:"将记录写入内核审计日志.",CHOWN:"修改文件的UID和GID（请参阅chown(2)）.",NET_RAW:"使用RAW和PACKET套接字.",DAC_OVERRIDE:"绕过文件读取,写入,执行权限的检查.",FOWNER:"绕过对通常需要进程的文件系统UID匹配文件UID的操作权限检查.",FSETID:"修改文件时,不清除set-user-ID和set-group-ID的权限位.",KILL:"绕过权限检查发送的信号.",SETGID:"对进程GID和补充GID列表进行设置操作.",SETUID:"对进程UID进行设置操作.",NET_BIND_SERVICE:"将套接字绑定到Internet域的特权端口（端口号小于1024）.",SYS_CHROOT:"使用chroot(2),更改根目录.",SETFCAP:"设置文件功能.",SYS_MODULE:"加载和卸载内核模块.",SYS_RAWIO:"执行I/O端口操作（iopl(2)和ioperm(2)）.",SYS_PACCT:"使用acct(2),打开或关闭处理流程统计.",SYS_ADMIN:"执行一系列的系统管理操作.",SYS_NICE:"调整并更改进程的nice值（nice(2)，setpriority(2)）.",SYS_RESOURCE:"覆盖资源的限制设置.",SYS_TIME:"设置系统时钟（settimeofday(2),stime(2),adjtimex(2)）;设置实时（硬件）时钟.",SYS_TTY_CONFIG:"使用vhangup(2);在虚拟终端上使用各种特权ioctl(2)操作.",AUDIT_CONTROL:"启用和禁用内核审计;更改审计过滤规则;检索审计状态和过滤规则.",MAC_ADMIN:"允许配置MAC或更改状态,使用Smack LSM.",MAC_OVERRIDE:"覆盖强制访问控制（MAC）的设置. 使用Smack Linux安全模块（LSM）.",NET_ADMIN:"执行各种与网络相关的操作.",SYSLOG:"执行syslog(2)特权操作.",DAC_READ_SEARCH:"绕过文件读取和目录读取以及执行权限的检查.",LINUX_IMMUTABLE:"设置 FS_APPEND_FL 和 FS_IMMUTABLE_FL i-node 标志.",NET_BROADCAST:"进行套接字广播,并监听多播.",IPC_LOCK:"锁定内存（mlock(2)，mlockall(2)，mmap(2)，shmctl(2)）.",IPC_OWNER:"绕过为System V IPC对象操作的权限检查.",SYS_PTRACE:"使用ptrace(2)跟踪任意进程.",SYS_BOOT:"使用reboot(2)和kexec_load(2),重新启动并加载新内核以便执行后续操作.",LEASE:"建立起任意文件的租约（参见fcntl(2)）.",WAKE_ALARM:"指定触发系统唤醒的设置.",BLOCK_SUSPEND:"使用阻止系统挂起的功能."};function r(){return[new i("SETPCAP",!0),new i("MKNOD",!0),new i("AUDIT_WRITE",!0),new i("CHOWN",!0),new i("NET_RAW",!0),new i("DAC_OVERRIDE",!0),new i("FOWNER",!0),new i("FSETID",!0),new i("KILL",!0),new i("SETGID",!0),new i("SETUID",!0),new i("NET_BIND_SERVICE",!0),new i("SYS_CHROOT",!0),new i("SETFCAP",!0),new i("SYS_MODULE",!1),new i("SYS_RAWIO",!1),new i("SYS_PACCT",!1),new i("SYS_ADMIN",!1),new i("SYS_NICE",!1),new i("SYS_RESOURCE",!1),new i("SYS_TIME",!1),new i("SYS_TTY_CONFIG",!1),new i("AUDIT_CONTROL",!1),new i("MAC_ADMIN",!1),new i("MAC_OVERRIDE",!1),new i("NET_ADMIN",!1),new i("SYSLOG",!1),new i("DAC_READ_SEARCH",!1),new i("LINUX_IMMUTABLE",!1),new i("NET_BROADCAST",!1),new i("IPC_LOCK",!1),new i("IPC_OWNER",!1),new i("SYS_PTRACE",!1),new i("SYS_BOOT",!1),new i("LEASE",!1),new i("WAKE_ALARM",!1),new i("BLOCK_SUSPEND",!1)].sort(function(e,t){return e.capability<t.capability?-1:1})}function i(e,t){this.capability=e,this.allowed=t,this.description=a[e]}},function(e,t,n){"use strict";function a(e,t,n,a,r){this.EndpointId=t.Id,this.EndpointName=t.Name,this.RoleId=e.RoleId,this.RoleName=n[e.RoleId].Name,a&&(this.GroupId=a.Id,this.GroupName=a.Name),r&&(this.TeamId=r.Id,this.TeamName=r.Name),this.AccessLocation=a?"endpoint group":"endpoint"}n.r(t),n.d(t,"default",function(){return a})},,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(e){var t={};return t.file=e,t}n.r(t),n.d(t,"browseGetResponse",function(){return a})},function(e,t,n){"use strict";function a(){this.TLS=!1,this.TLSMode="tls_client_ca",this.TLSCACert=null,this.TLSCert=null,this.TLSKey=null}n.r(t),n.d(t,"EndpointSecurityFormData",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Username,this.Type="user",this.Inherited=!1,this.Override=!1,this.Role={Id:0,Name:"-"},this.icon='<i class="fa fa-user" aria-hidden="true"></i>'}function r(e){this.Id=e.Id,this.Name=e.Name,this.Type="team",this.Inherited=!1,this.Override=!1,this.Role={Id:0,Name:"-"},this.icon='<i class="fa fa-users" aria-hidden="true"></i>'}n.r(t),n.d(t,"UserAccessViewModel",function(){return a}),n.d(t,"TeamAccessViewModel",function(){return r})},,function(e,t,n){"use strict";n.r(t),n.d(t,"VolumeViewModel",function(){return r});var a=n(25);function r(e){this.Id=e.Name,this.CreatedAt=e.CreatedAt,this.Driver=e.Driver,this.Options=e.Options,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),this.Mountpoint=e.Mountpoint,e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName))}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t),n.d(t,"ConfigViewModel",function(){return r});var a=n(25);function r(e){this.Id=e.ID,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Labels=e.Spec.Labels,this.Data=atob(e.Spec.Data),e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";n.r(t),n.d(t,"NetworkViewModel",function(){return r});var a=n(25);function r(e){this.Id=e.Id,this.Name=e.Name,this.Scope=e.Scope,this.Driver=e.Driver,this.Attachable=e.Attachable,this.Internal=e.Internal,this.IPAM=e.IPAM,this.Containers=e.Containers,this.Options=e.Options,this.Labels=e.Labels,this.Labels&&this.Labels["com.docker.compose.project"]?this.StackName=this.Labels["com.docker.compose.project"]:this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]),e.Portainer&&(e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl)),e.Portainer.Agent&&e.Portainer.Agent.NodeName&&(this.NodeName=e.Portainer.Agent.NodeName)),this.ConfigFrom=e.ConfigFrom,this.ConfigOnly=e.ConfigOnly}},function(e,t,n){"use strict";n.r(t),n.d(t,"NodeViewModel",function(){return a});n(1),n(19),n(34),n(3);function a(e){this.Model=e,this.Id=e.ID,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Role=e.Spec.Role,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Availability=e.Spec.Availability;var t=e.Spec.Labels;this.Labels=t?Object.keys(t).map(function(e){return{key:e,value:t[e],originalKey:e,originalValue:t[e],added:!0}}):[];var n=e.Description.Engine.Labels;this.EngineLabels=n?Object.keys(n).map(function(e){return{key:e,value:n[e]}}):[],this.Hostname=e.Description.Hostname,this.PlatformArchitecture=e.Description.Platform.Architecture,this.PlatformOS=e.Description.Platform.OS,this.CPUs=e.Description.Resources.NanoCPUs,this.Memory=e.Description.Resources.MemoryBytes,this.EngineVersion=e.Description.Engine.EngineVersion,this.Plugins=e.Description.Engine.Plugins,this.Status=e.Status.State,e.Status.Addr&&(this.Addr=e.Status.Addr),e.ManagerStatus&&(this.Leader=e.ManagerStatus.Leader,this.Reachability=e.ManagerStatus.Reachability,this.ManagerAddr=e.ManagerStatus.Addr)}},function(e,t,n){"use strict";n.r(t),n.d(t,"SecretViewModel",function(){return r});var a=n(25);function r(e){this.Id=e.ID,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Version=e.Version.Index,this.Name=e.Spec.Name,this.Labels=e.Spec.Labels,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";n.r(t),n.d(t,"ServiceViewModel",function(){return i});n(129),n(130);var a=n(25);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,n){this.Model=e,this.Id=e.ID,this.Tasks=[],this.Name=e.Spec.Name,this.CreatedAt=e.CreatedAt,this.UpdatedAt=e.UpdatedAt,this.Image=e.Spec.TaskTemplate.ContainerSpec.Image,this.Version=e.Version.Index,e.Spec.Mode.Replicated?(this.Mode="replicated",this.Replicas=e.Spec.Mode.Replicated.Replicas):(this.Mode="global",n&&(this.Replicas=n.length)),t&&(this.Running=t.length),e.Spec.TaskTemplate.Resources&&(e.Spec.TaskTemplate.Resources.Limits&&(this.LimitNanoCPUs=e.Spec.TaskTemplate.Resources.Limits.NanoCPUs,this.LimitMemoryBytes=e.Spec.TaskTemplate.Resources.Limits.MemoryBytes),e.Spec.TaskTemplate.Resources.Reservations&&(this.ReservationNanoCPUs=e.Spec.TaskTemplate.Resources.Reservations.NanoCPUs,this.ReservationMemoryBytes=e.Spec.TaskTemplate.Resources.Reservations.MemoryBytes)),e.Spec.TaskTemplate.RestartPolicy?(this.RestartCondition=e.Spec.TaskTemplate.RestartPolicy.Condition||"any",this.RestartDelay=e.Spec.TaskTemplate.RestartPolicy.Delay||5e9,this.RestartMaxAttempts=e.Spec.TaskTemplate.RestartPolicy.MaxAttempts||0,this.RestartWindow=e.Spec.TaskTemplate.RestartPolicy.Window||0):(this.RestartCondition="any",this.RestartDelay=5e9,this.RestartMaxAttempts=0,this.RestartWindow=0),e.Spec.TaskTemplate.LogDriver?(this.LogDriverName=e.Spec.TaskTemplate.LogDriver.Name||"",this.LogDriverOpts=e.Spec.TaskTemplate.LogDriver.Options||[]):(this.LogDriverName="",this.LogDriverOpts=[]),this.Constraints=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Constraints||[],this.Preferences=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Preferences||[],this.Platforms=e.Spec.TaskTemplate.Placement&&e.Spec.TaskTemplate.Placement.Platforms||[],this.Labels=e.Spec.Labels,this.Labels&&this.Labels["com.docker.stack.namespace"]&&(this.StackName=this.Labels["com.docker.stack.namespace"]);var i=e.Spec.TaskTemplate.ContainerSpec;i&&(this.ContainerLabels=i.Labels,this.Command=i.Command,this.Arguments=i.Args,this.Hostname=i.Hostname,this.Env=i.Env,this.Dir=i.Dir,this.User=i.User,this.Groups=i.Groups,this.TTY=i.TTY,this.OpenStdin=i.OpenStdin,this.ReadOnly=i.ReadOnly,this.Mounts=i.Mounts||[],this.StopSignal=i.StopSignal,this.StopGracePeriod=i.StopGracePeriod,this.HealthCheck=i.HealthCheck||{},this.Hosts=i.Hosts,this.DNSConfig=i.DNSConfig,this.Secrets=i.Secrets,this.Configs=i.Configs),e.Endpoint&&(this.Ports=e.Endpoint.Ports),this.LogDriver=e.Spec.TaskTemplate.LogDriver,this.Runtime=e.Spec.TaskTemplate.Runtime,this.VirtualIPs=e.Endpoint?e.Endpoint.VirtualIPs:[],e.Spec.UpdateConfig?(this.UpdateParallelism=void 0!==r(e.Spec.UpdateConfig.Parallelism)?e.Spec.UpdateConfig.Parallelism||0:1,this.UpdateDelay=e.Spec.UpdateConfig.Delay||0,this.UpdateFailureAction=e.Spec.UpdateConfig.FailureAction||"pause",this.UpdateOrder=e.Spec.UpdateConfig.Order||"stop-first"):(this.UpdateParallelism=1,this.UpdateDelay=0,this.UpdateFailureAction="pause",this.UpdateOrder="stop-first"),this.RollbackConfig=e.Spec.RollbackConfig,this.Checked=!1,this.Scale=!1,this.EditName=!1,e.Portainer&&e.Portainer.ResourceControl&&(this.ResourceControl=new a.ResourceControlViewModel(e.Portainer.ResourceControl))}},function(e,t,n){"use strict";function a(e){this.Id=e.ID,this.Created=e.CreatedAt,this.Updated=e.UpdatedAt,this.Slot=e.Slot,this.Spec=e.Spec,this.Status=e.Status,this.DesiredState=e.DesiredState,this.ServiceId=e.ServiceID,this.NodeId=e.NodeID,e.Status&&e.Status.ContainerStatus&&e.Status.ContainerStatus.ContainerID&&(this.ContainerId=e.Status.ContainerStatus.ContainerID)}n.r(t),n.d(t,"TaskViewModel",function(){return a})},,,,,,,,function(e,t,n){"use strict";function a(e){this.Id=e.driveid,this.Node=e.node,this.Use=e.use,this.Status=e.drivestatus.toLowerCase(),this.Size=e.size,this.Type=e.type,this.Device=e.device}n.r(t),n.d(t,"StoridgeDriveModel",function(){return a})},function(e,t,n){"use strict";function a(e,t){this.Name=e,this.IP=t.ip,this.Role=t.role,this.Status=t.status}function r(e,t){this.Name=e,this.Condition=t.condition,this.Domain=t.domain,this.DomainID=t.domainID,this.FreeBandwidth=t.freeBandwidth,this.FreeCapacity=t.freeCapacity,this.FreeIOPS=t.freeIOPS,this.Hdds=t.hdds,this.MetadataVersion=t.metadataVersion,this.Nodes=t.nodes,this.ProvisionedBandwidth=t.provisionedBandwidth,this.ProvisionedCapacity=t.provisionedCapacity,this.ProvisionedIOPS=t.provisionedIOPS,this.Ssds=t.ssds,this.Status=t.status,this.TotalBandwidth=t.totalBandwidth,this.TotalCapacity=t.totalCapacity,this.TotalIOPS=t.totalIOPS,this.UsedBandwidth=t.usedBandwidth,this.UsedCapacity=t.usedCapacity,this.UsedIOPS=t.usedIOPS,this.Vdisks=t.vdisks}n.r(t),n.d(t,"StoridgeNodeModel",function(){return a}),n.d(t,"StoridgeNodeDetailedModel",function(){return r})},function(e,t,n){"use strict";function a(e){this.Id=e.identifier,this.Date=e.date,this.Description=e.description,this.SourceID=e.sourceid,this.Type=e.type,this.Directory=e.directory,this.Source=e.source}n.r(t),n.d(t,"StoridgeSnapshotModel",function(){return a})},function(e,t,n){"use strict";n.r(t),n.d(t,"StoridgeVolumeModel",function(){return a}),n.d(t,"StoridgeVolumeUpdateModel",function(){return r});n(11);function a(e){this.Allocated=e.allocated,this.Capacity=e.capacity,this.Directory=e.directory,this.IOPSMax=e.maximumIOPS,this.IOPSMin=e.minimumIOPS,this.BandwidthMin=e.minimumBandwidth,this.BandwidthMax=e.maximumBandwidth,this.LocalDriveOnly=e.localDriveOnly,this.Name=e.name,this.Node=e.node,this.NodeID=e.nodeid,this.Provisioning=e.provisioning,this.Redundancy=e.redundancy,this.Uuid=e.uuid,this.Vdisk=e.vdisk,this.Labels=e.labels,this.IP=e.ipaddr,this.DriveType=e.driveType,this.Encryption=e.encryption,this.SnapshotEnabled=e.snapshot,this.SnapshotInterval=e.snapInterval,this.SnapshotMax=e.maximumSnapshots,this.Filesystem=e.filesystem}function r(e){this.name=e.Name,this.opts={node:e.Node,nodeid:e.NodeID,capacity:e.Capacity,iopsmin:e.IOPSMin,iopsmax:e.IOPSMax,bandwidthmin:e.BandwidthMin,bandwidthmax:e.BandwidthMax},this.labels=e.Labels}},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Enabled=e.Enabled,this.Description=e.Description,this.Price=e.Price,this.PriceDescription=e.PriceDescription,this.Available=e.Available,this.Deal=e.Deal,this.ShortDescription=e.ShortDescription,this.License=e.License,this.Version=e.Version,this.UpdateAvailable=e.UpdateAvailable,this.ShopURL=e.ShopURL,this.Images=e.Images,this.Logo=e.Logo}n.r(t),n.d(t,"ExtensionViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.LogoURL=e.LogoURL,this.BlackListedLabels=e.BlackListedLabels,this.AuthenticationMethod=e.AuthenticationMethod,this.LDAPSettings=e.LDAPSettings,this.OAuthSettings=new l(e.OAuthSettings),this.AllowBindMountsForRegularUsers=e.AllowBindMountsForRegularUsers,this.AllowPrivilegedModeForRegularUsers=e.AllowPrivilegedModeForRegularUsers,this.SnapshotInterval=e.SnapshotInterval,this.TemplatesURL=e.TemplatesURL,this.ExternalTemplates=e.ExternalTemplates,this.EnableHostManagementFeatures=e.EnableHostManagementFeatures}function r(e){this.AllowBindMountsForRegularUsers=e.AllowBindMountsForRegularUsers,this.AllowPrivilegedModeForRegularUsers=e.AllowPrivilegedModeForRegularUsers,this.AuthenticationMethod=e.AuthenticationMethod,this.EnableHostManagementFeatures=e.EnableHostManagementFeatures,this.ExternalTemplates=e.ExternalTemplates,this.LogoURL=e.LogoURL,this.OAuthLoginURI=e.OAuthLoginURI}function i(e){this.ReaderDN=e.ReaderDN,this.Password=e.Password,this.URL=e.URL,this.SearchSettings=e.SearchSettings,this.GroupSearchSettings=e.GroupSearchSettings,this.AutoCreateUsers=e.AutoCreateUsers}function o(e,t,n){this.BaseDN=e,this.UsernameAttribute=t,this.Filter=n}function s(e,t,n){this.GroupBaseDN=e,this.GroupAttribute=t,this.GroupFilter=n}function l(e){this.ClientID=e.ClientID,this.ClientSecret=e.ClientSecret,this.AccessTokenURI=e.AccessTokenURI,this.AuthorizationURI=e.AuthorizationURI,this.ResourceURI=e.ResourceURI,this.RedirectURI=e.RedirectURI,this.UserIdentifier=e.UserIdentifier,this.Scopes=e.Scopes,this.OAuthAutoCreateUsers=e.OAuthAutoCreateUsers,this.DefaultTeamID=e.DefaultTeamID}n.r(t),n.d(t,"SettingsViewModel",function(){return a}),n.d(t,"PublicSettingsViewModel",function(){return r}),n.d(t,"LDAPSettingsViewModel",function(){return i}),n.d(t,"LDAPSearchSettings",function(){return o}),n.d(t,"LDAPGroupSearchSettings",function(){return s}),n.d(t,"OAuthSettingsViewModel",function(){return l})},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Checked=!1}n.r(t),n.d(t,"TeamViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Username=e.Username,this.Role=e.Role,1===e.Role?this.RoleName="administrator":this.RoleName="user",this.AuthenticationMethod=e.AuthenticationMethod,this.Checked=!1}n.r(t),n.d(t,"UserViewModel",function(){return a})},,,,,,,,,,,,function(e,t,n){e.exports=n.p+"666a4f1da620c36d1a5d2d4d920f501c.png"},,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";function a(e){this.IPAddress=e.IPAddress,this.NodeName=e.NodeName,this.NodeRole=e.NodeRole}n.r(t),n.d(t,"AgentViewModel",function(){return a})},function(e,t,n){"use strict";n.r(t),n.d(t,"LocationViewModel",function(){return a});n(11);function a(e){this.Id=e.id,this.SubscriptionId=e.subscriptionId,this.DisplayName=e.displayName,this.Name=e.name}},function(e,t,n){"use strict";n.r(t),n.d(t,"ContainerInstanceProviderViewModel",function(){return r});var a=n(4);function r(e){this.Id=e.id,this.Namespace=e.namespace;var t=Object(a.a)(e.resourceTypes,{resourceType:"containerGroups"});this.Locations=t.locations}},function(e,t,n){"use strict";n.r(t),n.d(t,"ResourceGroupViewModel",function(){return a});n(11);function a(e,t){this.Id=e.id,this.SubscriptionId=t,this.Name=e.name,this.Location=e.location}},function(e,t,n){"use strict";function a(e){this.Id=e.subscriptionId,this.Name=e.displayName}n.r(t),n.d(t,"SubscriptionViewModel",function(){return a})},function(e,t,n){"use strict";function a(){this.Scope="local",this.SelectedNetworkConfig="",this.DatatableState={selectedItems:[]},this.ParentNetworkCard=""}n.r(t),n.d(t,"MacvlanFormData",function(){return a})},function(e,t,n){"use strict";function a(){this.useNFS=!1,this.serverAddress="",this.mountPoint="",this.version="NFS4",this.options="rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14",this.versions=["NFS4","NFS"]}n.r(t),n.d(t,"VolumesNFSFormData",function(){return a})},function(e,t,n){"use strict";n.r(t),n.d(t,"EventViewModel",function(){return a});n(5),n(11);function a(e){this.Time=e.time,e.Type?(this.Type=e.Type,this.Details=function(e){var t=e.Actor.Attributes,n="";switch(e.Type){case"container":switch(e.Action){case"stop":n="容器 "+t.name+" 已停止";break;case"destroy":n="容器 "+t.name+" 已删除";break;case"create":n="容器 "+t.name+" 已创建";break;case"start":n="容器 "+t.name+" 已启动";break;case"kill":n="容器 "+t.name+" 已终止";break;case"die":n="容器 "+t.name+" 已退出，状态码 "+t.exitCode;break;case"commit":n="容器 "+t.name+" 已提交";break;case"restart":n="容器 "+t.name+" 已重启";break;case"pause":n="容器 "+t.name+" 已暂停";break;case"unpause":n="容器 "+t.name+" 已取消暂停";break;case"attach":n="容器 "+t.name+" 已附加";break;case"detach":n="容器 "+t.name+" 已分离";break;case"copy":n="容器 "+t.name+" 已复制";break;case"export":n="容器 "+t.name+" 已导出";break;case"health_status":n="容器 "+t.name+" 执行健康状态检查";break;case"oom":n="容器 "+t.name+" 内存不足";break;case"rename":n="容器 "+t.name+" 已重命名";break;case"resize":n="容器 "+t.name+" 已调整";break;case"top":n="显示容器正在运行的进程 "+t.name;break;case"update":n="容器 "+t.name+" 已更新";break;default:n=0===e.Action.indexOf("exec_create")?"运行实例已创建":0===e.Action.indexOf("exec_start")?"运行实例已启动":"不支持的事件"}break;case"image":switch(e.Action){case"delete":n="镜像已删除";break;case"import":n="镜像 "+e.Actor.ID+" 已导入";break;case"load":n="镜像 "+e.Actor.ID+" 已载入";break;case"tag":n="已为 "+t.name+" 创建新的标签";break;case"untag":n="镜像已取消标签";break;case"save":n="镜像 "+e.Actor.ID+" 已保存";break;case"pull":n="镜像 "+e.Actor.ID+" 已拉取";break;case"push":n="镜像 "+e.Actor.ID+" 已推送";break;default:n="不支持的事件"}break;case"network":switch(e.Action){case"create":n="网络 "+t.name+" 已创建";break;case"destroy":n="网络 "+t.name+" 已删除";break;case"remove":n="网络 "+t.name+" 已移除";break;case"connect":n="容器已连接到 "+t.name+" 网络";break;case"disconnect":n="容器已从网络 "+t.name+" 断开";break;default:n="不支持的事件"}break;case"volume":switch(e.Action){case"create":n="存储卷 "+e.Actor.ID+" 已创建";break;case"destroy":n="存储卷 "+e.Actor.ID+" 已删除";break;case"mount":n="存储卷 "+e.Actor.ID+" 已挂载";break;case"unmount":n="存储卷 "+e.Actor.ID+" 已卸载";break;default:n="不支持的事件"}break;default:n="不支持的事件"}return n}(e)):(this.Type=e.status,this.Details=e.from)}},function(e,t,n){"use strict";n.r(t),n.d(t,"ImageDetailsViewModel",function(){return a});n(1),n(19),n(34);function a(e){this.Id=e.Id,this.Tag=e.Tag,this.Parent=e.Parent,this.Repository=e.Repository,this.Created=e.Created,this.Checked=!1,this.RepoTags=e.RepoTags,this.VirtualSize=e.VirtualSize,this.DockerVersion=e.DockerVersion,this.Os=e.Os,this.Architecture=e.Architecture,this.Author=e.Author,this.Command=e.Config.Cmd,this.Entrypoint=e.ContainerConfig.Entrypoint?e.ContainerConfig.Entrypoint:"",this.ExposedPorts=e.ContainerConfig.ExposedPorts?Object.keys(e.ContainerConfig.ExposedPorts):[],this.Volumes=e.ContainerConfig.Volumes?Object.keys(e.ContainerConfig.Volumes):[],this.Env=e.ContainerConfig.Env?e.ContainerConfig.Env:[]}},function(e,t,n){"use strict";function a(e,t){this.Order=e,this.Id=t.Id,this.Created=t.Created,this.CreatedBy=t.CreatedBy,this.Size=t.Size,this.Comment=t.Comment,this.Tags=t.Tags}n.r(t),n.d(t,"ImageLayerViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Name=e.Name,this.Enabled=e.Enabled,this.Config=e.Config}n.r(t),n.d(t,"PluginViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.ID}n.r(t),n.d(t,"SwarmViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){var t={};return t.file=e,t}n.r(t),n.d(t,"imageGetResponse",function(){return a})},function(e,t,n){"use strict";function a(e){this.ID=e.Id,this.Name=e.Name,this.Description=e.Description,this.Authorizations=e.Authorizations}n.r(t),n.d(t,"RoleViewModel",function(){return a})},function(e,t,n){"use strict";function a(e,t,n,a,r,i,o,s,l,c){this.Name=e,this.ImageId=t,this.Os=n,this.Architecture=a,this.Size=r,this.Digest=i,this.RepositoryName=o,this.FsLayers=s,this.History=l,this.ManifestV2=c}n.r(t),n.d(t,"RepositoryTagViewModel",function(){return a})},function(e,t,n){"use strict";n.r(t),n.d(t,"RegistryRepositoryViewModel",function(){return a});n(11);function a(e){this.Name=e.name,this.TagsCount=e.tags.length}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return a});n(5),n(20);function a(e,t){var n=angular.fromJson(e),a=t("link");if(a)for(var r=a.substring(a.indexOf("?")+1).split(">;")[0].split("&"),i=0;i<r.length;i++){var o=r[i].split("=");n[o[0]]=o[1]}return n}},function(e,t,n){"use strict";function a(e){this.Time=e.time,this.Category=e.category,this.Module=e.module,this.Content=e.content}n.r(t),n.d(t,"StoridgeEventModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Domain=e.domain,this.Nodes=e.nodes,this.Condition=e.condition,this.ProvisionedBandwidth=e.provisionedBandwidth,this.UsedBandwidth=e.usedBandwidth,this.FreeBandwidth=e.freeBandwidth,this.TotalBandwidth=e.totalBandwidth,this.ProvisionedIOPS=e.provisionedIOPS,this.UsedIOPS=e.usedIOPS,this.FreeIOPS=e.freeIOPS,this.TotalIOPS=e.totalIOPS,this.ProvisionedCapacity=e.provisionedCapacity,this.UsedCapacity=e.usedCapacity,this.FreeCapacity=e.freeCapacity,this.TotalCapacity=e.totalCapacity}n.r(t),n.d(t,"StoridgeInfoModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Name="DockerHub",this.URL="",this.Authentication=e.Authentication,this.Username=e.Username,this.Password=e.Password}n.r(t),n.d(t,"DockerHubViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Title=e.Title,this.Message=e.Message,this.Hash=e.Hash,this.Style=e.Style,this.ContentLayout=e.ContentLayout}n.r(t),n.d(t,"MotdViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Authentication=e.Authentication,this.Snapshot=e.Snapshot,this.EndpointManagement=e.EndpointManagement,this.Analytics=e.Analytics,this.Version=e.Version}n.r(t),n.d(t,"StatusViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.ID,this.Name=e.Name}n.r(t),n.d(t,"TagViewModel",function(){return a})},function(e,t,n){"use strict";function a(e){this.Id=e.Id,this.Token=e.Token,this.ResourceId=e.ResourceID,this.EndpointId=e.EndpointID,this.WebhookType=e.WebhookType}n.r(t),n.d(t,"WebhookViewModel",function(){return a})},,,,,function(e,t,n){"use strict";n.r(t);n(19),n(1),n(6),n(350);var a=n(16),r=n.n(a);n(269),n(270),n(271),n(272),n(273);r.a.module("portainer",["ui.bootstrap","ui.router","ui.select","isteven-multi-select","ngCookies","ngSanitize","ngFileUpload","ngMessages","ngResource","angularUtils.directives.dirPagination","LocalStorageModule","angular-jwt","angular-google-analytics","angular-json-tree","angular-loading-bar","angular-clipboard","ngFileSaver","luegg.directives","portainer.app","portainer.agent","portainer.azure","portainer.docker","portainer.extensions","extension.storidge","rzModule","moment-picker"]);var i=n(442);i.keys().forEach(function(e){i(e)})},,,,function(e,t){angular.module("portainer.agent",[])},function(e,t,n){var a=n(352),r=n(353),i=n(354);angular.module("portainer.azure",["portainer.app"]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"azure.containerinstances",url:"/containerinstances",views:{"content@":{templateUrl:a,controller:"AzureContainerInstancesController"}}},n={name:"azure.containerinstances.new",url:"/new/",views:{"content@":{templateUrl:r,controller:"AzureCreateContainerInstanceController"}}},o={name:"azure.dashboard",url:"/dashboard",views:{"content@":{templateUrl:i,controller:"AzureDashboardController"}}};e.register({name:"azure",url:"/azure",parent:"root",abstract:!0}),e.register(t),e.register(n),e.register(o)}])},function(e,t,n){var a=n(355),r=n(356),i=n(357),o=n(358),s=n(359),l=n(360),c=n(361),d=n(362),p=n(363),u=n(364),m=n(365),g=n(366),f=n(367),v=n(368),h=n(369),b=n(370),x=n(371),y=n(372),w=n(373),k=n(374),$=n(375),S=n(376),C=n(377),I=n(378),P=n(379),T=n(380),A=n(381),D=n(382),N=n(383),O=n(384),E=n(385),R=n(386),L=n(387),_=n(388),V=n(389);angular.module("portainer.docker",["portainer.app"]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"docker.configs",url:"/configs",views:{"content@":{templateUrl:a,controller:"ConfigsController",controllerAs:"ctrl"}}},n={name:"docker.configs.config",url:"/:id",views:{"content@":{templateUrl:r,controller:"ConfigController"}}},U={name:"docker.configs.new",url:"/new?id",views:{"content@":{templateUrl:i,controller:"CreateConfigController",controllerAs:"ctrl"}}},M={name:"docker.containers",url:"/containers",views:{"content@":{templateUrl:o,controller:"ContainersController"}}},B={name:"docker.containers.container",url:"/:id?nodeName",views:{"content@":{templateUrl:s,controller:"ContainerController"}}},j={name:"docker.containers.container.attach",url:"/attach",views:{"content@":{templateUrl:l,controller:"ContainerConsoleController"}}},F={name:"docker.containers.container.exec",url:"/exec",views:{"content@":{templateUrl:c,controller:"ContainerConsoleController"}}},z={name:"docker.containers.new",url:"/new?nodeName&from",views:{"content@":{templateUrl:d,controller:"CreateContainerController"}}},H={name:"docker.containers.container.inspect",url:"/inspect",views:{"content@":{templateUrl:p,controller:"ContainerInspectController"}}},G={name:"docker.containers.container.logs",url:"/logs",views:{"content@":{templateUrl:u,controller:"ContainerLogsController"}}},q={name:"docker.containers.container.stats",url:"/stats",views:{"content@":{templateUrl:m,controller:"ContainerStatsController"}}},K={name:"docker.dashboard",url:"/dashboard",views:{"content@":{templateUrl:g,controller:"DashboardController"}}},W={name:"docker.events",url:"/events",views:{"content@":{templateUrl:f,controller:"EventsController"}}},J={name:"docker.images",url:"/images",views:{"content@":{templateUrl:v,controller:"ImagesController"}}},Q={name:"docker.images.image",url:"/:id?nodeName",views:{"content@":{templateUrl:h,controller:"ImageController"}}},Y={name:"docker.images.build",url:"/build",views:{"content@":{templateUrl:b,controller:"BuildImageController"}}},X={name:"docker.images.import",url:"/import",views:{"content@":{templateUrl:x,controller:"ImportImageController"}}},Z={name:"docker.networks",url:"/networks",views:{"content@":{templateUrl:y,controller:"NetworksController"}}},ee={name:"docker.networks.network",url:"/:id?nodeName",views:{"content@":{templateUrl:w,controller:"NetworkController"}}},te={name:"docker.networks.new",url:"/new",views:{"content@":{templateUrl:k,controller:"CreateNetworkController"}}},ne={name:"docker.secrets",url:"/secrets",views:{"content@":{templateUrl:$,controller:"SecretsController"}}},ae={name:"docker.secrets.secret",url:"/:id",views:{"content@":{templateUrl:S,controller:"SecretController"}}},re={name:"docker.secrets.new",url:"/new",views:{"content@":{templateUrl:C,controller:"CreateSecretController"}}},ie={name:"docker.services",url:"/services",views:{"content@":{templateUrl:I,controller:"ServicesController"}}},oe={name:"docker.services.service",url:"/:id",views:{"content@":{templateUrl:P,controller:"ServiceController"}}},se={name:"docker.services.new",url:"/new",views:{"content@":{templateUrl:T,controller:"CreateServiceController"}}},le={name:"docker.services.service.logs",url:"/logs",views:{"content@":{templateUrl:A,controller:"ServiceLogsController"}}},ce={name:"docker.swarm",url:"/swarm",views:{"content@":{templateUrl:D,controller:"SwarmController"}}},de={name:"docker.swarm.visualizer",url:"/visualizer",views:{"content@":{templateUrl:N,controller:"SwarmVisualizerController"}}},pe={name:"docker.tasks.task",url:"/:id",views:{"content@":{templateUrl:O,controller:"TaskController"}}},ue={name:"docker.tasks.task.logs",url:"/logs",views:{"content@":{templateUrl:E,controller:"TaskLogsController"}}},me={name:"docker.volumes",url:"/volumes",views:{"content@":{templateUrl:R,controller:"VolumesController"}}},ge={name:"docker.volumes.volume",url:"/:id?nodeName",views:{"content@":{templateUrl:L,controller:"VolumeController"}}},fe={name:"docker.volumes.volume.browse",url:"/browse",views:{"content@":{templateUrl:_,controller:"BrowseVolumeController"}}},ve={name:"docker.volumes.new",url:"/new",views:{"content@":{templateUrl:V,controller:"CreateVolumeController"}}};e.register(t),e.register(n),e.register(U),e.register(M),e.register(B),e.register(F),e.register(j),e.register(z),e.register(H),e.register(G),e.register(q),e.register({name:"docker",parent:"root",abstract:!0,resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]}}),e.register(K),e.register({name:"docker.host",url:"/host",views:{"content@":{component:"hostView"}}}),e.register({name:"docker.host.browser",url:"/browser",views:{"content@":{component:"hostBrowserView"}}}),e.register({name:"docker.host.job",url:"/job",views:{"content@":{component:"hostJobView"}}}),e.register(W),e.register(J),e.register(Q),e.register(Y),e.register(X),e.register(Z),e.register(ee),e.register(te),e.register({name:"docker.nodes",url:"/nodes",abstract:!0}),e.register({name:"docker.nodes.node",url:"/:id",views:{"content@":{component:"nodeDetailsView"}}}),e.register({name:"docker.nodes.node.browse",url:"/browse",views:{"content@":{component:"nodeBrowserView"}}}),e.register({name:"docker.nodes.node.job",url:"/job",views:{"content@":{component:"nodeJobView"}}}),e.register(ne),e.register(ae),e.register(re),e.register(ie),e.register(oe),e.register(se),e.register(le),e.register(ce),e.register(de),e.register({name:"docker.tasks",url:"/tasks",abstract:!0}),e.register(pe),e.register(ue),e.register(me),e.register(ge),e.register(fe),e.register(ve)}])},function(e,t,n){var a=n(390),r=n(391),i=n(392),o=n(393),s=n(394),l=n(395),c=n(396),d=n(397),p=n(398);angular.module("extension.storidge",[]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"storidge.profiles",url:"/profiles",views:{"content@":{templateUrl:a,controller:"StoridgeProfilesController"}}},n={name:"storidge.profiles.profile",url:"/:id",views:{"content@":{templateUrl:r,controller:"StoridgeProfileController"}}},u={name:"storidge.drives",url:"/drives",views:{"content@":{templateUrl:i,controller:"StoridgeDrivesController"}}},m={name:"storidge.drives.drive",url:"/:id",views:{"content@":{templateUrl:o,controller:"StoridgeDriveController"}}},g={name:"docker.volumes.volume.snapshot",url:"/:snapshotId",views:{"content@":{templateUrl:s,controller:"StoridgeSnapshotController"}}},f={name:"storidge.profiles.new",url:"/new",params:{profileName:""},views:{"content@":{templateUrl:l,controller:"StoridgeCreateProfileController"}}},v={name:"storidge.cluster",url:"/cluster",views:{"content@":{templateUrl:c,controller:"StoridgeClusterController"}}},h={name:"storidge.cluster.node",url:"/:name",views:{"content@":{templateUrl:d,controller:"StoridgeNodeController"}}},b={name:"storidge.monitor",url:"/events",views:{"content@":{templateUrl:p,controller:"StoridgeMonitorController"}}};e.register({name:"storidge",parent:"root",abstract:!0,url:"/storidge"}),e.register(u),e.register(m),e.register(g),e.register(t),e.register(n),e.register(f),e.register(v),e.register(h),e.register(b)}])},function(e,t,n){var a=n(399),r=n(402),i=n(403),o=n(404),s=n(405),l=n(406),c=n(407),d=n(408),p=n(409),u=n(410),m=n(411),g=n(412),f=n(413),v=n(414),h=n(415),b=n(416),x=n(417),y=n(418),w=n(419),k=n(420),$=n(421),S=n(422),C=n(423),I=n(424),P=n(425),T=n(426),A=n(427),D=n(428),N=n(429),O=n(430),E=(n(431),n(432),n(433)),R=n(434),L=n(435),_=n(436),V=n(437),U=n(438),M=n(439),B=n(440),j=n(441);angular.module("portainer.app",[]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"root",abstract:!0,resolve:{requiresLogin:["StateManager",function(e){return e.getState().application.authentication}]},views:{"sidebar@":{templateUrl:a,controller:"SidebarController"}}},n={name:"portainer.about",url:"/about",views:{"content@":{templateUrl:r}}},F={name:"portainer.account",url:"/account",views:{"content@":{templateUrl:i,controller:"AccountController"}}},z={name:"portainer.auth",url:"/auth",params:{logout:!1,error:""},views:{"content@":{templateUrl:o,controller:"AuthenticationController"},"sidebar@":{}},data:{requiresLogin:!1}},H={name:"portainer.endpoints",url:"/endpoints",views:{"content@":{templateUrl:s,controller:"EndpointsController"}}},G={name:"portainer.endpoints.endpoint",url:"/:id",views:{"content@":{templateUrl:l,controller:"EndpointController"}}},q={name:"portainer.endpoints.new",url:"/new",views:{"content@":{templateUrl:c,controller:"CreateEndpointController"}}},K={name:"portainer.endpoints.endpoint.access",url:"/access",views:{"content@":{templateUrl:d,controller:"EndpointAccessController",controllerAs:"ctrl"}}},W={name:"portainer.groups",url:"/groups",views:{"content@":{templateUrl:p,controller:"GroupsController"}}},J={name:"portainer.groups.group",url:"/:id",views:{"content@":{templateUrl:u,controller:"GroupController"}}},Q={name:"portainer.groups.new",url:"/new",views:{"content@":{templateUrl:m,controller:"CreateGroupController"}}},Y={name:"portainer.groups.group.access",url:"/access",views:{"content@":{templateUrl:g,controller:"GroupAccessController"}}},X={name:"portainer.home",url:"/home",views:{"content@":{templateUrl:f,controller:"HomeController"}}},Z={name:"portainer.init.endpoint",url:"/endpoint",views:{"content@":{templateUrl:v,controller:"InitEndpointController"}}},ee={name:"portainer.init.admin",url:"/admin",views:{"content@":{templateUrl:h,controller:"InitAdminController"}}},te={name:"portainer.extensions",url:"/extensions",views:{"content@":{templateUrl:b,controller:"ExtensionsController"}}},ne={name:"portainer.extensions.extension",url:"/extension/:id",views:{"content@":{templateUrl:x,controller:"ExtensionController"}}},ae={name:"portainer.registries",url:"/registries",views:{"content@":{templateUrl:y,controller:"RegistriesController"}}},re={name:"portainer.registries.registry",url:"/:id",views:{"content@":{templateUrl:w,controller:"RegistryController"}}},ie={name:"portainer.registries.new",url:"/new",views:{"content@":{templateUrl:k,controller:"CreateRegistryController"}}},oe={name:"portainer.registries.registry.access",url:"/access",views:{"content@":{templateUrl:$,controller:"RegistryAccessController"}}},se={name:"portainer.schedules",url:"/schedules",views:{"content@":{templateUrl:S,controller:"SchedulesController"}}},le={name:"portainer.schedules.schedule",url:"/:id",views:{"content@":{templateUrl:C,controller:"ScheduleController"}}},ce={name:"portainer.schedules.new",url:"/new",views:{"content@":{templateUrl:I,controller:"CreateScheduleController"}}},de={name:"portainer.settings",url:"/settings",views:{"content@":{templateUrl:P,controller:"SettingsController"}}},pe={name:"portainer.settings.authentication",url:"/auth",views:{"content@":{templateUrl:T,controller:"SettingsAuthenticationController"}}},ue={name:"portainer.stacks",url:"/stacks",views:{"content@":{templateUrl:A,controller:"StacksController"}},resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]}},me={name:"portainer.stacks.stack",url:"/:name?id&type&external",views:{"content@":{templateUrl:D,controller:"StackController"}}},ge={name:"portainer.stacks.newstack",url:"/newstack",views:{"content@":{templateUrl:N,controller:"CreateStackController"}}},fe={name:"portainer.uiplugin",url:"/uiplugin",views:{"content@":{templateUrl:O}}},ve={name:"portainer.tags",url:"/tags",views:{"content@":{templateUrl:E,controller:"TagsController"}}},he={name:"portainer.updatePassword",url:"/update-password",views:{"content@":{templateUrl:R,controller:"UpdatePasswordController"},"sidebar@":{}}},be={name:"portainer.users",url:"/users",views:{"content@":{templateUrl:L,controller:"UsersController"}}},xe={name:"portainer.users.user",url:"/:id",views:{"content@":{templateUrl:_,controller:"UserController"}}},ye={name:"portainer.teams",url:"/teams",views:{"content@":{templateUrl:V,controller:"TeamsController"}}},we={name:"portainer.teams.team",url:"/:id",views:{"content@":{templateUrl:U,controller:"TeamController"}}},ke={name:"portainer.templates",url:"/templates",resolve:{endpointID:["EndpointProvider","$state",function(e,t){if(!e.endpointID())return t.go("portainer.home")}]},views:{"content@":{templateUrl:M,controller:"TemplatesController"}}},$e={name:"portainer.templates.template",url:"/:id",views:{"content@":{templateUrl:B,controller:"TemplateController"}}},Se={name:"portainer.templates.new",url:"/new",views:{"content@":{templateUrl:j,controller:"CreateTemplateController"}}};e.register(t),e.register({name:"portainer",parent:"root",abstract:!0}),e.register(n),e.register(F),e.register(z),e.register(H),e.register(G),e.register(K),e.register(q),e.register(W),e.register(J),e.register(Y),e.register(Q),e.register(X),e.register({name:"portainer.init",abstract:!0,url:"/init",data:{requiresLogin:!1},views:{"sidebar@":{}}}),e.register(Z),e.register(ee),e.register(te),e.register(ne),e.register(ae),e.register(re),e.register(oe),e.register(ie),e.register(se),e.register(le),e.register(ce),e.register(de),e.register(pe),e.register(ue),e.register(me),e.register(ge),e.register(fe),e.register(ve),e.register(he),e.register(be),e.register(xe),e.register(ye),e.register(we),e.register(ke),e.register($e),e.register(Se)}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){},,function(e,t){var n="app/azure/views/containerinstances/containerinstances.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="azure.containerinstances" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>容器实例</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <containergroups-datatable\n    title-text="容器" title-icon="fa-server"\n    dataset="containerGroups" table-key="containergroups"\n    order-by="Name" \n    remove-action="deleteAction"\n    ></containergroups-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/azure/views/containerinstances/create/createcontainerinstance.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建容器实例"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="azure.containerinstances">容器实例</a> &gt; 添加容器\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          <div class="col-sm-12 form-section-title">\n            Azure设置\n          </div>\n          \x3c!-- subscription-input --\x3e\n          <div class="form-group">\n            <label for="azure_subscription" class="col-sm-1 control-label text-left">订阅</label>\n            <div class="col-sm-11">\n              <select class="form-control" name="azure_subscription" ng-model="state.selectedSubscription" ng-options="subscription.Name for subscription in subscriptions" ng-change="changeSubscription()"></select>\n            </div>\n          </div>\n          \x3c!-- !subscription-input --\x3e\n          \x3c!-- resourcegroup-input --\x3e\n          <div class="form-group">\n            <label for="azure_resourcegroup" class="col-sm-1 control-label text-left">资源组</label>\n            <div class="col-sm-11">\n              <select class="form-control" name="azure_resourcegroup" ng-model="state.selectedResourceGroup" ng-options="resourceGroup.Name for resourceGroup in resourceGroups"></select>\n            </div>\n          </div>\n          \x3c!-- !resourcegroup-input --\x3e\n          \x3c!-- location-input --\x3e\n          <div class="form-group">\n            <label for="azure_location" class="col-sm-1 control-label text-left">位置</label>\n            <div class="col-sm-11">\n              <select class="form-control" name="azure_location" ng-model="model.Location" ng-options="location for location in locations"></select>\n            </div>\n          </div>\n          \x3c!-- !location-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            容器配置\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="model.Name" name="container_name" placeholder="例如 myContainer">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- image-input --\x3e\n          <div class="form-group">\n            <label for="image_name" class="col-sm-1 control-label text-left">镜像</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="model.Image" name="image_name" placeholder="例如 nginx:alpine">\n            </div>\n          </div>\n          \x3c!-- !image-input --\x3e\n          \x3c!-- os-input --\x3e\n          <div class="form-group">\n            <label for="container_os" class="col-sm-1 control-label text-left">系统</label>\n            <div class="col-sm-11">\n              <select class="form-control" ng-model="model.OSType" name="container_os">\n                <option value="Linux">Linux</option>\n                <option value="Windows">Windows</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !os-input --\x3e\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">端口映射</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射附加端口\n              </span>\n            </div>\n            \x3c!-- port-mapping-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="binding in model.Ports" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">主机</span>\n                  <input type="text" class="form-control" ng-model="binding.host" placeholder="例如 80">\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">容器</span>\n                  <input type="text" class="form-control" ng-model="binding.container" placeholder="例如 80">\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="binding.protocol" uib-btn-radio="\'TCP\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="binding.protocol" uib-btn-radio="\'UDP\'">UDP</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- public-ip --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="public_ip" class="control-label text-left">\n                分配外部(Public)IP地址\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="public_ip" ng-model="model.AllocatePublicIP"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- public-ip --\x3e\n          <div class="col-sm-12 form-section-title">\n            容器资源\n          </div>\n          \x3c!-- cpu-input --\x3e\n          <div class="form-group">\n            <label for="container_cpu" class="col-sm-1 control-label text-left">CPU</label>\n            <div class="col-sm-11">\n              <input type="number" class="form-control" ng-model="model.CPU" name="container_cpu" placeholder="1">\n            </div>\n          </div>\n          \x3c!-- !cpu-input --\x3e\n          \x3c!-- memory-input --\x3e\n          <div class="form-group">\n            <label for="container_memory" class="col-sm-1 control-label text-left">内存</label>\n            <div class="col-sm-11">\n              <input type="number" class="form-control" ng-model="model.Memory" name="container_memory" placeholder="1">\n            </div>\n          </div>\n          \x3c!-- !memory-input --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress" ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">部署容器</span>\n                <span ng-show="state.actionInProgress">容器部署中...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/azure/views/dashboard/dashboard.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主页"></rd-header-title>\n  <rd-header-content>仪表板</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="subscriptions">\n  <div class="col-sm-12 col-md-6">\n    <a ui-sref="azure.subscriptions">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ subscriptions.length }}</div>\n          <div class="comment">订阅</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-sm-12 col-md-6" ng-if="resourceGroups">\n    <a ui-sref="azure.resourceGroups">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ resourceGroups.length }}</div>\n          <div class="comment">资源组</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/configs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="配置列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.configs" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>配置</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <configs-datatable\n    title-text="配置" title-icon="fa-file-code"\n    dataset="ctrl.configs" table-key="configs"\n    order-by="Name" \n    show-ownership-column="applicationState.application.authentication"\n    remove-action="ctrl.removeAction"\n    ></configs-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/edit/config.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="配置详情">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.configs.config({id: config.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.configs">配置</a> &gt; <a ui-sref="docker.configs.config({id: config.Id})">{{ config.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-code" title-text="配置详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>{{ config.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ config.Id }}\n                <button authorization="DockerConfigDelete" class="btn btn-xs btn-danger" ng-click="removeConfig(config.Id)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个配置</button>\n                <button authorization="DockerConfigCreate"class="btn btn-xs btn-primary" ui-sref="docker.configs.new({id: config.Id})"><i class="fa fa-copy space-right" aria-hidden="true"></i>克隆配置</button>\n              </td>\n            </tr>\n            <tr>\n              <td>创建于</td>\n              <td>{{ config.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>最后更新时间</td>\n              <td>{{ config.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!(config.Labels | emptyobject)">\n              <td>标签</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in config.Labels">\n                    <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ k }}</td>\n                    <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="config && applicationState.application.authentication"\n  resource-id="config.Id"\n  resource-control="config.ResourceControl"\n  resource-type="\'config\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="config">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-code" title-text="配置内容"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <code-editor\n                identifier="config-editor"\n                yml="false"\n                read-only="true"\n                value="config.Data"\n              ></code-editor>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/configs/create/createconfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建配置"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.configs">配置</a> &gt; 添加配置\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="config_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="ctrl.formValues.Name" id="config_name" placeholder="例如 myConfig">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- config-data --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" ng-if="ctrl.formValues.displayCodeEditor">\n              <code-editor\n                identifier="config-creation-editor"\n                placeholder="在此处定义或粘贴配置的内容"\n                yml="false"\n                on-change="ctrl.editorUpdate"\n                value="ctrl.formValues.Data"\n              ></code-editor>\n            </div>\n          </div>\n          \x3c!-- !config-data --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">标签</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="ctrl.addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in ctrl.formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="ctrl.removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="ctrl.formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!ctrl.formValues.Name" ng-click="ctrl.create()">创建配置</button>\n              <span class="text-danger" ng-if="ctrl.state.formValidationError" style="margin-left: 5px;">{{ ctrl.state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/containers.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.containers" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>容器</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12" ng-if="containers">\n    <containers-datatable\n      title-text="容器" title-icon="fa-server"\n      dataset="containers" table-key="containers"\n      order-by="Status"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      show-add-action="true"\n      offline-mode="offlineMode"\n    ></containers-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/edit/container.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器详情">\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name|trimcontainername }}</a>\n  </rd-header-content>\n</rd-header>\n\n  <div class="row" authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-cogs" title-text="操作"></rd-widget-header>\n        <rd-widget-body classes="padding">\n          <div class="btn-group" role="group" aria-label="...">\n            <button authorization="DockerContainerStart" class="btn btn-success btn-sm" ng-click="start()" ng-disabled="container.State.Running"><i class="fa fa-play space-right" aria-hidden="true"></i>启动</button>\n            <button authorization="DockerContainerStop" class="btn btn-danger btn-sm" ng-click="stop()" ng-disabled="!container.State.Running"><i class="fa fa-stop space-right" aria-hidden="true"></i>停止</button>\n            <button authorization=DockerContainerKill" class="btn btn-danger btn-sm" ng-click="kill()" ng-disabled="!container.State.Running"><i class="fa fa-bomb space-right" aria-hidden="true"></i>终止</button>\n            <button authorization="DockerContainerRestart" class="btn btn-primary btn-sm" ng-click="restart()" ng-disabled="!container.State.Running"><i class="fa fa-sync space-right" aria-hidden="true"></i>重启</button>\n            <button authorization="DockerContainerPause" class="btn btn-primary btn-sm" ng-click="pause()" ng-disabled="!container.State.Running || container.State.Paused"><i class="fa fa-pause space-right" aria-hidden="true"></i>暂停</button>\n            <button authorization="DockerContainerUnpause" class="btn btn-primary btn-sm" ng-click="unpause()" ng-disabled="!container.State.Paused"><i class="fa fa-play space-right" aria-hidden="true"></i>恢复</button>\n            <button authorization="DockerContainerDelete" class="btn btn-danger btn-sm" ng-click="confirmRemove()"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除</button>\n          </div>\n          <div class="btn-group" role="group" aria-label="..." ng-if="!container.Config.Labels[\'com.docker.swarm.service.id\']" authorization="DockerContainerCreate">\n            <button type="button" class="btn btn-danger btn-sm" ng-disabled="state.recreateContainerInProgress" ng-click="recreate()" button-spinner="state.recreateContainerInProgress">\n              <span ng-hide="state.recreateContainerInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i>重新创建</span>\n              <span ng-show="state.recreateContainerInProgress">正在重新创建...</span>\n            </button>\n            <a class="btn btn-primary btn-sm" type="button" ui-sref="docker.containers.new({ from: container.Id, nodeName: nodeName })"><i class="fa fa-copy space-right" aria-hidden="true"></i>复制/编辑</a>\n          </div>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-server" title-text="容器状态"></rd-widget-header>\n        <rd-widget-body classes="no-padding">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>ID</td>\n                <td>{{ container.Id }}</td>\n              </tr>\n              <tr>\n                <td>名称</td>\n                <td ng-if="!container.edit">\n                  {{ container.Name|trimcontainername }}\n                  <a authorization="DockerContainerRename" href="" data-toggle="tooltip" title="编辑容器名称" ng-click="container.edit = true;"><i class="fa fa-edit"></i></a>\n                </td>\n                <td ng-if="container.edit">\n                  <form ng-submit="renameContainer()">\n                    <input type="text" class="containerNameInput" ng-model="container.newContainerName">\n                    <a href="" ng-click="container.edit = false;"><i class="fa fa-times"></i></a>\n                    <a href="" ng-click="renameContainer()"><i class="fa fa-check-square"></i></a>\n                  </form>\n                </td>\n              </tr>\n              <tr ng-if="container.NetworkSettings.IPAddress">\n                <td>IP地址</td>\n                <td>{{ container.NetworkSettings.IPAddress }}</td>\n              </tr>\n              <tr>\n                <td>状态</td>\n                <td>\n                  <i class="fa fa-heartbeat space-right green-icon" ng-if="container.State.Running"></i>\n                  <i class="fa fa-heartbeat space-right red-icon" ng-if="!container.State.Running && container.State.Status !== \'created\'"></i>\n                  已{{ container.State|getstatetext }} {{ activityTime }}<span ng-if="!container.State.Running && container.State.Status !== \'created\'"> ，包含退出代码 {{ container.State.ExitCode }}</span>\n                </td>\n              </tr>\n              <tr>\n                <td>创建于</td>\n                <td>{{ container.Created|getisodate }}</td>\n              </tr>\n              <tr ng-if="container.State.Running">\n                <td>启动时间</td>\n                <td>{{ container.State.StartedAt|getisodate }}</td>\n              </tr>\n              <tr ng-if="!container.State.Running && container.State.Status !== \'created\'">\n                <td>结束于</td>\n                <td>{{ container.State.FinishedAt|getisodate }}</td>\n              </tr>\n              <tr authorization="DockerContainerLogs, DockerContainerInspect, DockerContainerStats, DockerExecStart">\n                <td colspan="2">\n                  <div class="btn-group" role="group" aria-label="...">\n                    <a authorization="DockerContainerLogs" class="btn" type="button" ui-sref="docker.containers.container.logs({ id: container.Id })"><i class="fa fa-file-alt space-right" aria-hidden="true"></i>日志</a>\n                    <a authorization="DockerContainerInspect" class="btn" type="button" ui-sref="docker.containers.container.inspect({ id: container.Id })"><i class="fa fa-info-circle space-right" aria-hidden="true"></i>查看</a>\n                    <a authorization="DockerContainerStats" class="btn" type="button" ui-sref="docker.containers.container.stats({ id: container.Id })"><i class="fa fa-chart-area space-right" aria-hidden="true"></i>状态</a>\n                    <a authorization="DockerExecStart" class="btn" type="button" ui-sref="docker.containers.container.exec({ id: container.Id })"><i class="fa fa-terminal space-right" aria-hidden="true"></i>执行</a>\n                    <a authorization="DockerContainerAttach" class="btn" type="button" ui-sref="docker.containers.container.attach({ id: container.Id })"><i class="fa fa-plug space-right" aria-hidden="true"></i>连接</a>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n\n  \x3c!-- access-control-panel --\x3e\n  <por-access-control-panel\n    ng-if="container && applicationState.application.authentication"\n    resource-id="container.Id"\n    resource-control="container.ResourceControl"\n    resource-type="\'container\'">\n  </por-access-control-panel>\n  \x3c!-- !access-control-panel --\x3e\n\n  <div ng-if="container.State.Health" class="row">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-server" title-text="容器健康状态"></rd-widget-header>\n        <rd-widget-body classes="no-padding">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>状态</td>\n                <td>\n                  <i ng-class="{\'healthy\': \'fa fa-heartbeat space-right green-icon\', \'unhealthy\': \'fa fa-heartbeat space-right red-icon\', \'starting\': \'fa fa-heartbeat space-right orange-icon\'}[container.State.Health.Status]"></i>\n                  {{ container.State.Health.Status }}\n                </td>\n              </tr>\n              <tr>\n                <td>失败计数</td>\n                <td>{{ container.State.Health.FailingStreak }}</td>\n              </tr>\n              <tr>\n                <td>上次输出</td>\n                <td>{{ container.State.Health.Log[container.State.Health.Log.length - 1].Output }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n\n  <div class="row" authorization="DockerImageCreate">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-clone" title-text="创建镜像"></rd-widget-header>\n        <rd-widget-body>\n          <form class="form-horizontal">\n            \x3c!-- tag-description --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  您可以从此容器创建映像，这样可以备份重要数据或保存有用的配置，之后您可以根据这个镜像启动另一个容器。\n                </span>\n              </div>\n            </div>\n            \x3c!-- !tag-description --\x3e\n            \x3c!-- image-and-registry --\x3e\n            <por-image-registry\n              image="config.Image"\n              registry="config.Registry"\n              auto-complete="true"\n              label-class="col-sm-1" input-class="col-sm-11 col-md-5"\n            ></por-image-registry>\n            \x3c!-- !image-and-registry --\x3e\n            \x3c!-- tag-note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">注意：如果您没有在镜像名称中指定标签, 将使用 <span class="label label-default">latest</span> 标签作为默认值。</span>\n              </div>\n            </div>\n            \x3c!-- !tag-note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.Image" ng-click="commit()">创建</button>\n              </div>\n            </div>\n          </form>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n  <div class="row">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-server" title-text="容器详情"></rd-widget-header>\n        <rd-widget-body classes="no-padding">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>镜像</td>\n                <td><a ui-sref="docker.images.image({ id: container.Image, nodeName: nodeName })">{{ container.Config.Image}}@{{container.Image}}</a></td>\n              </tr>\n              <tr ng-if="portBindings.length > 0">\n                <td>端口配置</td>\n                <td>\n                  <div ng-repeat="portMapping in portBindings">\n                    {{ portMapping.host }} <i class="fa fa-long-arrow-alt-right"></i> {{ portMapping.container }}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>命令</td>\n                <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;"><code>{{ container.Config.Cmd|command }}</code></td>\n              </tr>\n              <tr>\n                <td>环境变量</td>\n                <td>\n                  <table class="table table-bordered table-condensed">\n                    <tr ng-repeat="var in container.Config.Env track by $index">\n                      <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ var|key: \'=\' }}</td>\n                      <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ var|value: \'=\' }}</td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n              <tr ng-if="!(container.Config.Labels | emptyobject)">\n                <td>标签</td>\n                <td>\n                  <table class="table table-bordered table-condensed">\n                    <tr ng-repeat="(k, v) in container.Config.Labels">\n                      <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ k }}</td>\n                      <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ v }}</td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n              <tr>\n                <td>重启策略</td>\n                <td>\n                  <container-restart-policy ng-if="container"\n                    name="container.HostConfig.RestartPolicy.Name"\n                    maximum-retry-count="container.HostConfig.RestartPolicy.MaximumRetryCount"\n                    update-restart-policy="updateRestartPolicy(name, maximumRetryCount)">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n\n  <div class="row" ng-if="container.Mounts.length > 0">\n    <div class="col-lg-12 col-md-12 col-xs-12">\n      <rd-widget>\n        <rd-widget-header icon="fa-cubes" title-text="存储卷"></rd-widget-header>\n        <rd-widget-body classes="no-padding">\n          <table class="table">\n            <thead>\n              <tr>\n                <th>主机/存储卷</th>\n                <th>在容器中的路径</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr ng-repeat="vol in container.Mounts">\n                <td ng-if="vol.Type === \'bind\'">{{ vol.Source }}</td>\n                <td ng-if="vol.Type === \'volume\'"><a ui-sref="docker.volumes.volume({ id: vol.Name, nodeName: nodeName })">{{ vol.Name }}</a></td>\n                <td>{{ vol.Destination }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-sm-12">\n      <container-networks-datatable\n      title-text="连接的网络" title-icon="fa-sitemap"\n      dataset="container.NetworkSettings.Networks" table-key="container-networks"\n      container="container"\n      available-networks="availableNetworks"\n      join-network-action="containerJoinNetwork"\n      join-network-action-in-progress="state.joinNetworkInProgress"\n      leave-network-action="containerLeaveNetwork"\n      leave-network-action-in-progress="state.leaveNetworkInProgress"\n      node-name="nodeName"\n      ></container-networks-datatable>\n    </div>\n  </div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/console/attach.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器控制台"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; 控制台\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-init="autoconnectAttachView()" ng-show="loaded">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-terminal" title-text="连接"></rd-widget-header>\n      <rd-widget-body>\n\n        <div class="small text-warning" ng-if="!container.Config.OpenStdin">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            未设置正常的容器交互标识，您可能无法正常使用控制台。\n          </p>\n        </div>\n\n        <div class="small text-warning" ng-if="!container.Config.Tty">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            未设置正常的TTY标识类别，您可能无法正常使用控制台。\n          </p>\n        </div>\n\n        <div class="small text-danger" ng-hide="container.State.Running">\n          <p>\n            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n            容器没有运行。\n          </p>\n        </div>\n\n        <button type="button" class="btn btn-primary" ng-disabled="state === states.connecting || !container.State.Running" ng-click="state == states.disconnected ? connectAttach() : disconnect()">\n          <span ng-show="state === states.disconnected">连接到容器</span>\n          <span ng-show="state === states.connected">断开连接</span>\n          <span ng-show="state === states.connecting">连接中...</span>\n        </button>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <div id="terminal-container" class="terminal-container"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/console/exec.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器控制台"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; 控制台\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-init="initView()" ng-show="loaded">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-terminal" title-text="执行"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div ng-if="state === states.disconnected">\n            \x3c!-- command-list --\x3e\n              <div class="form-group">\n                <label for="command" class="col-lg-1 text-left col-sm-2 control-label">命令</label>\n                <div class="col-lg-11 col-sm-10">\n                  <div class="input-group" ng-if="!formValues.isCustomCommand">\n                    <span class="input-group-addon">\n                      <i class="fab fa-linux" aria-hidden="true" ng-if="imageOS == \'linux\'"></i>\n                      <i class="fab fa-windows" aria-hidden="true" ng-if="imageOS == \'windows\'"></i>\n                    </span>\n                    <select class="form-control" ng-model="formValues.command" id="command">\n                      <option value="ash" ng-if="imageOS == \'linux\'">/bin/ash</option>\n                      <option value="bash" ng-if="imageOS == \'linux\'">/bin/bash</option>\n                      <option value="sh" ng-if="imageOS == \'linux\'">/bin/sh</option>\n                      <option value="powershell" ng-if="imageOS == \'windows\'">powershell</option>\n                      <option value="cmd.exe" ng-if="imageOS == \'windows\'">cmd.exe</option>\n                      <option ng-repeat="command in containerCommands" value="{{command.command}}">{{command.title}}: {{command.command}}</option>\n                    </select>\n                  </div>\n                  <input class="form-control" ng-if="formValues.isCustomCommand" type="text" name="custom-command" ng-model="formValues.customCommand" placeholder="例如 ps aux">\n                </div>\n              </div>\n            \x3c!-- !command-list --\x3e\n            <div class="form-group col-lg-12">\n              <label for="command" class="text-left control-label">使用自定义命令</label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.isCustomCommand"><i></i>\n              </label>\n            </div>\n            <div class="form-group">\n              <label for="username" class="col-lg-1 text-left col-sm-2 control-label">\n                用户\n                <portainer-tooltip position="bottom" message="例如 user, user:group, uid 或 uid:gid"></portainer-tooltip>\n              </label>\n              <div class="col-lg-11 col-sm-10">\n                <input class="form-control" type="text" name="username" ng-model="formValues.user" placeholder="root">\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="button" class="btn btn-primary" ng-disabled="!container.State.Running" ng-click="connectExec()">\n                  <span>连接</span>\n                </button>\n                <span class="small text-danger" ng-hide="container.State.Running">\n                  <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                  容器没有运行。\n                </span>\n              </div>\n            </div>\n          </div>\n          <div ng-if="state !== states.disconnected">\n            <label>容器中使用 <code>{{ ::formValues.user || \'default user\' }}</code> 用户身份执行命令 <code>{{ formValues.isCustomCommand ? formValues.customCommand : formValues.command }}</code></label>\n            <button type="button" class="btn btn-primary" ng-click="disconnect()">\n              <span ng-show="state === states.connected">断开</span>\n              <span ng-show="state === states.connecting">连接...</span>\n            </button>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <div id="terminal-container" class="terminal-container"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/create/createcontainer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建容器"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; 添加容器\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="config.name" id="container_name" placeholder="例如 myContainer">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            镜像配置\n          </div>\n          <div ng-if="!formValues.Registry && fromContainer">\n            <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n            <span class="small text-danger" style="margin-left: 5px;">Docker仓库中的镜像<code>{{ config.Image }}</code>没有在Portainer中注册，您将无法创建容器，请先注册该仓库。</span>\n          </div>\n          <div ng-if="formValues.Registry || !fromContainer">\n            \x3c!-- image-and-registry --\x3e\n            <por-image-registry\n              image="config.Image"\n              registry="formValues.Registry"\n              ng-if="formValues.Registry"\n              auto-complete="true"\n              label-class="col-sm-1" input-class="col-sm-11 col-md-5"\n            ></por-image-registry>\n            \x3c!-- !image-and-registry --\x3e\n            \x3c!-- always-pull --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="ownership" class="control-label text-left">\n                  总是拉取镜像\n                  <portainer-tooltip position="bottom" message="启用后，Portainer将在创建容器之前自动尝试拉取指定的镜像。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="formValues.alwaysPull"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !always-pull --\x3e\n          </div>\n          <div class="col-sm-12 form-section-title">\n            端口配置\n          </div>\n          \x3c!-- publish-exposed-ports --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                将所有公开的端口发布到随机的主机端口\n                <portainer-tooltip position="bottom" message="启用后，Portainer会让Docker自动将主机上的随机端口映射到Dockerfile中定义的每个端口上。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.HostConfig.PublishAllPorts"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !publish-exposed-ports --\x3e\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">手动指定端口映射</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 发布一个新的端口\n              </span>\n            </div>\n            \x3c!-- port-mapping-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in config.HostConfig.PortBindings" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">主机</span>\n                  <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="例如 80 或 1.2.3.4:80 (可选)">\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">容器</span>\n                  <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="例如 80">\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              部署\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector\n              model="formValues.NodeName">\n            </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" resource-control="fromContainer.ResourceControl" ng-if="applicationState.application.authentication && fromContainer"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          \x3c!-- autoremove --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                自动删除\n                <portainer-tooltip position="bottom" message="启用后，Portainer将在退出时自动删除容器。当您只想使用一次性的容器时，这非常有用。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.HostConfig.AutoRemove"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !autoremove --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !config.Image || (!formValues.Registry && fromContainer)" ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">部署容器</span>\n                <span ng-show="state.actionInProgress">正在部署容器...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cog" title-text="高级容器设置"></rd-widget-header>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">命令和日志</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">存储卷</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">网络</a></li>\n          <li class="interactive"><a data-target="#env" data-toggle="tab">环境变量</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">标签</a></li>\n          <li class="interactive"><a data-target="#restart-policy" data-toggle="tab">重启策略</a></li>\n          <li class="interactive"><a data-target="#runtime-resources" ng-click="refreshSlider()" data-toggle="tab">运行和资源</a></li>\n          <li class="interactive"><a data-target="#container-capabilities" data-toggle="tab">能力选项</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="container_command" class="col-sm-2 col-lg-1 control-label text-left">命令</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Cmd" id="container_command" placeholder="例如 /usr/bin/nginx -t -c /mynginx.conf">\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="container_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">入口点</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Entrypoint" id="container_entrypoint" placeholder="例如 /bin/sh -c">\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="container_workingdir" class="col-sm-2 col-lg-1 control-label text-left">工作目录</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.WorkingDir" id="container_workingdir" placeholder="例如 /myapp">\n                </div>\n                <label for="container_user" class="col-sm-1 control-label text-left">用户</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.User" id="container_user" placeholder="例如 nginx">\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- console --\x3e\n              <div class="form-group">\n                <label for="container_console" class="col-sm-2 col-lg-1 control-label text-left">控制台</label>\n                <div class="col-sm-10 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="both">\n                      TTY交互终端 <span class="small text-muted">(-i -t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="interactive">\n                      交互 <span class="small text-muted">(-i)</span>\n                    </label>\n                  </div>\n                </div>\n                <div class="col-sm-offset-2 col-sm-10 col-lg-offset-1 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="tty">\n                      TTY终端 <span class="small text-muted">(-t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="none">\n                      空\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !console --\x3e\n\n              <div class="col-sm-12 form-section-title">\n                日志\n              </div>\n              \x3c!-- logging-driver --\x3e\n              <div class="form-group">\n                <label for="log-driver" class="col-sm-2 col-lg-1 control-label text-left">驱动</label>\n                <div class="col-sm-4">\n                  <select class="form-control" ng-model="formValues.LogDriverName" id="log-driver">\n                    <option selected value="">默认日志驱动</option>\n                    <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n                    <option value="none">空</option>\n                  </select>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                  日志驱动将覆盖docker守护程序默认的驱动程序。如果您不想覆盖它，请选择默认的日志驱动程序。您可以访问<a href="https://docs.docker.com/engine/admin/logging/overview/#supported-logging-drivers" target="_blank">Docker官方文档</a>来了解更多有关日志驱动程序的支持。\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !logging-driver --\x3e\n              \x3c!-- logging-opts --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">\n                    选项\n                    <portainer-tooltip position="top" message="除非选择了“空”或“默认”驱动以外的程序，否则将禁用“添加”按钮。选项功能将特定于所选择的驱动程序，更多内容请参考Docker官方文档。"></portainer-tooltip>\n                  </label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="!formValues.LogDriverName || formValues.LogDriverName === \'none\' || addLogDriverOpt(formValues.LogDriverName)">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加日志驱动选项\n                  </span>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="opt in formValues.LogDriverOpts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">选项</span>\n                      <input type="text" class="form-control" ng-model="opt.name" placeholder="例如 FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="opt.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n              </div>\n              \x3c!-- !logging-opts --\x3e\n\n\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">存储卷映射</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的存储卷\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    \x3c!-- volume-line1 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                      \x3c!-- container-path --\x3e\n                      <div class="input-group input-group-sm col-sm-6">\n                        <span class="input-group-addon">容器</span>\n                        <input type="text" class="form-control" ng-model="volume.containerPath" placeholder="例如 /path/in/container">\n                      </div>\n                      \x3c!-- !container-path --\x3e\n                      \x3c!-- volume-type --\x3e\n                      <div class="input-group col-sm-5" style="margin-left: 5px;" ng-if="isAdmin || allowBindMounts">\n                        <div class="btn-group btn-group-sm">\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">存储卷</label>\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.name = \'\'">绑定</label>\n                        </div>\n                        <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                          <i class="fa fa-trash" aria-hidden="true"></i>\n                        </button>\n                      </div>\n                      \x3c!-- !volume-type --\x3e\n                    </div>\n                    \x3c!-- !volume-line1 --\x3e\n                    \x3c!-- volume-line2 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                      <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                      \x3c!-- volume --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                        <span class="input-group-addon">存储卷</span>\n                        <select class="form-control" ng-model="volume.name">\n                          <option selected disabled hidden value="">选择一个卷</option>\n                          <option ng-repeat="vol in availableVolumes" ng-value="vol.Name">{{ vol.Name|truncate:30}} - {{ vol.Driver|truncate:30}}</option>\n                        </select>\n                      </div>\n                      \x3c!-- !volume --\x3e\n                      \x3c!-- bind --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                        <span class="input-group-addon">主机</span>\n                        <input type="text" class="form-control" ng-model="volume.name" placeholder="例如 /path/on/host">\n                      </div>\n                      \x3c!-- !bind --\x3e\n                      \x3c!-- read-only --\x3e\n                      <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                        <div class="btn-group btn-group-sm">\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="false">可写</label>\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="true">只读</label>\n                        </div>\n                      </div>\n                      \x3c!-- !read-only --\x3e\n                    </div>\n                    \x3c!-- !volume-line2 --\x3e\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n            </form>\n            \x3c!-- !volumes --\x3e\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group" ng-if="globalNetworkCount === 0 && applicationState.endpoint.mode.provider !== \'DOCKER_SWARM_MODE\'">\n                <div class="col-sm-12">\n                  <span class="small text-muted">您没有任何共享网络，请通过<a ui-sref="docker.networks">网络视图</a>创建一个。</span>\n                </div>\n              </div>\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">网络</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="config.HostConfig.NetworkMode" id="container_network" ng-change="resetNetworkConfig()">\n                    <option selected disabled hidden value="">选择一个网络</option>\n                    <option ng-repeat="net in availableNetworks | orderBy: \'Name\'" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- container-name-input --\x3e\n              <div class="form-group" ng-if="config.HostConfig.NetworkMode == \'container\'">\n                <label for="container_network_container" class="col-sm-2 col-lg-1 control-label text-left">容器</label>\n                <div class="col-sm-9">\n                  <select ng-options="container|containername for container in runningContainers" class="form-control" ng-model="formValues.NetworkContainer">\n                    <option selected disabled hidden value="">选择一个容器</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !container-name-input --\x3e\n              \x3c!-- hostname-input --\x3e\n              <div class="form-group">\n                <label for="container_hostname" class="col-sm-2 col-lg-1 control-label text-left">主机名</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Hostname" id="container_hostname" placeholder="例如 web01">\n                </div>\n              </div>\n              \x3c!-- !hostname-input --\x3e\n              \x3c!-- domainname-input --\x3e\n              <div class="form-group">\n                <label for="container_domainname" class="col-sm-2 col-lg-1 control-label text-left">域名</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Domainname" id="container_domainname" placeholder="例如 example.com">\n                </div>\n              </div>\n              \x3c!-- !domainname --\x3e\n              \x3c!-- mac-address-input --\x3e\n              <div class="form-group">\n                <label for="container_macaddress" class="col-sm-2 col-lg-1 control-label text-left">Mac地址</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.MacAddress" id="container_macaddress" placeholder="例如 12-34-56-78-9a-bc">\n                </div>\n              </div>\n              \x3c!-- !mac-address-input --\x3e\n              \x3c!-- ipv4-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv4" class="col-sm-2 col-lg-1 control-label text-left">IPv4地址</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv4" id="container_ipv4" placeholder="例如 172.20.0.7">\n                </div>\n              </div>\n              \x3c!-- !ipv4-input --\x3e\n              \x3c!-- ipv6-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv6" class="col-sm-2 col-lg-1 control-label text-left">IPv6地址</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv6" id="container_ipv6" placeholder="例如 a:b:c:d::1234">\n                </div>\n              </div>\n              \x3c!-- !ipv6-input --\x3e\n              \x3c!-- extra-hosts-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Hosts文件条目</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraHost()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加额外的条目\n                  </span>\n                </div>\n                \x3c!-- extra-hosts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.ExtraHosts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 host:IP">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraHost($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !extra-hosts-input-list --\x3e\n              </div>\n              \x3c!-- !extra-hosts-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">标签</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-env --\x3e\n          <div class="tab-pane" id="env">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">环境变量</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加环境变量\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in config.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="例如 FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-restart-policy --\x3e\n          <div class="tab-pane" id="restart-policy">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label class="control-label text-left">\n                    重启策略\n                  </label>\n                  <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'no\'">\n                      从不\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'always\'">\n                      任何\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'on-failure\'">\n                      失败后\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'unless-stopped\'">\n                      非停止\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          \x3c!-- !tab-restart-policy --\x3e\n          \x3c!-- tab-runtime-resources --\x3e\n          <div class="tab-pane" id="runtime-resources">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="col-sm-12 form-section-title">\n                运行\n              </div>\n              \x3c!-- privileged-mode --\x3e\n              <div class="form-group" ng-if="isAdmin || allowPrivilegedMode">\n                <div class="col-sm-12">\n                  <label for="privileged_mode" class="control-label text-left">\n                    特权模式\n                  </label>\n                  <label class="switch" style="margin-left: 20px;">\n                    <input type="checkbox" name="privileged_mode" ng-model="config.HostConfig.Privileged"><i></i>\n                  </label>\n                </div>\n              </div>\n              \x3c!-- !privileged-mode --\x3e\n              \x3c!-- runtimes --\x3e\n              <div class="form-group">\n                <label for="container_runtime" class="col-sm-1 control-label text-left">Runtime 运行时</label>\n                <div class="col-sm-11">\n                  <select class="form-control" ng-model="config.HostConfig.Runtime"\n                    id="container_runtime" ng-options="runtime for runtime in availableRuntimes">\n                    <option selected value="">Default</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !runtimes --\x3e\n            </form>\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- devices --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">设备</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDevice()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加设备\n                  </span>\n                </div>\n               \x3c!-- devices-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="device in config.HostConfig.Devices" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">主机</span>\n                      <input type="text" class="form-control" ng-model="device.pathOnHost" placeholder="例如 /dev/tty0">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">容器</span>\n                      <input type="text" class="form-control" ng-model="device.pathInContainer" placeholder="例如 /dev/tty0">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeDevice($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !devices-input-list --\x3e\n              </div>\n              \x3c!-- !devices--\x3e\n              <div class="col-sm-12 form-section-title">\n                资源\n              </div>\n              \x3c!-- memory-reservation-input --\x3e\n              <div class="form-group">\n                <label for="memory-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  内存预留\n                </label>\n                <div class="col-sm-3">\n                  <slider model="formValues.MemoryReservation" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n                </div>\n                <div class="col-sm-2">\n                  <input type="number" min="0" class="form-control" ng-model="formValues.MemoryReservation" id="memory-reservation">\n                </div>\n                <div class="col-sm-4">\n                  <p class="small text-muted" style="margin-top: 7px;">\n                    内存软限制 (<b>MB</b>)\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !memory-reservation-input --\x3e\n              \x3c!-- memory-limit-input --\x3e\n              <div class="form-group">\n                <label for="memory-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  内存限制\n                </label>\n                <div class="col-sm-3">\n                  <slider model="formValues.MemoryLimit" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n                </div>\n                <div class="col-sm-2">\n                  <input type="number" min="0" class="form-control" ng-model="formValues.MemoryLimit" id="memory-limit">\n                </div>\n                <div class="col-sm-4">\n                  <p class="small text-muted" style="margin-top: 7px;">\n                    内存限制 (<b>MB</b>)\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !memory-limit-input --\x3e\n              \x3c!-- cpu-limit-input --\x3e\n              <div class="form-group">\n                <label for="cpu-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n                  CPU限制\n                </label>\n                <div class="col-sm-5">\n                  <slider model="formValues.CpuLimit" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n                </div>\n                <div class="col-sm-4" style="margin-top: 20px;">\n                  <p class="small text-muted">\n                    最大CPU使用率\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !cpu-limit-input --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-runtime-resources --\x3e\n          \x3c!-- tab-container-capabilities --\x3e\n          <div class="tab-pane" id="container-capabilities">\n            <container-capabilities capabilities="formValues.capabilities" ></container-capabilities>\n          </div>\n          \x3c!-- !tab-container-capabilities --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/inspect/containerinspect.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="查看容器">\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: containerInfo.Id})">{{ containerInfo.Name|trimcontainername }}</a> &gt; 查看\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-icon-circle" title-text="查看">\n        <span class="btn-group btn-group-sm">\n          <label class="btn btn-primary" ng-model="state.DisplayTextView" uib-btn-radio="false"><i class="fa fa-code space-right" aria-hidden="true"></i>树状图</label>\n          <label class="btn btn-primary" ng-model="state.DisplayTextView" uib-btn-radio="true"><i class="fa fa-file-alt space-right" aria-hidden="true"></i>文本模式</label>\n        </span>\n      </rd-widget-header>\n      <rd-widget-body>\n        <pre ng-show="state.DisplayTextView">{{ containerInfo|json:4 }}</pre>\n        <json-tree ng-hide="state.DisplayTextView" object="containerInfo" root-name="containerInfo.Id" start-expanded="true"></json-tree>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/logs/containerlogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器日志"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; 日志\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs" ng-if="logs" log-collection-change="changeLogCollection" display-timestamps="state.displayTimestamps" line-count="state.lineCount" since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/containers/stats/containerstats.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器统计信息"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.containers">容器</a> &gt; <a ui-sref="docker.containers.container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; 状态\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-info-circle" title-text="关于统计信息">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                此视图显示有关容器 <b>{{ container.Name|trimcontainername }}</b> 的实时统计信息和正在运行的进程列表。\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="refreshRate" class="col-sm-3 col-md-2 col-lg-2 margin-sm-top control-label text-left">\n              刷新时间\n            </label>\n            <div class="col-sm-3 col-md-2">\n              <select id="refreshRate" ng-model="state.refreshRate" ng-change="changeUpdateRepeater()" class="form-control">\n                <option value="1">1s</option>\n                <option value="3">3s</option>\n                <option value="5">5s</option>\n                <option value="10">10s</option>\n                <option value="30">30s</option>\n                <option value="60">60s</option>\n              </select>\n            </div>\n            <span>\n              <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-top: 7px; display: none;"></i>\n            </span>\n          </div>\n          <div class="form-group" ng-if="state.networkStatsUnavailable">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i> 此容器的网络统计信息不可用。\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div ng-class="{true: \'col-md-6 col-sm-12\', false: \'col-lg-4 col-md-6 col-sm-12\'}[state.networkStatsUnavailable]">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="内存使用情况"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="memoryChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div ng-class="{true: \'col-md-6 col-sm-12\', false: \'col-lg-4 col-md-6 col-sm-12\'}[state.networkStatsUnavailable]">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="CPU使用情况"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="cpuChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-4 col-md-12 col-sm-12" ng-if="!state.networkStatsUnavailable">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="网络使用情况"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="networkChart" width="770" height="300"></canvas>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n  <div class="col-sm-12" ng-if="applicationState.endpoint.mode.provider !== \'VMWARE_VIC\'">\n    <container-processes-datatable\n    title-text="进程" title-icon="fa-tasks"\n    dataset="processInfo.Processes" headerset="processInfo.Titles"\n    table-key="container-processes"\n    ></container-processes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/dashboard/dashboard.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="仪表盘"></rd-header-title>\n  <rd-header-content>节点概览</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n  <div class="col-sm-12">\n    <dashboard-cluster-agent-info></dashboard-cluster-agent-info>\n  </div>\n</div>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<information-panel\n  ng-if="!applicationState.UI.dismissedInfoPanels[\'docker-dashboard-info-01\'] && !applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n  title-text="提示"\n  dismiss-action="dismissInformationPanel(\'docker-dashboard-info-01\')">\n  <span class="small">\n    <p class="text-muted" ng-if="applicationState.endpoint.mode.role === \'MANAGER\'">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      Portainer 连接到Swarm集群中的部分节点时，可能无法管理这些节点上的某些资源。\n      若要管理这些资源，建议使用 agent（代理）的模式进行连接和通信。\n    </p>\n    <p class="text-muted" ng-if="applicationState.endpoint.mode.role === \'WORKER\'">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      Docker Swarm 集群管理功能不能在 worker（非管理）节点上使用！\n    </p>\n  </span>\n</information-panel>\n\n<div class="row" ng-if="(!applicationState.endpoint.mode.agentProxy || applicationState.endpoint.mode.provider !== \'DOCKER_SWARM_MODE\') && info && endpoint">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer-alt" title-text="节点信息"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>节点</td>\n              <td>\n                {{ endpoint.Name }}\n                <span class="small text-muted space-left">\n                    <i class="fa fa-microchip"></i> {{ endpoint.Snapshots[0].TotalCPU }}\n                    <i class="fa fa-memory space-left"></i> {{ endpoint.Snapshots[0].TotalMemory | humansize }}\n                </span>\n                <span class="small text-muted"> - {{ info.Swarm && info.Swarm.NodeID !== \'\' ? \'Swarm\' : \'Standalone\' }} {{ info.ServerVersion }} <span ng-if="endpoint.Type === 2">+ <i class="fa fa-bolt" aria-hidden="true"></i>  代理</span></span>\n              </td>\n            </tr>\n            <tr>\n              <td>节点URL地址</td>\n              <td>{{ endpoint.URL | stripprotocol }}</td>\n            </tr>\n            <tr>\n              <td>标签</td>\n              <td>\n                <span ng-if="endpoint.Tags.length === 0">\n                  -\n                </span>\n                <span ng-if="endpoint.Tags.length > 0">\n                  <span ng-repeat="tag in endpoint.Tags">\n                    {{ tag }}{{ $last? \'\' : \', \' }}\n                  </span>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>转到群集可视化管理器</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="portainer.stacks">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-th-list"></i>\n          </div>\n          <div class="title">{{ stackCount }}</div>\n          <div class="comment">{{ stackCount === 1 ? \'堆栈\' : \'堆栈\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n    <a ui-sref="docker.services">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-list-alt"></i>\n          </div>\n          <div class="title">{{ serviceCount }}</div>\n          <div class="comment">{{ serviceCount === 1 ? \'服务\' : \'服务\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="containers">\n    <a ui-sref="docker.containers">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-server"></i>\n          </div>\n          <div class="pull-right">\n            <div><i class="fa fa-heartbeat space-right green-icon"></i>{{ containers | runningcontainers }} 运行中</div>\n            <div><i class="fa fa-heartbeat space-right red-icon"></i>{{ containers | stoppedcontainers }} 已停止</div>\n          </div>\n          <div class="title">{{ containers.length }}</div>\n          <div class="comment">{{ containers.length === 1 ? \'容器\' : \'容器\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6" ng-if="images">\n    <a ui-sref="docker.images">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-clone"></i>\n          </div>\n          <div class="pull-right">\n            <div><i class="fa fa-chart-pie space-right"></i>{{ images | imagestotalsize | humansize }}</div>\n          </div>\n          <div class="title">{{ images.length }}</div>\n          <div class="comment">{{ images.length === 1 ? \'镜像\' : \'镜像\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="docker.volumes">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-cubes"></i>\n          </div>\n          <div class="title">{{ volumeCount }}</div>\n          <div class="comment">{{ volumeCount === 1 ? \'存储卷\' : \'存储卷\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="docker.networks">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-sitemap"></i>\n          </div>\n          <div class="title">{{ networkCount }}</div>\n          <div class="comment">{{ networkCount === 1 ? \'网络\' : \'网络\' }}</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/events/events.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="事件列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.events" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>事件</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <events-datatable\n    title-text="事件" title-icon="fa-history"\n    dataset="events" table-key="events"\n    order-by="Time" reverse-order="true"\n    \n    ></events-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/images.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="镜像列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.images" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>镜像</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!offlineMode" authorization="DockerImageCreate">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-download" title-text="拉取镜像 ">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry\n            image="formValues.Image"\n            registry="formValues.Registry"\n            label-class="col-sm-1" input-class="col-sm-11 col-md-5"\n          ></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">注意：如果您没有在镜像名称中指定标签，将使用 <span class="label label-default">latest</span> 作为TAG标签的默认值。</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              部署\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector\n              model="formValues.NodeName">\n            </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Image" ng-click="pullImage()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">拉取镜像</span>\n                <span ng-show="state.actionInProgress">正在下载...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <images-datatable\n    title-text="镜像" title-icon="fa-clone"\n    dataset="images" table-key="images"\n    order-by="RepoTags"\n    show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n    download-action="downloadAction"\n    remove-action="removeAction"\n    force-remove-action="confirmRemovalAction"\n    export-in-progress="state.exportInProgress"\n    offline-mode="offlineMode"\n    ></images-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/edit/image.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'  <rd-header>\n  <rd-header-title title-text="镜像详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.images">镜像</a> &gt; <a ui-sref="docker.images.image({id: image.Id})">{{ image.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="image.RepoTags.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa fa-tags" title-text="镜像TAG标签"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="row">\n              <div class="pull-left" ng-repeat="tag in image.RepoTags" style="display:table">\n                <div class="input-group col-md-1" style="padding:0 15px">\n                  <span class="input-group-addon">{{ tag }}</span>\n                  <span class="input-group-btn" authorization="DockerImagePush, DockerImageCreate, DockerImageDelete">\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="推送到仓库" ng-click="pushTag(tag)" authorization="DockerImagePush">\n                      <span class="fa fa-upload white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="从仓库中拉取" ng-click="pullTag(tag)" authorization="DockerImageCreate">\n                      <span class="fa fa-download white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="删除TAG标签" ng-click="removeTag(tag)" authorization="DockerImageDelete">\n                      <span class="fa fa-trash-alt white-icon" aria-hidden="true"></span>\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                注意：您可以点击上传图标 <span class="fa fa-upload" aria-hidden="true"></span> 来推送一个镜像\n                或点击下载图标 <span class="fa fa-download" aria-hidden="true"></span> 来拉取一个镜像\n                或点击垃圾桶图标 <span class="fa fa-trash-alt" aria-hidden="true"></span> 来删除一个TAG标签。\n              </span>\n            </div>\n            <div class="col-sm-12">\n              <span id="downloadResourceHint" class="createResource" style="display: none; margin-left: 0;">\n                正在下载...\n                <i class="fa fa-circle-notch fa-spin" aria-hidden="true" style="margin-left: 2px;"></i>\n              </span>\n              <span id="uploadResourceHint" class="createResource" style="display: none; margin-left: 0;">\n                正在上传...\n                <i class="fa fa-circle-notch fa-spin" aria-hidden="true" style="margin-left: 2px;"></i>\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" authorization="DockerImageCreate">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tag" title-text="标记镜像TAG"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry\n            image="formValues.Image"\n            registry="formValues.Registry"\n            label-class="col-sm-1" input-class="col-sm-11 col-md-5"\n          ></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">注意：如果您没有在镜像名称中指定标签，将使用 <span class="label label-default">latest</span> 作为TAG标签的默认值。</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Image" ng-click="tagImage()">Tag标签</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="镜像详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ image.Id }}\n                <button authorization="DockerImageDelete" class="btn btn-xs btn-danger" ng-click="removeImage(image.Id)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个镜像</button>\n                <button authorization="DockerImageGet" class="btn btn-xs btn-primary" ng-click="exportImage(image)" button-spinner="$ctrl.exportInProgress" ng-disabled="state.exportInProgress">\n                    <i class="fa fa-download space-right" aria-hidden="true"></i>\n                    <span ng-hide="state.exportInProgress">导出这个镜像</span>\n                    <span ng-show="state.exportInProgress">镜像导出中...</span>\n                </button>\n              </td>\n            </tr>\n            <tr ng-if="image.Parent">\n              <td>父类</td>\n              <td><a ui-sref="docker.images.image({id: image.Parent})">{{ image.Parent }}</a></td>\n            </tr>\n            <tr>\n              <td>大小</td>\n              <td>{{ image.VirtualSize|humansize }}</td>\n            </tr>\n            <tr>\n              <td>创建于</td>\n              <td>{{ image.Created|getisodate }}</td>\n            </tr>\n            <tr>\n              <td>构建</td>\n              <td>Docker {{ image.DockerVersion }} 基于 {{ image.Os}}, {{ image.Architecture }}</td>\n            </tr>\n            <tr ng-if="image.Author">\n              <td>作者</td>\n              <td>{{ image.Author }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="Dockerfile详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>命令</td>\n              <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;"><code>{{ image.Command|command }}</code></td>\n            </tr>\n            <tr ng-if="image.Entrypoint">\n              <td>入口点</td>\n              <td><code>{{ image.Entrypoint|command }}</code></td>\n            </tr>\n            <tr ng-if="image.ExposedPorts.length > 0">\n              <td>暴露端口</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="port in image.ExposedPorts">\n                  {{ port }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Volumes.length > 0">\n              <td>存储卷</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="volume in image.Volumes">\n                  {{ volume }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Env.length > 0">\n              <td>环境变量</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in image.Env">\n                    <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ var|key: \'=\' }}</td>\n                    <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;">{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n</div>\n<div class="row" ng-if="history.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title-text="镜像层"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table id="image-layers" class="table">\n          <thead>\n            <th style="white-space:nowrap;">\n              <a ng-click="order(\'Order\')">\n                排序\n                <span ng-show="sortType == \'Order\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'Order\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="order(\'Size\')">\n                大小\n                <span ng-show="sortType == \'Size\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'Size\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="order(\'CreatedBy\')">\n                镜像层\n                <span ng-show="sortType == \'CreatedBy\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'CreatedBy\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="layer in history | orderBy:sortType:sortReverse">\n              <td style="white-space:nowrap;">\n                {{ layer.Order }}\n              </td>\n              <td style="white-space:nowrap;">\n                {{ layer.Size | humansize }}\n              </td>\n              <td class="expand">\n                <div ng-if="layer.CreatedBy.length > 130">\n                  <span id="layer-command-{{$index}}-full" style="display: none">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                  <span id="layer-command-{{$index}}-short">\n                    {{ layer.CreatedBy | imagelayercommand | truncate:130 }}\n                    <span ng-if="layer.CreatedBy.length > 130" style="margin-left: 5px;">\n                      <a id="layer-command-expander{{$index}}" class="btn" ng-click=\'toggleLayerCommand($index)\'>\n                        <i class="fa fa-plus-circle" aria-hidden="true"></i>\n                      </a>\n                    </span>\n                  </span>\n                </div>\n                <div ng-if="layer.CreatedBy.length <= 130">\n                  <span id="layer-command-{{$index}}-full">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/build/buildimage.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="构建镜像"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.images">镜像</a> &gt; 构建镜像\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <uib-tabset active="state.activeTab">\n          <uib-tab index="0">\n            <uib-tab-heading>\n              <i class="fa fa-wrench space-right" aria-hidden="true"></i> 镜像生成器\n            </uib-tab-heading>\n            <form class="form-horizontal">\n              <div class="col-sm-12 form-section-title">\n                命名\n              </div>\n              \x3c!-- names --\x3e\n              <div class="form-group">\n                <span class="col-sm-12 text-muted small">\n                  您可以为您的镜像指定多个名称。\n                </span>\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label class="control-label text-left">名称</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addImageName()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加其他名称\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !names --\x3e\n              <div class="form-group" ng-if="formValues.ImageNames.length === 0">\n                <span class="col-sm-12 text-danger small">\n                  <i class="fa fa-exclamation-triangle space-right" aria-hidden="true"></i>您必须至少为镜像指定一个名称。\n                </span>\n              </div>\n              \x3c!-- name-input-list --\x3e\n              <div ng-if="formValues.ImageNames.length > 0">\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    名称必须以下列的格式之一指定: <code>name:tag</code>, <code>repository/name:tag</code> 或者 <code>registryfqdn:port/repository/name:tag</code> 类型的格式。 如果您省略标签，将使用标签 <b>latest</b> 作为默认值。\n                  </span>\n                </div>\n                <div class="form-group" >\n                  <div class="col-sm-12">\n                    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                      <div ng-repeat="item in formValues.ImageNames track by $index" style="margin-top: 2px;">\n                        \x3c!-- name-input --\x3e\n                        <div class="input-group col-sm-5 input-group-sm">\n                          <span class="input-group-addon">名称</span>\n                          <input type="text" class="form-control" ng-model="item.Name" placeholder="例如 myImage:myTag" auto-focus>\n                          <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[item.Name !== \'\']" aria-hidden="true"></i></span>\n                        </div>\n                        \x3c!-- !name-input --\x3e\n                        \x3c!-- actions --\x3e\n                        <div class="input-group col-sm-2 input-group-sm">\n                          <button class="btn btn-sm btn-danger" type="button" ng-click="removeImageName($index)">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                          </button>\n                        </div>\n                        \x3c!-- !actions --\x3e\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !name-input-list --\x3e\n              \x3c!-- build-method --\x3e\n              <div class="col-sm-12 form-section-title">\n                构建方法\n              </div>\n              <div class="form-group"></div>\n              <div class="form-group" style="margin-bottom: 0">\n                <div class="boxselector_wrapper">\n                  <div>\n                    <input type="radio" id="method_editor" ng-model="state.BuildType" value="editor" ng-click="toggleEditor()">\n                    <label for="method_editor">\n                      <div class="boxselector_header">\n                        <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Web网页编辑器\n                      </div>\n                      <p>使用我们的Web网页编辑器</p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="method_upload" ng-model="state.BuildType" value="upload" ng-click="saveEditorContent()">\n                    <label for="method_upload">\n                      <div class="boxselector_header">\n                        <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n                        上传\n                      </div>\n                      <p>从您的计算机上传一个tarball或Dockerfile文件</p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="method_url" ng-model="state.BuildType" value="url" ng-click="saveEditorContent()">\n                    <label for="method_url">\n                      <div class="boxselector_header">\n                        <i class="fa fa-globe" aria-hidden="true" style="margin-right: 2px;"></i>\n                        URL地址\n                      </div>\n                      <p>指定一个文件的URL地址</p>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !build-method --\x3e\n              \x3c!-- web-editor --\x3e\n              <div ng-show="state.BuildType === \'editor\'">\n                <div class="col-sm-12 form-section-title">\n                  Web网页编辑器\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    您可以通过 <a href="https://docs.docker.com/engine/reference/builder/" target="_blank">Docker官方文档</a> 了解更多关于Dockerfile文件格式的信息.\n                  </span>\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <code-editor\n                      identifier="image-build-editor"\n                      placeholder="在此处定义或粘贴Dockerfile文件的内容"\n                      yml="false"\n                      on-change="editorUpdate"\n                    ></code-editor>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !web-editor --\x3e\n              \x3c!-- upload --\x3e\n              <div ng-show="state.BuildType === \'upload\'">\n                <div class="col-sm-12 form-section-title">\n                  上传\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    您可以从您的计算机上传Dockerfile或者包含Dockerfile的tar归档文件。使用tar归档文件时，根文件夹将用作于构建的上下文。\n                  </span>\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <button class="btn btn-sm btn-primary" ngf-select ngf-min-size="10" ng-model="formValues.UploadFile">选择文件</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.UploadFile.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.UploadFile" aria-hidden="true"></i>\n                    </span>\n                  </div>\n                </div>\n                <div ng-if="formValues.UploadFile.type === \'application/gzip\' || formValues.UploadFile.type === \'application/x-tar\'">\n                  <div class="form-group">\n                    <span class="col-sm-12 text-muted small">\n                      请选择tar归档文件中Dockerfile文件的路径。\n                    </span>\n                  </div>\n                  <div class="form-group">\n                    <label for="image_path" class="col-sm-2 control-label text-left">Dockerfile文件路径</label>\n                    <div class="col-sm-10">\n                      <input type="text" class="form-control" ng-model="formValues.Path" id="image_path" placeholder="Dockerfile">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !upload --\x3e\n              \x3c!-- url --\x3e\n              <div ng-show="state.BuildType === \'url\'">\n                <div class="col-sm-12 form-section-title">\n                  URL地址\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    为Dockerfile文件，tar归档文件或者公共的Git仓库(后缀为<b>.git</b>)指定一个可以访问的URL地址。在使用tar归档文件或者Git仓库的URL时，根文件夹将用作于构建的上下文。\n                  </span>\n                </div>\n                <div class="form-group">\n                  <label for="image_url" class="col-sm-2 control-label text-left">URL地址</label>\n                  <div class="col-sm-10">\n                    <input type="text" class="form-control" ng-model="formValues.URL" id="image_url" placeholder="https://myhost.mydomain/myimage.tar.gz">\n                  </div>\n                </div>\n                <div class="form-group">\n                  <span class="col-sm-12 text-muted small">\n                    指出tar归档文件/仓库中Dockerfile文件的路径（在使用Dockerfile文件时忽略）。\n                  </span>\n                </div>\n                <div class="form-group">\n                  <label for="image_path" class="col-sm-2 control-label text-left">Dockerfile文件路径</label>\n                  <div class="col-sm-10">\n                    <input type="text" class="form-control" ng-model="formValues.Path" id="image_path" placeholder="Dockerfile">\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !url --\x3e\n              <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n                <div class="col-sm-12 form-section-title">\n                  部署\n                </div>\n                \x3c!-- node-selection --\x3e\n                <node-selector\n                  model="formValues.NodeName">\n                </node-selector>\n                \x3c!-- !node-selection --\x3e\n              </div>\n              \x3c!-- actions --\x3e\n              <div class="col-sm-12 form-section-title">\n                操作\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="button" class="btn btn-primary btn-sm"\n                    ng-disabled="state.actionInProgress\n                    || (state.BuildType === \'upload\' && (!formValues.UploadFile || !formValues.Path))\n                    || (state.BuildType === \'url\' && (!formValues.URL || !formValues.Path))\n                    || (formValues.ImageNames.length === 0 || !validImageNames())"\n                    ng-click="buildImage()" button-spinner="state.actionInProgress">\n                    <span ng-hide="state.actionInProgress">构建镜像</span>\n                    <span ng-show="state.actionInProgress">正在构建镜像...</span>\n                  </button>\n                  <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </form>\n          </uib-tab>\n          <uib-tab index="1" disable="!buildLogs">\n            <uib-tab-heading>\n              <i class="fa fa-file-alt space-right" aria-hidden="true"></i> 输出\n            </uib-tab-heading>\n            <pre class="log_viewer">\n              <div ng-repeat="line in buildLogs track by $index" class="line"><p class="inner_line" ng-click="active=!active" ng-class="{\'line_selected\': active}">{{ line }}</p></div>\n              <div ng-if="!buildLogs.length" class="line"><p class="inner_line">没有可用的构建输出。</p></div>\n            </pre>\n          </uib-tab>\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/images/import/importimage.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="镜像导入"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.images">镜像</a> &gt; 镜像导入\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- upload --\x3e\n          <div class="col-sm-12 form-section-title">\n            上传\n          </div>\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              您可以上传包含镜像的tar格式存档文件。\n            </span>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button class="btn btn-sm btn-primary" ngf-select ngf-min-size="10" ngf-accept="\'application/x-tar,application/x-gzip\'" ng-model="formValues.UploadFile">选择文件</button>\n              <span style="margin-left: 5px;">\n                {{ formValues.UploadFile.name }}\n                <i class="fa fa-times red-icon" ng-if="!formValues.UploadFile" aria-hidden="true"></i>\n              </span>\n            </div>\n          </div>\n          \x3c!-- !upload --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12 form-section-title">\n              部署\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName">\n            </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.UploadFile"\n                      ng-click="uploadImage()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">上传</span>\n                <span ng-show="state.actionInProgress">镜像上传中...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/networks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="网络列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.networks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>网络</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <networks-datatable\n    title-text="网络" title-icon="fa-sitemap"\n    dataset="networks" table-key="networks"\n    order-by="Name"\n    remove-action="removeAction"\n    show-ownership-column="applicationState.application.authentication"\n    show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n    offline-mode="offlineMode"\n    ></networks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/edit/network.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="网络详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.networks">网络</a> &gt; <a ui-sref="docker.networks.network({id: network.Id})">{{ network.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sitemap" title-text="网络详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>{{ network.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ network.Id }}\n                <button authorization="DockerNetworkDelete" ng-if="allowRemove(network)" class="btn btn-xs btn-danger" ng-click="removeNetwork(network.Id)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个网络</button>\n              </td>\n            </tr>\n            <tr>\n              <td>驱动</td>\n              <td>{{ network.Driver }}</td>\n            </tr>\n            <tr>\n              <td>范围</td>\n              <td>{{ network.Scope }}</td>\n            </tr>\n            <tr>\n              <td>可附加</td>\n              <td>{{ network.Attachable }}</td>\n            </tr>\n            <tr>\n              <td>内部</td>\n              <td>{{ network.Internal }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.Config.length > 0" ng-repeat="config in network.IPAM.Config">\n              <td>子网 - {{ config.Subnet }}</td>\n              <td>网关 - {{ config.Gateway }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="network && applicationState.application.authentication"\n  resource-id="network.Id"\n  resource-control="network.ResourceControl"\n  resource-type="\'network\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="!(network.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="网络选项"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in network.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\n<div class="row" ng-if="containersInNetwork.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="网络中的容器"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>容器名称</th>\n            <th>IPv4地址</th>\n            <th>IPv6地址</th>\n            <th>Mac地址</th>\n            <th authorization="DockerNetworkDisconnect">操作</th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="container in containersInNetwork">\n              <td><a ui-sref="docker.containers.container({ id: container.Id, nodeName: nodeName })">{{ container.Name }}</a></td>\n              <td>{{ container.IPv4Address || \'-\' }}</td>\n              <td>{{ container.IPv6Address || \'-\' }}</td>\n              <td>{{ container.MacAddress || \'-\' }}</td>\n              <td authorization="DockerNetworkDisconnect">\n                <button type="button" class="btn btn-xs btn-danger" ng-click="containerLeaveNetwork(network, container)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>离开网络</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/networks/create/createnetwork.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建网络"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.networks">网络</a> &gt; 添加网络\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="networkCreationForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="network_name" class="col-sm-2 col-lg-1 control-label text-left">名称</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="config.Name" id="network_name" placeholder="例如 myNetwork">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            驱动配置\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="network_driver" class="col-sm-2 col-lg-1 control-label text-left">驱动</label>\n            <div class="col-sm-10 col-lg-11">\n              <select class="form-control" ng-options="driver for driver in availableNetworkDrivers" ng-model="config.Driver" ng-if="availableNetworkDrivers.length > 0">\n                <option disabled hidden value="">选择一个驱动</option>\n              </select>\n              <input type="text" class="form-control" ng-model="config.Driver" id="network_driver" placeholder="例如 driverName" ng-if="availableNetworkDrivers.length === 0">\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                驱动选项\n                <portainer-tooltip position="bottom" message="驱动选项是基于选定的特定驱动程序，请参阅所选的驱动程序文档。"></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加驱动选项\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="例如 com.docker.network.bridge.enable_icc">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="例如 true">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          \x3c!-- macvlan-management --\x3e\n          <network-macvlan-form ng-show="config.Driver === \'macvlan\'" data="formValues.Macvlan" application-state="applicationState"></network-macvlan-form>\n          \x3c!-- !macvlan-management --\x3e\n          <div ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'swarm\'">\n            <div class="col-sm-12 form-section-title">\n              网络配置\n            </div>\n            \x3c!-- subnet-gateway-inputs --\x3e\n            <div class="form-group">\n              <label for="network_subnet" class="col-sm-2 col-lg-1 control-label text-left">子网</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.Subnet" id="network_subnet" placeholder="例如 172.20.0.0/16">\n              </div>\n              <label for="network_gateway" class="col-sm-2 col-lg-1 control-label text-left">网关</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.Gateway" id="network_gateway" placeholder="例如 172.20.10.11">\n              </div>\n            </div>\n            \x3c!-- !subnet-gateway-inputs --\x3e\n            \x3c!-- iprange-auxaddr-inputs --\x3e\n            <div class="form-group">\n              <label for="network_iprange" class="col-sm-2 col-lg-1 control-label text-left">IP地址范围</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.IPRange" id="network_iprange" placeholder="例如 172.20.10.128/25">\n              </div>\n              <label for="network_auxaddr" class="col-sm-2 col-lg-1 control-label text-left">排除的IP地址</label>\n              <div class="col-sm-4 col-lg-5">\n                <input type="text" class="form-control" ng-model="formValues.AuxAddress" id="network_auxaddr" placeholder="例如 my-router=172.20.10.129">\n              </div>\n            </div>\n            \x3c!-- !iprange-auxaddr-inputs --\x3e\n          </div>\n          <div class="col-sm-12 form-section-title">\n            高级配置\n          </div>\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">标签</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- internal --\x3e\n          <div class="form-group" ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'local\'">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                限制对网络的外部访问\n              </label>\n              <label name="ownership" class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.Internal">\n                <i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !internal --\x3e\n          \x3c!-- attachable --\x3e\n          <div class="form-group" ng-hide="config.Driver === \'macvlan\' && formValues.Macvlan.Scope === \'local\'">\n            <div class="col-sm-12">\n              <label for="attachable" class="control-label text-left">\n                启用手动指定的容器附件\n              </label>\n              <label name="attachable" class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.Attachable">\n                <i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !attachable --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && config.Driver !== \'overlay\' && config.Driver !== \'macvlan\'">\n            <div class="col-sm-12 form-section-title">\n              部署\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector model="formValues.NodeName">\n            </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !config.Name || (config.Driver === \'macvlan\' && networkCreationForm.$invalid)"\n                ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建网络</span>\n                <span ng-show="state.actionInProgress">正在创建网络...</span>\n              </button>\n              <i id="createResourceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/secrets.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="密钥列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.secrets" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>密钥</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <secrets-datatable\n    title-text="密钥" title-icon="fa-user-secret"\n    dataset="secrets" table-key="secrets"\n    order-by="Name" \n    show-ownership-column="applicationState.application.authentication"\n    remove-action="removeAction"\n    ></secrets-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/edit/secret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="密钥详情">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.secrets.secret({id: secret.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.secrets">密钥</a> &gt; <a ui-sref="docker.secrets.secret({id: secret.Id})">{{ secret.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user-secret" title-text="密钥详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>{{ secret.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ secret.Id }}\n                <button authorization="DockerSecretDelete" class="btn btn-xs btn-danger" ng-click="removeSecret(secret.Id)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个密钥</button>\n              </td>\n            </tr>\n            <tr>\n              <td>创建时间</td>\n              <td>{{ secret.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>最后更新</td>\n              <td>{{ secret.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!(secret.Labels | emptyobject)">\n              <td>标签</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in secret.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="secret && applicationState.application.authentication"\n  resource-id="secret.Id"\n  resource-control="secret.ResourceControl"\n  resource-type="\'secret\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n')}]),e.exports=n},function(e,t){var n="app/docker/views/secrets/create/createsecret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建密钥"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.secrets">密钥</a> &gt; 添加密钥\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="secret_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="secret_name" placeholder="例如 mySecret">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- secret-data --\x3e\n          <div class="form-group">\n            <label for="secret_data" class="col-sm-1 control-label text-left">密钥</label>\n            <div class="col-sm-11">\n              <textarea class="form-control" rows="5" ng-model="formValues.Data"></textarea>\n            </div>\n          </div>\n          \x3c!-- !secret-data --\x3e\n          \x3c!-- encode-secret --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="encode_secret" class="control-label text-left">\n                密钥编码\n                <portainer-tooltip position="bottom" message="密钥需要使用base64编码，如果您的密钥已经是base64编码，请禁用此功能。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="encode_secret" ng-model="formValues.encodeSecret"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !encode-secret --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">标签</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Name || !formValues.Data" ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建密钥</span>\n                <span ng-show="state.actionInProgress">正在创建密钥...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/services.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="服务列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.services" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>服务</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="services">\n  <div class="col-sm-12">\n    <services-datatable\n    title-text="服务" title-icon="fa-list-alt"\n    dataset="services" table-key="services"\n    order-by="Name" \n    nodes="nodes"\n    agent-proxy="applicationState.endpoint.mode.agentProxy"\n    show-ownership-column="applicationState.application.authentication"\n    show-update-action="applicationState.endpoint.apiVersion >= 1.25"\n    show-task-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n    show-add-action="true"\n    show-stack-column="true"\n    ></services-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/service.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="服务详情">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.services.service({id: service.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.services">服务</a> &gt; <a ui-sref="docker.services.service({id: service.Id})">{{ service.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div ng-if="isUpdating" class="col-lg-12 col-md-12 col-xs-12">\n    <div class="alert alert-info" role="alert" id="service-update-alert">\n      <p>此服务正在更新，编辑功能目前被禁用。</p>\n      <a ui-sref="docker.services.service({id: service.Id}, {reload: true})">刷新以查看此服务是否已完成更新。</a>\n    </div>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-9 col-md-9 col-xs-9">\n    <rd-widget>\n      <rd-widget-header icon="fa-list-alt" title-text="服务详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td ng-if="applicationState.endpoint.apiVersion <= 1.24">\n                <input type="text" class="form-control" ng-model="service.Name" ng-change="updateServiceAttribute(service, \'Name\')" ng-disabled="isUpdating">\n              </td>\n              <td ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                {{ service.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ service.Id }}\n              </td>\n            </tr>\n            <tr ng-if="service.CreatedAt">\n              <td>创建于</td>\n              <td>{{ service.CreatedAt|getisodate}}</td>\n            </tr>\n            <tr ng-if="service.UpdatedAt">\n              <td>上次更新于</td>\n              <td>{{ service.UpdatedAt|getisodate }}</td>\n            </tr>\n            <tr ng-if="service.Version">\n              <td>版本</td>\n              <td>{{ service.Version }}</td>\n            </tr>\n            <tr>\n              <td>调度模式</td>\n              <td>{{ service.Mode }}</td>\n            </tr>\n            <tr ng-if="service.Mode === \'replicated\'">\n              <td>副本</td>\n              <td>\n                <span ng-if="service.Mode === \'replicated\'">\n                  <input class="input-sm" type="number" ng-model="service.Replicas" ng-change="updateServiceAttribute(service, \'Replicas\')" disable-authorization="DockerServiceUpdate" />\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td>镜像</td>\n              <td>\n                  <input type="text" class="form-control" uib-typeahead="image for image in availableImages | filter:$viewValue | limitTo:5"\n                    ng-model="service.Image" ng-change="updateServiceAttribute(service, \'Image\')" id="image_name" disable-authorization="DockerServiceUpdate">\n              </td>\n            </tr>\n            <tr>\n              <td colspan="{{webhookURL ? \'1\' : \'2\'}}">\n                服务-webhook\n                <portainer-tooltip position="top" message="用于自动更新此服务的Webhook(或回调URI)。向此Webhook发送POST请求(无需身份验证)将获取相关映像的最新版本并重新部署此服务。"></portainer-tooltip>\n                <label class="switch" style="margin-left: 20px;">\n                  <input disable-authorization="DockerServiceUpdate" type="checkbox" ng-model="WebhookExists" ng-click="updateWebhook(service)"><i></i>\n                </label>\n              </td>\n              <td ng-if="webhookURL">\n                <span class="text-muted">{{ webhookURL | truncatelr }}</span>\n                <button type="button" class="btn btn-sm btn-primary btn-sm space-left" ng-if="webhookURL" ng-click="copyWebhook()" >\n                  <span><i class="fa fa-copy space-right" aria-hidden="true"></i>复制链接</span>\n                </button>\n                <span>\n                  <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n                </span>\n              </td>\n          </tr>\n            <tr authorization="DockerServiceLogs, DockerServiceUpdate, DockerServiceDelete">\n              <td colspan="2">\n                <a authorization="DockerServiceLogs" ng-if="applicationState.endpoint.apiVersion >= 1.30" class="btn btn-primary btn-sm" type="button" ui-sref="docker.services.service.logs({id: service.Id})"><i class="fa fa-file-alt space-right" aria-hidden="true"></i>服务日志</a>\n                <button authorization="DockerServiceUpdate" type="button" class="btn btn-primary btn-sm" ng-disabled="state.updateInProgress || isUpdating" ng-click="forceUpdateService(service)" button-spinner="state.updateInProgress" ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                  <span ng-hide="state.updateInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i>更新服务</span>\n                  <span ng-show="state.updateInProgress">正在更新服务...</span>\n                </button>\n                <button authorization="DockerServiceDelete" type="button" class="btn btn-danger btn-sm" ng-disabled="state.deletionInProgress || isUpdating" ng-click="removeService()" button-spinner="state.deletionInProgress">\n                  <span ng-hide="state.deletionInProgress"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除服务</span>\n                  <span ng-show="state.deletionInProgress">正在删除服务...</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer authorization="DockerServiceUpdate">\n        <p class="small text-muted">\n          您需要帮助吗？点击查看 <a href="https://docs.docker.com/engine/reference/commandline/service_update/" target="self">Docker服务文档</a>.\n        </p>\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary" ng-disabled="!hasChanges(service, [\'Mode\', \'Replicas\', \'Image\', \'Name\', \'Webhooks\'])" ng-click="updateService(service)">应用更改</button>\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(service, [\'Mode\', \'Replicas\', \'Image\', \'Name\'])">重置更改</a></li>\n              <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>\n\n  <div class="col-lg-3 col-md-3 col-xs-3">\n    <rd-widget>\n      <rd-widget-header icon="fa-bars" title-text="快速导航"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <ul class="nav nav-pills nav-stacked">\n          <li><a href ng-click="goToItem(\'service-env-variables\')">环境变量</a></li>\n          <li><a href ng-click="goToItem(\'service-container-labels\')">容器标签</a></li>\n          <li><a href ng-click="goToItem(\'service-mounts\')">挂载</a></li>\n          <li><a href ng-click="goToItem(\'service-network-specs\')">网络和端口发布</a></li>\n          <li><a href ng-click="goToItem(\'service-resources\')">资源限制和预留</a></li>\n          <li><a href ng-click="goToItem(\'service-placement-constraints\')">部署策略</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.30"><a href ng-click="goToItem(\'service-placement-preferences\')">部署偏好设置</a></li>\n          <li><a href ng-click="goToItem(\'service-restart-policy\')">重启策略</a></li>\n          <li><a href ng-click="goToItem(\'service-update-config\')">更新配置</a></li>\n          <li><a href ng-click="goToItem(\'service-logging\')">日志</a></li>\n          <li><a href ng-click="goToItem(\'service-labels\')">服务标签</a></li>\n          <li><a href ng-click="goToItem(\'service-configs\')">配置</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.25"><a href ng-click="goToItem(\'service-secrets\')">密钥</a></li>\n          <li><a href ng-click="goToItem(\'service-tasks\')">任务</a></li>\n        </ul>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="service && applicationState.application.authentication"\n  resource-id="service.Id"\n  resource-control="service.ResourceControl"\n  resource-type="\'service\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="container-specs">容器规格</h3>\n    <div id="service-container-spec" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/container-specs.html\'"></div>\n    <div id="service-env-variables" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/environmentvariables.html\'"></div>\n    <div id="service-container-labels" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/containerlabels.html\'"></div>\n    <div id="service-mounts" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/mounts.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-network-specs">网络和端口</h3>\n    <div id="service-networks" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/networks.html\'"></div>\n    <div id="service-published-ports" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/ports.html\'"></div>\n    <div id="service-hosts-entries" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/hosts.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-specs">服务规格</h3>\n    <div id="service-resources" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/resources.html\'"></div>\n    <div id="service-placement-constraints" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/constraints.html\'"></div>\n    <div id="service-placement-preferences" ng-if="applicationState.endpoint.apiVersion >= 1.30" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/placementPreferences.html\'"></div>\n    <div id="service-restart-policy" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/restart.html\'"></div>\n    <div id="service-update-config" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/updateconfig.html\'"></div>\n    <div id="service-logging" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/logging.html\'"></div>\n    <div id="service-labels" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/servicelabels.html\'"></div>\n    <div id="service-configs" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/configs.html\'"></div>\n    <div id="service-secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/secrets.html\'"></div>\n    <div id="service-tasks" class="padding-top" ng-include="\'app/docker/views/services/edit/includes/tasks.html\'"></div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/createservice.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建服务"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.services">服务</a> &gt; 添加服务\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" autocomplete="off">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="service_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="service_name" placeholder="例如 myService">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            镜像配置\n          </div>\n          \x3c!-- image-and-registry --\x3e\n          <por-image-registry\n            image="formValues.Image"\n            registry="formValues.Registry"\n            auto-complete="true"\n            label-class="col-sm-1" input-class="col-sm-11 col-md-5"\n          ></por-image-registry>\n          \x3c!-- !image-and-registry --\x3e\n          <div class="col-sm-12 form-section-title">\n            调度\n          </div>\n          \x3c!-- scheduling-mode --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                调度模式\n              </label>\n              <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'global\'">全局</label>\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'replicated\'">复制</label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group form-inline" ng-if="formValues.Mode === \'replicated\'">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                副本\n              </label>\n              <input type="number" class="form-control" ng-model="formValues.Replicas" id="replicas" placeholder="例如 3" style="margin-left: 20px;">\n            </div>\n          </div>\n          \x3c!-- !scheduling-mode --\x3e\n          <div class="col-sm-12 form-section-title">\n            端口配置\n          </div>\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">端口映射</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的端口\n              </span>\n            </div>\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in formValues.Ports" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">主机</span>\n                  <input type="text" class="form-control" ng-model="portBinding.PublishedPort" placeholder="例如 80 或 1.2.3.4:80 (可选)">\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">容器</span>\n                  <input type="text" class="form-control" ng-model="portBinding.TargetPort" placeholder="例如 80">\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-5 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'ingress\'">入口</label>\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'host\'">主机</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- create-webhook --\x3e\n          <div class="col-sm-12 form-section-title">\n            Webhook（回调URI）\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                创建一个服务的webhook\n                <portainer-tooltip position="top" message="用于自动更新此服务的Webhook(或回调URI)。向此Webhook发送POST请求(无需身份验证)将获取相关映像的最新版本并重新部署此服务。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.Webhook"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !create-webhook  --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Image" ng-click="create()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建服务</span>\n                <span ng-show="state.actionInProgress">正在创建服务...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">命令和日志</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">存储卷</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">网络</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">标签</a></li>\n          <li class="interactive"><a data-target="#update-config" data-toggle="tab">更新和重启</a></li>\n          <li class="interactive" ng-if="applicationState.endpoint.apiVersion >= 1.25"><a data-target="#secrets" data-toggle="tab">密钥</a></li>\n          <li class="interactive"><a data-target="#configs" data-toggle="tab" ng-if="applicationState.endpoint.apiVersion >= 1.30">配置</a></li>\n          <li class="interactive"><a data-target="#resources-placement" data-toggle="tab" ng-click="refreshSlider()">资源和部署</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="col-sm-12 form-section-title">\n                命令\n              </div>\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="service_command" class="col-sm-2 col-lg-1 control-label text-left">命令</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.Command" id="service_command" placeholder="例如 /usr/bin/nginx -t -c /mynginx.conf">\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="service_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">入口点</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.EntryPoint" id="service_entrypoint" placeholder="例如 /bin/sh -c">\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="service_workingdir" class="col-sm-2 col-lg-1 control-label text-left">工作目录</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.WorkingDir" id="service_workingdir" placeholder="例如 /myapp">\n                </div>\n                <label for="service_user" class="col-sm-1 control-label text-left">用户</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.User" id="service_user" placeholder="例如 nginx">\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">环境变量</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加环境变量\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="例如 FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n\n              <div class="col-sm-12 form-section-title">\n                日志\n              </div>\n              \x3c!-- logging-driver --\x3e\n              <div class="form-group">\n                <label for="log-driver" class="col-sm-2 col-lg-1 control-label text-left">驱动</label>\n                <div class="col-sm-4">\n                  <select class="form-control" ng-model="formValues.LogDriverName" id="log-driver">\n                    <option selected value="">默认日志驱动</option>\n                    <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n                    <option value="none">空</option>\n                  </select>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    日志的驱动将覆盖docker守护进程服务的默认驱动，如果您不想覆盖它，请选择默认日志驱动，支持的日志驱动可以在<a href="https://docs.docker.com/engine/admin/logging/overview/#supported-logging-drivers" target="_blank">Docker文档</a>中找到。\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !logging-driver --\x3e\n              \x3c!-- logging-opts --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">\n                    选项\n                    <portainer-tooltip position="top" message="除非选择非空(none)或默认(default)之外的驱动，否则添加按钮将被禁用。该选项用于选定特定的驱动，请参阅驱动文档。"></portainer-tooltip>\n                  </label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="!formValues.LogDriverName || formValues.LogDriverName === \'none\' || addLogDriverOpt(formValues.LogDriverName)">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加日志驱动选项\n                  </span>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="opt in formValues.LogDriverOpts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">选项</span>\n                      <input type="text" class="form-control" ng-model="opt.name" placeholder="例如 FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="opt.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- logging-opts-input-list --\x3e\n              </div>\n              \x3c!-- !logging-opts --\x3e\n\n\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">存储卷映射</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的存储卷\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    <div class="col-sm-12" style="margin-top: 10px;">\n                      \x3c!-- volume-line1 --\x3e\n                      <div class="col-sm-12 form-inline">\n                        \x3c!-- container-path --\x3e\n                        <div class="input-group input-group-sm col-sm-6">\n                          <span class="input-group-addon">容器</span>\n                          <input type="text" class="form-control" ng-model="volume.Target" placeholder="例如 /path/in/container">\n                        </div>\n                        \x3c!-- !container-path --\x3e\n                        \x3c!-- volume-type --\x3e\n                        <div class="input-group col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm" ng-if="isAdmin || allowBindMounts">\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">存储卷</label>\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'bind\'" ng-click="volume.Id = \'\'">绑定</label>\n                          </div>\n                          <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                          </button>\n                        </div>\n                        \x3c!-- !volume-type --\x3e\n                      </div>\n                      \x3c!-- !volume-line1 --\x3e\n                      \x3c!-- volume-line2 --\x3e\n                      <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                        <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                        \x3c!-- volume --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'volume\'">\n                          <span class="input-group-addon">存储卷</span>\n                          <select class="form-control" ng-model="volume.Source">\n                            <option selected disabled hidden value="">选择一个存储卷</option>\n                            <option ng-repeat="vol in availableVolumes" ng-value="vol.Id">{{ vol.Id|truncate:30}} - {{ vol.Driver|truncate:30}}</option>\n                          </select>\n                        </div>\n                        \x3c!-- !volume --\x3e\n                        \x3c!-- bind --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'bind\'">\n                          <span class="input-group-addon">主机</span>\n                          <input type="text" class="form-control" ng-model="volume.Source" placeholder="例如 /path/on/host">\n                        </div>\n                        \x3c!-- !bind --\x3e\n                        \x3c!-- read-only --\x3e\n                        <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm">\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="false">可写</label>\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="true">只读</label>\n                          </div>\n                        </div>\n                        \x3c!-- !read-only --\x3e\n                      </div>\n                      \x3c!-- !volume-line2 --\x3e\n                    </div>\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n              \x3c!-- !volumes --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">网络</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="formValues.Network">\n                    <option selected disabled hidden value="">选择一个网络</option>\n                    <option ng-repeat="net in availableNetworks | orderBy: \'Name\'" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n                <div class="col-sm-2"></div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- extra-networks --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">额外的网络</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraNetwork()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加额外的网络\n                  </span>\n                </div>\n                \x3c!-- network-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="network in formValues.ExtraNetworks" style="margin-top: 2px;">\n                    <select class="form-control" ng-model="network.Name">\n                      <option selected disabled hidden value="">选择一个网络</option>\n                      <option ng-repeat="net in availableNetworks" ng-value="net.Name">{{ net.Name }}</option>\n                    </select>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraNetwork($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !network-input-list --\x3e\n              </div>\n              \x3c!-- !extra-networks --\x3e\n              \x3c!-- extra-hosts-variables --\x3e\n              <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Hosts文件条目</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addHostsEntry()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加额外的条目\n                  </span>\n                </div>\n                \x3c!-- hosts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.HostsEntries" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 host:IP">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeHostsEntry($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !hosts-input-list --\x3e\n              </div>\n              \x3c!-- !extra-hosts-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">服务标签</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加服务标签\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n              \x3c!-- container-labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">容器标签</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addContainerLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加容器标签\n                  </span>\n                </div>\n                \x3c!-- container-labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.ContainerLabels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !container-labels-input-list --\x3e\n              </div>\n              \x3c!-- !container-labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-update-config --\x3e\n          <div class="tab-pane" id="update-config" ng-include="\'app/docker/views/services/create/includes/update-restart.html\'"></div>\n          \x3c!-- !tab-update-config --\x3e\n          \x3c!-- tab-secrets --\x3e\n          <div class="tab-pane" id="secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" ng-include="\'app/docker/views/services/create/includes/secret.html\'"></div>\n          \x3c!-- !tab-secrets --\x3e\n          \x3c!-- tab-configs --\x3e\n          <div class="tab-pane" id="configs" ng-if="applicationState.endpoint.apiVersion >= 1.30" ng-include="\'app/docker/views/services/create/includes/config.html\'"></div>\n          \x3c!-- !tab-configs --\x3e\n          \x3c!-- tab-resources-placement --\x3e\n          <div class="tab-pane" id="resources-placement" ng-include="\'app/docker/views/services/create/includes/resources-placement.html\'"></div>\n          \x3c!-- !tab-resources-placement --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/logs/servicelogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="服务日志"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.services">服务</a> > <a ui-sref="docker.services.service({id: service.Id})">{{ service.Name }}</a> &gt; 日志\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs" ng-if="logs" log-collection-change="changeLogCollection" display-timestamps="state.displayTimestamps" line-count="state.lineCount" since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/swarm/swarm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="集群概览">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.swarm" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>集群</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="集群状态"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>节点</td>\n              <td>{{ info.Swarm.Nodes }}</td>\n            </tr>\n            <tr>\n              <td>Docker API版本</td>\n              <td>{{ docker.ApiVersion }}</td>\n            </tr>\n            <tr>\n              <td>CPU总数</td>\n              <td>{{ totalCPU }}</td>\n            </tr>\n            <tr>\n              <td>内存总量</td>\n              <td>{{ totalMemory|humansize: 2 }}</td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>转到群集可视化管理器</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <nodes-datatable\n    title-text="节点" title-icon="fa-hdd"\n    dataset="nodes" table-key="nodes"\n    order-by="Hostname" \n    show-ip-address-column="applicationState.endpoint.apiVersion >= 1.25"\n    access-to-node-details="!applicationState.application.authentication || isAdmin"\n    ></nodes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/swarm/visualizer/swarmvisualizer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="群集可视化管理器">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.swarm.visualizer" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.swarm">群集</a> &gt; <a ui-sref="docker.swarm.visualizer">可视化管理器</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="集群信息">\n        <div class="pull-right">\n          <button type="button" class="btn btn-sm btn-primary" ng-click="changeShowInformationPanel(true)" ng-if="!state.ShowInformationPanel">显示</button>\n          <button type="button" class="btn btn-sm btn-primary" ng-click="changeShowInformationPanel(false)" ng-if="state.ShowInformationPanel">隐藏</button>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body ng-if="state.ShowInformationPanel">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>节点</td>\n              <td>{{ nodes.length }}</td>\n            </tr>\n            <tr>\n              <td>服务</td>\n              <td>{{ services.length }}</td>\n            </tr>\n            <tr>\n              <td>任务</td>\n              <td>{{ tasks.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            过滤器\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                只显示运行中的任务\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.DisplayOnlyRunningTasks" ng-change="changeDisplayOnlyRunningTasks()"><i></i>\n              </label>\n            </div>\n          </div>\n        </form>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            刷新率\n          </div>\n          <div class="form-group">\n            <label for="refreshRate" class="col-sm-1 margin-sm-top control-label text-left">\n              时间间隔\n              <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="display: none;"></i>\n            </label>\n            <div class="col-sm-2">\n              <select id="refreshRate" ng-model="state.refreshRate" ng-change="changeUpdateRepeater()" class="form-control">\n                <option value="5">5s</option>\n                <option value="10">10s</option>\n                <option value="30">30s</option>\n                <option value="60">60s</option>\n              </select>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="visualizerData">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="群集可视化管理器"></rd-widget-header>\n      <rd-widget-body>\n        <div class="visualizer_container">\n          <div class="node" ng-repeat="node in visualizerData.nodes track by $index">\n            <div class="node_info">\n              <div>\n                <div>\n                  <b>{{ node.Name || node.Hostname }}</b>\n                  <span class="node_platform">\n                    <i class="fab fa-linux" aria-hidden="true" ng-if="node.PlatformOS === \'linux\'"></i>\n                    <i class="fab fa-windows" aria-hidden="true" ng-if="node.PlatformOS === \'windows\'"></i>\n                  </span>\n                </div>\n              </div>\n              <div>{{ node.Role }}</div>\n              <div>CPU: {{ node.CPUs / 1000000000 }}</div>\n              <div>内存: {{ node.Memory|humansize: 2 }}</div>\n              <div><span class="label label-{{ node.Status | nodestatusbadge }}">{{ node.Status }}</span></div>\n            </div>\n            <div class="tasks">\n              <div class="task task_{{ task.Status.State | visualizerTask }}" style="border: 2px solid {{ task.ServiceId | visualizerTaskBorderColor }}" ng-repeat="task in node.Tasks | orderBy: \'ServiceName\' | filter: (state.DisplayOnlyRunningTasks || \'\') && { Status: { State: \'running\' } }">\n                <div class="service_name">{{ task.ServiceName }}</div>\n                <div>镜像: {{ task.Spec.ContainerSpec.Image | hideshasum }}</div>\n                <div>状态: {{ task.Status.State }}</div>\n                <div>更新: {{ task.Updated | getisodate }}</div>\n                <div ng-if="task.Spec.Resources.Limits.MemoryBytes">内存限制: {{ task.Spec.Resources.Limits.MemoryBytes | humansize: 2:2 }}</div>\n                <div ng-if="task.Spec.Resources.Limits.NanoCPUs">CPU限制: {{ task.Spec.Resources.Limits.NanoCPUs / 1000000000 }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/tasks/edit/task.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="任务详情"></rd-header-title>\n  <rd-header-content ng-if="task && service">\n    <a ui-sref="docker.services">服务</a> &gt; <a ui-sref="docker.services.service({id: service.Id })">{{ service.Name }}</a> &gt; {{ task.Id }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="task && service">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title-text="任务状态"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>{{ task.Id }}</td>\n            </tr>\n            <tr>\n              <td>状态</td>\n              <td><span class="label label-{{ task.Status.State|taskstatusbadge }}">{{ task.Status.State }}</span></td>\n            </tr>\n            <tr>\n              <td>状态消息</td>\n              <td>{{ task.Status.Message }}</td>\n            </tr>\n            <tr ng-if="task.Status.Err">\n              <td>错误信息</td>\n              <td><code>{{ task.Status.Err }}</code></td>\n            </tr>\n            <tr>\n              <td>镜像</td>\n              <td>{{ task.Spec.ContainerSpec.Image | hideshasum }}</td>\n            </tr>\n            <tr ng-if="service.Mode !== \'global\'">\n              <td>序列</td>\n              <td>{{ task.Slot }}</td>\n            </tr>\n            <tr>\n              <td>创建于</td>\n              <td>{{ task.Created|getisodate }}</td>\n            </tr>\n            <tr ng-if="task.Status.ContainerStatus.ContainerID">\n              <td>容器ID</td>\n              <td>{{ task.Status.ContainerStatus.ContainerID }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.apiVersion >= 1.30 && task.Status.State|taskhaslogs">\n              <td colspan="2"><a class="btn btn-primary btn-sm" type="button" ui-sref="docker.tasks.task.logs({id: task.Id})"><i class="fa fa-file-alt space-right" aria-hidden="true"></i>任务日志</a></td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/tasks/logs/tasklogs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="任务详情"></rd-header-title>\n  <rd-header-content ng-if="task && service">\n    <a ui-sref="docker.services">服务</a> &gt; <a ui-sref="docker.services.service({id: service.Id })">{{ service.Name }}</a> &gt; <a ui-sref="docker.tasks.task({id: task.Id })">{{ task.Id }}</a> &gt; 日志\n  </rd-header-content>\n</rd-header>\n\n<log-viewer\n  data="logs" ng-if="logs" log-collection-change="changeLogCollection" display-timestamps="state.displayTimestamps" line-count="state.lineCount" since-timestamp="state.sinceTimestamp"\n></log-viewer>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/volumes.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="存储卷列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="docker.volumes" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>存储卷</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <volumes-datatable\n      title-text="存储卷" title-icon="fa-cubes"\n      dataset="volumes" table-key="volumes"\n      order-by="Id"\n      remove-action="removeAction"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n      show-browse-action="applicationState.endpoint.mode.agentProxy"\n      offline-mode="offlineMode"\n    ></volumes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/edit/volume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="存储卷详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">存储卷</a> &gt; <a ui-sref="docker.volumes.volume({id: volume.Id})">{{ volume.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="volume">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cube" title-text="存储卷详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ volume.Id }}\n                <button authorization="DockerVolumeDelete" class="btn btn-xs btn-danger" ng-click="removeVolume()"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个存储卷</button>\n              </td>\n            </tr>\n            <tr>\n              <td>已创建</td>\n              <td>{{ volume.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>挂载路径</td>\n              <td>{{ volume.Mountpoint }}</td>\n            </tr>\n            <tr>\n              <td>驱动</td>\n              <td>{{ volume.Driver }}</td>\n            </tr>\n            <tr ng-if="!(volume.Labels | emptyobject)">\n              <td>标签</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in volume.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="volume && applicationState.application.authentication"\n  resource-id="volume.Id"\n  resource-control="volume.ResourceControl"\n  resource-type="\'volume\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="!(volume.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="存储卷选项"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in volume.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row" ng-if="containersUsingVolume.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title-text="已被容器使用的卷"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>容器名称</th>\n            <th>挂载目标</th>\n            <th>只读</th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="container in containersUsingVolume">\n              <td><a ui-sref="docker.containers.container({ id: container.Id, nodeName: container.NodeName })">{{ container | containername }}</a></td>\n              <td>{{ container.volumeData.Destination }}</td>\n              <td>{{ !container.volumeData.RW }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/browse/browsevolume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="存储卷浏览器"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">存储卷</a> &gt; <a ui-sref="docker.volumes.volume({ id: volumeId })">{{ volumeId }}</a> &gt; 浏览\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <volume-browser\n      volume-id="volumeId"\n      node-name="nodeName"\n      \n      is-upload-enabled="agentApiVersion > 1"\n    ></volume-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/volumes/create/createvolume.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建存储卷"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">存储卷</a> &gt; 添加存储卷\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="volumeCreationForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="volume_name" class="col-sm-2 col-md-1 control-label text-left">名称</label>\n            <div class="col-sm-10 col-md-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="volume_name" placeholder="例如 myVolume">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            驱动配置\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="volume_driver" class="col-sm-2 col-md-1 control-label text-left">驱动</label>\n            <div class="col-sm-10 col-md-11">\n              <select class="form-control" ng-options="driver for driver in availableVolumeDrivers" ng-model="formValues.Driver" ng-if="availableVolumeDrivers.length > 0">\n                <option disabled hidden value="">选择一个驱动</option>\n              </select>\n              <input type="text" class="form-control" ng-model="formValues.Driver" id="volume_driver" placeholder="例如 driverName" ng-if="availableVolumeDrivers.length === 0">\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                驱动选项\n                <portainer-tooltip position="bottom" message="驱动选项是基于选定的特定驱动程序，请参阅所选的驱动程序文档。"></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加驱动选项\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="例如 mountpoint">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="例如 /path/on/host">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          \x3c!-- nfs-management --\x3e\n          <volumes-nfs-form data="formValues.NFSData" ng-show="formValues.Driver === \'local\'"></volumes-nfs-form>\n          \x3c!-- !nfs-management --\x3e\n          \x3c!-- storidge --\x3e\n          <div ng-if="formValues.Driver === \'cio:latest\'">\n            <div class="col-sm-12 form-section-title">\n              存储\n            </div>\n            <storidge-profile-selector storidge-profile="formValues.StoridgeProfile"></storidge-profile-selector>\n          </div>\n          \x3c!-- storidge --\x3e\n          <div ng-if="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && formValues.Driver === \'local\'">\n            <div class="col-sm-12 form-section-title">\n              部署\n            </div>\n            \x3c!-- node-selection --\x3e\n            <node-selector\n              model="formValues.NodeName">\n            </node-selector>\n            \x3c!-- !node-selection --\x3e\n          </div>\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="create()" ng-disabled="state.actionInProgress || (formValues.NFSData.useNFS && !volumeCreationForm.$valid)" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建存储卷</span>\n                <span ng-show="state.actionInProgress">正在创建存储卷...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/profiles/profiles.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge存储配置">\n    <a data-toggle="tooltip" title="刷新" ui-sref="storidge.profiles" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">存储</a> &gt; <a ui-sref="storidge.profiles">配置</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="添加一个配置">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="profile_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="profile_name" placeholder="例如 myProfile">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">注意：配置文件将使用默认属性创建。</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="create()" ng-disabled="state.actionInProgress || !formValues.Name" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建配置文件</span>\n                <span ng-show="state.actionInProgress">正在创建配置文件...</span>\n              </button>\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name" ui-sref="storidge.profiles.new({ profileName: formValues.Name })">正在修改默认值...</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-profiles-datatable\n    title-text="配置" title-icon="fa-sticky-note"\n    dataset="profiles" table-key="storidge_profiles"\n    order-by="Name" \n    remove-action="removeAction"\n    ></storidge-profiles-datatable>\n  </div>\n</div>\n\n\n\x3c!-- <div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sticky-note" title-text="配置">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-md-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeProfiles()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="profile in (state.filteredProfiles = (profiles | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="profile.Checked" ng-change="selectItem(profile)" /></td>\n                <td>\n                  <a ui-sref="storidge.profiles.profile({id: profile.Name})">{{ profile.Name }}</a>\n                </td>\n              </tr>\n              <tr ng-if="!profiles">\n                <td colspan="3" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="state.filteredProfiles.length == 0">\n                <td colspan="3" class="text-center text-muted">No profiles available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="profiles" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div> --\x3e\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/profiles/edit/profile.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="配置详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.profiles">配置</a> &gt; {{ profile.Name }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="profile">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="storidgeUpdateProfileForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="profile_name" class="col-sm-2 col-lg-1 control-label text-left">名称</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.Name" name="profile_name" disabled>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            配置文件\n          </div>\n          \x3c!-- directory --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeUpdateProfileForm.profile_directory.$invalid }">\n            <label for="profile_directory" class="col-sm-2 col-lg-1 control-label text-left">目录</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="profile.Directory" name="profile_directory" placeholder="例如 /cio/myProfile" required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeUpdateProfileForm.profile_directory.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeUpdateProfileForm.profile_directory.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填栏。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !directory --\x3e\n          \x3c!-- capacity --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeUpdateProfileForm.profile_capacity.$invalid }">\n            <label for="profile_capacity" class="col-sm-2 col-lg-1 control-label text-left">容量</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="number" class="form-control" ng-model="profile.Capacity" name="profile_capacity" ng-min="1" ng-max="64000" placeholder="2" required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeUpdateProfileForm.profile_capacity.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeUpdateProfileForm.profile_capacity.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填栏。</p>\n                <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 最小容量： 1。</p>\n                <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 最大容量： 64000。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !capacity --\x3e\n          \x3c!-- redundancy --\x3e\n          <div class="form-group">\n            <label for="profile_redundancy" class="col-sm-2 col-lg-1 control-label text-left">冗余</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_redundancy" ng-model="profile.Redundancy" ng-options="+(opt.value) as opt.label for opt in RedundancyOptions" class="form-control">\n              </select>\n            </div>\n          </div>\n          \x3c!-- !redudancy --\x3e\n          \x3c!-- provisioning --\x3e\n          <div class="form-group">\n            <label for="profile_provisioning" class="col-sm-2 col-lg-1 control-label text-left">预留</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_provisioning" ng-model="profile.Provisioning" class="form-control">\n                <option value="thin">薄模式</option>\n                <option value="thick">厚模式</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !provisioning --\x3e\n          \x3c!-- type --\x3e\n          <div class="form-group">\n            <label for="profile_type" class="col-sm-2 col-lg-1 control-label text-left">类型</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_type" ng-model="profile.Type" class="form-control">\n                <option value="ssd">固态硬盘</option>\n                <option value="hdd">机械硬盘</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !type --\x3e\n          \x3c!-- Filesystem --\x3e\n          <div class="form-group">\n              <label for="profile_filesystem" class="col-sm-2 col-lg-1 control-label text-left">文件系统</label>\n              <div class="col-sm-10 col-lg-11">\n                <select name="profile_filesystem" ng-model="profile.Filesystem" class="form-control">\n                  <option value="btrfs">btrfs</option>\n                  <option value="ext4">ext4</option>\n                  <option value="xfs">xfs</option>\n                </select>\n              </div>\n            </div>\n            \x3c!-- !Filesystem --\x3e\n            \x3c!-- snapshotEnabled --\x3e\n            <div class="form-group">\n              <label for="profile_snapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n                启用快照\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input name="profile_snapshotEnabled" type="checkbox" ng-model="profile.SnapshotEnabled"><i></i>\n              </label>\n            </div>\n            \x3c!-- !snapshotEnabled --\x3e\n            \x3c!-- snapshotMax --\x3e\n            <div class="form-group" ng-if="profile.SnapshotEnabled">\n              <label for="profile_snapshotMax" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n                快照最大数量\n              </label>\n              <div class="col-sm-4">\n                <slider model="profile.SnapshotMax" floor="1" ceil="100" step="1"></slider>\n              </div>\n              <div class="col-sm-2">\n                <input type="number" min="1" class="form-control" ng-model="profile.SnapshotMax" id="profile_snapshotMax">\n              </div>\n              <div class="col-sm-4">\n                <p class="small text-muted" style="margin-top: 7px;">\n                  快照最大 (<b>数量</b>)\n                </p>\n              </div>\n            </div>\n            \x3c!-- !snapshotMax --\x3e\n            \x3c!-- snapshotEnabled --\x3e\n            <div class="form-group" ng-if="profile.SnapshotEnabled">\n              <label for="profile_recurringSnapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n                启用定期快照\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input name="profile_recurringSnapshotEnabled" type="checkbox" ng-model="state.RecurringSnapshotEnabled"><i></i>\n              </label>\n            </div>\n            \x3c!-- !snapshotEnabled --\x3e\n            \x3c!-- snapshotInterval --\x3e\n            <div class="form-group" ng-if="profile.SnapshotEnabled && state.RecurringSnapshotEnabled">\n              <label for="profile_snapshotInterval" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n                快照间隔\n              </label>\n              <div class="col-sm-4">\n                <slider model="profile.SnapshotInterval" floor="1" ceil="2880" step="1"></slider>\n              </div>\n              <div class="col-sm-2">\n                <input type="number" min="1" class="form-control" ng-model="profile.SnapshotInterval" id="profile_snapshotInterval">\n              </div>\n              <div class="col-sm-4">\n                <p class="small text-muted" style="margin-top: 7px;">\n                  快照间隔 (<b>分钟</b>)\n                </p>\n              </div>\n            </div>\n            \x3c!-- !snapshotInterval --\x3e\n            \x3c!-- encryptionEnabled --\x3e\n            <div class="form-group">\n              <label for="profile_encryptionEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n                启用加密\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input name="profile_encryptionEnabled" type="checkbox" ng-model="profile.EncryptionEnabled"><i></i>\n              </label>\n            </div>\n            \x3c!-- !encryptionEnabled --\x3e\n            \x3c!-- interfaceType --\x3e\n            <div class="form-group">\n              <label for="profile_interfaceType" class="col-sm-2 col-lg-1 control-label text-left">接口类型</label>\n              <div class="col-sm-10 col-lg-11">\n                <select name="profile_interfaceType" ng-model="profile.InterfaceType" class="form-control">\n                  <option value=""></option>\n                  <option value="nfs">nfs</option>\n                </select>\n              </div>\n            </div>\n            \x3c!-- !interfaceType --\x3e\n            \x3c!-- interfaceDriver --\x3e\n            <div class="form-group">\n              <label for="profile_interfaceDriver" class="col-sm-2 col-lg-1 control-label text-left">网络接口驱动</label>\n              <div class="col-sm-10 col-lg-11">\n                <select name="profile_interfaceDriver" ng-model="profile.InterfaceDriver" class="form-control">\n                  <option value=""></option>\n                  <option value="macvlan">macvlan</option>\n                  <option value="overlay">overlay</option>\n                </select>\n              </div>\n            </div>\n            \x3c!-- !interfaceDriver --\x3e\n            \x3c!-- interfaceNetwork --\x3e\n            <div class="form-group">\n              <label for="profile_interfaceNetwork" class="col-sm-2 col-lg-1 control-label text-left">网络名称</label>\n              <div class="col-sm-10 col-lg-11">\n                <input type="text" class="form-control" ng-model="profile.InterfaceNetwork" name="profile_interfaceNetwork" pattern="[a-zA-Z0-9]+">\n              </div>\n            </div>\n            \x3c!-- !interfaceNetwork --\x3e\n            \x3c!-- interfaceConf --\x3e\n            <div class="form-group">\n              <label for="profile_interfaceConf" class="col-sm-2 col-lg-1 control-label text-left">接口配置</label>\n              <div class="col-sm-10 col-lg-11">\n                <input type="text" class="form-control" ng-model="profile.InterfaceConf" name="profile_interfaceConf">\n              </div>\n            </div>\n            \x3c!-- !interfaceConf --\x3e\n            \x3c!-- labels --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">标签</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n                </span>\n              </div>\n              \x3c!-- labels-input-list --\x3e\n              <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">名称</span>\n                    <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n                  </div>\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">参数值</span>\n                    <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !labels-input-list --\x3e\n            </div>\n            \x3c!-- !labels --\x3e\n          \x3c!-- iops --\x3e\n          <div ng-if="!state.LimitBandwidth || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              IOPS\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="permissions" class="control-label text-left">\n                  IOPS限制\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="state.LimitIOPS" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)"><i></i>\n                </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="state.LimitIOPS">\n              <label for="min_iops" class="col-sm-1 control-label text-left">最小</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.min_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MinIOPS" name="min_iops" ng-min="30" ng-max="999999" placeholder="100" required>\n              </div>\n              <label for="max_iops" class="col-sm-1 control-label text-left">最大</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.max_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MaxIOPS" name="max_iops" ng-min="30" ng-max="999999" placeholder="2000" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.min_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.min_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS最小值： 30。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS最大值： 999999。</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.max_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.max_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS最小值： 30。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS最大值： 999999。</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !iops --\x3e\n          \x3c!-- bandwidth --\x3e\n          <div ng-if="!state.LimitIOPS || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              带宽\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="permissions" class="control-label text-left">\n                  带宽限制\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="state.LimitBandwidth" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)"><i></i>\n                </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="state.LimitBandwidth">\n              <label for="min_bandwidth" class="col-sm-1 control-label text-left">最小</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.min_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MinBandwidth" name="min_bandwidth" ng-min="1" ng-max="5000" placeholder="1" required>\n              </div>\n              <label for="max_bandwidth" class="col-sm-1 control-label text-left">最大</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeUpdateProfileForm.max_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="profile.MaxBandwidth" name="max_bandwidth" ng-min="1" ng-max="5000" placeholder="100" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.min_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.min_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth最小值： 1。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth最大值： 5000。</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeUpdateProfileForm.max_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeUpdateProfileForm.max_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth最小值： 1。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth最大值： 5000。</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !bandwidth --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="update()" ng-disabled="state.updateInProgress || !storidgeUpdateProfileForm.$valid" button-spinner="state.updateInProgress">\n                <span ng-hide="state.updateInProgress">更新配置文件</span>\n                <span ng-show="state.updateInProgress">正在更新配置文件...</span>\n              </button>\n              <button type="button" class="btn btn-danger btn-sm" ng-click="delete()" ng-disabled="state.deleteInProgress" button-spinner="state.deleteInProgress">\n                <span ng-hide="state.deleteInProgress">删除配置文件</span>\n                <span ng-show="state.deleteInProgress">正在删除配置文件...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/drives/drives.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge 驱动和设备">\n    <a data-toggle="tooltip" title="刷新" ui-sref="storidge.drives" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.drives">驱动和设备</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-drives-datatable\n    title-text="驱动/设备" title-icon="fa-hdd"\n    dataset="drives" table-key="storidge_drives"\n    order-by="Id"\n    rescan-action="rescanAction"\n    add-action="addAction"\n    action-in-progress="state.actionInProgress"\n    addition-in-progress="state.additionInProgress"\n    ></storidge-drives-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/drives/inspect/drive.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="驱动/设备 详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a ui-sref="storidge.drives">驱动/设备</a> &gt; <a ui-sref="storidge.drives.drive({id: drive.Id})">{{ drive.Id }}</a>\n  </rd-header-content>\n</rd-header>\n  \n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd" title-text="驱动/设备 详情 "></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ drive.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeDrive()" ng-if="drive.Status === \'faulty\'" button-spinner="actionInProgress" ng-disabled="actionInProgress">\n                  <span ng-hide="actionInProgress"><i class="fa fa-trash space-right" aria-hidden="true"></i>从存储池中删除</span>\n                  <span ng-show="actionInProgress">删除中...</span>\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>节点</td>\n              <td>{{ drive.Node }}</td>\n            </tr>\n            <tr>\n              <td>驱动/设备</td>\n              <td>{{ drive.Device }}</td>\n            </tr>\n            <tr>\n              <td>大小</td>\n              <td>{{ drive.Size }}</td>\n            </tr>\n            <tr>\n              <td>使用情况</td>\n              <td>{{ drive.Use }}</td>\n            </tr>\n            <tr>\n              <td>类型</td>\n              <td>{{ drive.Type }}</td>\n            </tr>\n            <tr>\n              <td>状态</td>\n              <td>\n                <span class="label label-{{ drive.Status|drivestatusbadge }}">{{ drive.Status|capitalize }}</span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/snapshots/inspect/snapshot.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="快照详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="docker.volumes">卷</a> &gt; <a ui-sref="docker.volumes.volume({id: volumeId})">{{ volumeId }}</a> &gt; 快照 &gt; <a ui-sref="docker.volumes.volume.snapshot({id: snapshot.Id})">{{ snapshot.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd" title-text="快照详情 "></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ snapshot.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeSnapshot()">\n                  <i class="fa fa-trash space-right" aria-hidden="true"></i>删除快照\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>日期</td>\n              <td>{{ snapshot.Date }}</td>\n            </tr>\n            <tr>\n              <td>描述</td>\n              <td>{{ snapshot.Description }}</td>\n            </tr>\n            <tr>\n              <td>源ID</td>\n              <td>{{ snapshot.SourceID }}</td>\n            </tr>\n            <tr>\n              <td>类型</td>\n              <td>{{ snapshot.Type }}</td>\n            </tr>\n            <tr>\n              <td>目录</td>\n              <td>{{ snapshot.Directory }}</td>\n            </tr>\n            <tr>\n              <td>源</td>\n              <td>{{ snapshot.Source }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/profiles/create/createprofile.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建配置"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge存储</a> &gt; <a ui-sref="storidge.profiles">配置</a> &gt; 添加配置\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="storidgeCreateProfileForm">\n          \x3c!-- name-input --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_name.$invalid }">\n            <label for="profile_name" class="col-sm-2 col-lg-1 control-label text-left">名称</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.Name" name="profile_name" placeholder="例如 myProfile" ng-change="updatedName()" required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填栏。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            配置文件\n          </div>\n          \x3c!-- directory --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_directory.$invalid }">\n            <label for="profile_directory" class="col-sm-2 col-lg-1 control-label text-left">目录</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.Directory" name="profile_directory" placeholder="例如 /cio/myProfile" ng-change="updatedDirectory()" required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_directory.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_directory.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填栏。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !directory --\x3e\n          \x3c!-- capacity --\x3e\n          <div class="form-group" ng-class="{ \'has-error\': storidgeCreateProfileForm.profile_capacity.$invalid }">\n            <label for="profile_capacity" class="col-sm-2 col-lg-1 control-label text-left">容量</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="number" class="form-control" ng-model="model.Capacity" name="profile_capacity" ng-min="1" ng-max="64000" placeholder="2" required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="storidgeCreateProfileForm.profile_capacity.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="storidgeCreateProfileForm.profile_capacity.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填栏。</p>\n                <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 最小容量： 1。</p>\n                <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 最大容量： 64000。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !capacity --\x3e\n          \x3c!-- redundancy --\x3e\n          <div class="form-group">\n            <label for="profile_redundancy" class="col-sm-2 col-lg-1 control-label text-left">冗余</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_redundancy" ng-model="model.Redundancy" ng-options="+(opt.value) as opt.label for opt in RedundancyOptions" class="form-control">\n              </select>\n            </div>\n          </div>\n          \x3c!-- !redudancy --\x3e\n          \x3c!-- provisioning --\x3e\n          <div class="form-group">\n            <label for="profile_provisioning" class="col-sm-2 col-lg-1 control-label text-left">预留</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_provisioning" ng-model="model.Provisioning" class="form-control">\n                <option value="thin">薄模式</option>\n                <option value="thick">厚模式</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !provisioning --\x3e\n          \x3c!-- type --\x3e\n          <div class="form-group">\n            <label for="profile_type" class="col-sm-2 col-lg-1 control-label text-left">类型</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_type" ng-model="model.Type" class="form-control">\n                <option value="ssd">固态硬盘</option>\n                <option value="hdd">机械硬盘</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !type --\x3e\n          \x3c!-- Filesystem --\x3e\n          <div class="form-group">\n            <label for="profile_filesystem" class="col-sm-2 col-lg-1 control-label text-left">文件系统</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_filesystem" ng-model="model.Filesystem" class="form-control">\n                <option value="btrfs">btrfs</option>\n                <option value="ext4">ext4</option>\n                <option value="xfs">xfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !Filesystem --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_snapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              启用快照\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input name="profile_snapshotEnabled" type="checkbox" ng-model="model.SnapshotEnabled"><i></i>\n            </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotMax --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled">\n            <label for="profile_snapshotMax" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              快照最大数量\n            </label>\n            <div class="col-sm-4">\n              <slider model="model.SnapshotMax" floor="1" ceil="100" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="model.SnapshotMax" id="profile_snapshotMax">\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                快照最大 (<b>数量</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotMax --\x3e\n          \x3c!-- snapshotEnabled --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled">\n            <label for="profile_recurringSnapshotEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              启用定期快照\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input name="profile_recurringSnapshotEnabled" type="checkbox" ng-model="state.RecurringSnapshotEnabled"><i></i>\n            </label>\n          </div>\n          \x3c!-- !snapshotEnabled --\x3e\n          \x3c!-- snapshotInterval --\x3e\n          <div class="form-group" ng-if="model.SnapshotEnabled && state.RecurringSnapshotEnabled">\n            <label for="profile_snapshotInterval" class="col-sm-2 col-lg-1 control-label text-left" style="margin-top: 20px;">\n              快照间隔\n            </label>\n            <div class="col-sm-4">\n              <slider model="model.SnapshotInterval" floor="1" ceil="2880" step="1"></slider>\n            </div>\n            <div class="col-sm-2">\n              <input type="number" min="1" class="form-control" ng-model="model.SnapshotInterval" id="profile_snapshotInterval">\n            </div>\n            <div class="col-sm-4">\n              <p class="small text-muted" style="margin-top: 7px;">\n                快照间隔 (<b>分钟</b>)\n              </p>\n            </div>\n          </div>\n          \x3c!-- !snapshotInterval --\x3e\n          \x3c!-- encryptionEnabled --\x3e\n          <div class="form-group">\n            <label for="profile_encryptionEnabled" class="col-sm-2 col-lg-1 control-label text-left">\n              启用加密\n            </label>\n            <label class="switch" style="margin-left: 20px;">\n              <input name="profile_encryptionEnabled" type="checkbox" ng-model="model.EncryptionEnabled"><i></i>\n            </label>\n          </div>\n          \x3c!-- !encryptionEnabled --\x3e\n          \x3c!-- interfaceType --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceType" class="col-sm-2 col-lg-1 control-label text-left">接口类型</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceType" ng-model="model.InterfaceType" class="form-control">\n                <option value=""></option>\n                <option value="nfs">nfs</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceType --\x3e\n          \x3c!-- interfaceDriver --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceDriver" class="col-sm-2 col-lg-1 control-label text-left">网络接口驱动</label>\n            <div class="col-sm-10 col-lg-11">\n              <select name="profile_interfaceDriver" ng-model="model.InterfaceDriver" class="form-control">\n                <option value=""></option>\n                <option value="macvlan">macvlan</option>\n                <option value="overlay">overlay</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !interfaceDriver --\x3e\n          \x3c!-- interfaceNetwork --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceNetwork" class="col-sm-2 col-lg-1 control-label text-left">网络名称</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.InterfaceNetwork" name="profile_interfaceNetwork" pattern="[a-zA-Z0-9]+">\n            </div>\n          </div>\n          \x3c!-- !interfaceNetwork --\x3e\n          \x3c!-- interfaceConf --\x3e\n          <div class="form-group">\n            <label for="profile_interfaceConf" class="col-sm-2 col-lg-1 control-label text-left">接口配置</label>\n            <div class="col-sm-10 col-lg-11">\n              <input type="text" class="form-control" ng-model="model.InterfaceConf" name="profile_interfaceConf">\n            </div>\n          </div>\n          \x3c!-- !interfaceConf --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">标签</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">名称</span>\n                  <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">参数值</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels --\x3e\n          \x3c!-- iops --\x3e\n          <div ng-if="!state.LimitBandwidth || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              IOPS\n            </div>\n            <div class="form-group">\n              <div class="col-md-1 col-sm-2">\n                <label for="permissions" class="control-label text-left">\n                  IOPS限制\n                </label>\n              </div>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.LimitIOPS" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)"><i></i>\n              </label>\n            </div>\n            <div class="form-group" ng-if="state.LimitIOPS">\n              <label for="min_iops" class="col-sm-1 control-label text-left">最小</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.min_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MinIOPS" name="min_iops" ng-min="30" ng-max="999999" placeholder="100" required>\n              </div>\n              <label for="max_iops" class="col-sm-1 control-label text-left">最大</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.max_iops.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MaxIOPS" name="max_iops" ng-min="30" ng-max="999999" placeholder="2000" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.min_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.min_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS最小值： 30。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min IOPS最大值： 999999。</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.max_iops.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.max_iops.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS最小值： 30。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max IOPS最大值： 999999。</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !iops --\x3e\n          \x3c!-- bandwidth --\x3e\n          <div ng-if="!state.LimitIOPS || state.NoLimit">\n            <div class="col-sm-12 form-section-title">\n              带宽\n            </div>\n            <div class="form-group">\n              <div class="col-md-1 col-sm-2">\n                <label for="permissions" class="control-label text-left">\n                  带宽限制\n                </label>\n              </div>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="state.LimitBandwidth" ng-change="state.NoLimit = (!state.LimitBandwidth && !state.LimitIOPS)"><i></i>\n              </label>\n            </div>\n            <div class="form-group" ng-if="state.LimitBandwidth">\n              <label for="min_bandwidth" class="col-sm-1 control-label text-left">最小</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.min_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MinBandwidth" name="min_bandwidth" ng-min="1" ng-max="5000" placeholder="1" required>\n              </div>\n              <label for="max_bandwidth" class="col-sm-1 control-label text-left">最大</label>\n              <div class="col-sm-5" ng-class="{ \'has-error\': storidgeCreateProfileForm.max_bandwidth.$invalid }">\n                <input type="number" class="form-control" ng-model="model.MaxBandwidth" name="max_bandwidth" ng-min="1" ng-max="5000" placeholder="100" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.min_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.min_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth最小值： 1。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Min bandwidth最大值： 5000。</p>\n                </div>\n              </div>\n            </div>\n            <div class="form-group" ng-show="storidgeCreateProfileForm.max_bandwidth.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="storidgeCreateProfileForm.max_bandwidth.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth需要一个值。</p>\n                  <p ng-message="min"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth最小值： 1。</p>\n                  <p ng-message="max"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Max bandwidth最大值： 5000。</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !bandwidth --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="create()" ng-disabled="state.actionInProgress || !storidgeCreateProfileForm.$valid" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">创建配置文件</span>\n                <span ng-show="state.actionInProgress">正在创建配置文件...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/cluster/cluster.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge存储集群">\n    <a data-toggle="tooltip" title="刷新" ui-sref="storidge.cluster" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge存储集群</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-bolt" title-text="集群详情"></rd-widget-header>\n      <rd-widget-body>\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>域</td>\n              <td>{{ clusterInfo.Domain }}</td>\n            </tr>\n            <tr>\n              <td>状态</td>\n              <td><i class="fa fa-heartbeat space-right {{ clusterInfo.Condition | storidgeClusterConditionBadge }}"></i>\n                {{ clusterInfo.Condition }}\n              </td>\n            </tr>\n            <tr>\n              <td>版本</td>\n              <td>{{ clusterVersion }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-danger btn-sm" ng-click="shutdownCluster()" ng-disabled="state.shutdownInProgress" button-spinner="state.shutdownInProgress">\n                <span ng-hide="state.shutdownInProgress"><i class="fa fa-power-off space-right" aria-hidden="true"></i> 关闭群集</span>\n                <span ng-show="state.shutdownInProgress">正在关闭群集...</span>\n              </button>\n              <button type="button" class="btn btn-danger btn-sm" ng-click="rebootCluster()" ng-disabled="state.rebootInProgress" button-spinner="state.shutdownInProgress">\n                <span ng-hide="state.rebootInProgress"><i class="fa fa-sync space-right" aria-hidden="true"></i> 重新启动群集</span>\n                <span ng-show="state.rebootInProgress">正在重新启动群集...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-nodes-datatable\n    title-text="Storage节点" title-icon="fa-object-group"\n    dataset="clusterNodes" table-key="storidge_nodes"\n    order-by="Name"\n    ></storidge-nodes-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/nodes/inspect/node.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge</a> &gt; <a\n      ui-sref="storidge.cluster.node({id: node.Name})">{{ node.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="节点详情">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="(node.Status | lowercase) !== \'normal\'" ng-click="removeNodeAction()">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除节点\n        </button>\n        <button type="button" class="btn btn-sm btn-primary"\n          ng-disabled="(node.Status | lowercase) !== \'normal\'" ng-click="cordonNodeAction()">\n          <i class="fas fa-wrench space-right" aria-hidden="true"></i>进入维护模式\n        </button>\n        <button type="button" class="btn btn-sm btn-primary"\n          ng-disabled="(node.Status | lowercase) !== \'cordoned\'" ng-click="uncordonNodeAction()">\n          <i class="fa fa-power-off space-right" aria-hidden="true"></i>退出维护模式\n        </button>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>{{ node.Name }}</td>\n            </tr>\n            <tr>\n              <td>域</td>\n              <td>{{ node.Domain }}</td>\n            </tr>\n            <tr>\n              <td>域ID</td>\n              <td>{{ node.DomainID }}</td>\n            </tr>\n            <tr>\n              <td>节点情况</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ node.Status | storidgeNodeStatusBadge }}"></i>\n                {{ node.Status }}\n              </td>\n            </tr>\n            <tr>\n              <td>操作条件</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ node.Condition | storidgeClusterConditionBadge }}"></i>\n                {{ node.Condition }}\n              </td>\n            </tr>\n            <tr>\n              <td>元数据版本</td>\n              <td>{{ node.MetadataVersion }}</td>\n            </tr>\n            <tr>\n              <td>节点</td>\n              <td>{{ node.Nodes }}</td>\n            </tr>\n            <tr>\n              <td>HDD硬盘</td>\n              <td>{{ node.Hdds }}</td>\n            </tr>\n            <tr>\n              <td>SSD硬盘</td>\n              <td>{{ node.Ssds }}</td>\n            </tr>\n            <tr>\n              <td>VDisks虚拟磁盘</td>\n              <td>{{ node.Vdisks }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="带宽详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>空闲</td>\n              <td>{{ node.FreeBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>已使用</td>\n              <td>{{ node.UsedBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>供应商</td>\n              <td>{{ node.ProvisionedBandwidth }}</td>\n            </tr>\n            <tr>\n              <td>总量</td>\n              <td>{{ node.TotalBandwidth }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="容量详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>空余</td>\n              <td>{{ node.FreeCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>已使用</td>\n              <td>{{ node.UsedCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>供应商</td>\n              <td>{{ node.ProvisionedCapacity | bytes }}</td>\n            </tr>\n            <tr>\n              <td>总量</td>\n              <td>{{ node.TotalCapacity | bytes }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="IOPS详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table description-table">\n          <tbody>\n            <tr>\n              <td>空余</td>\n              <td>{{ node.FreeIOPS }}</td>\n            </tr>\n            <tr>\n              <td>已使用</td>\n              <td>{{ node.UsedIOPS }}</td>\n            </tr>\n            <tr>\n              <td>供应商</td>\n              <td>{{ node.ProvisionedIOPS }}</td>\n            </tr>\n            <tr>\n              <td>总量</td>\n              <td>{{ node.TotalIOPS }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t){var n="app/extensions/storidge/views/monitor/monitor.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Storidge存储监控">\n    <a data-toggle="tooltip" title="刷新" ui-sref="storidge.monitor" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="storidge.cluster">Storidge存储</a> &gt; <a ui-sref="storidge.monitor">群集监控</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer-alt" title-text="群集容量"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="capacityChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>可用容量</td>\n                <td>{{ ((info.FreeCapacity * 100) / info.TotalCapacity).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>预留容量</td>\n                <td>\n                  {{ info.ProvisionedCapacity | humansize }}\n                  <span ng-if="+(info.ProvisionedCapacity) >= +(info.TotalCapacity)">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>总容量</td>\n                <td>{{ info.TotalCapacity | humansize }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="IOPS使用情况"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="iopsChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>可用IOPS</td>\n                <td>{{ ((info.FreeIOPS * 100) / info.TotalIOPS).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>预留IOPS</td>\n                <td>\n                  {{ info.ProvisionedIOPS | number }}\n                  <span ng-if="+(info.ProvisionedIOPS) >= +(info.TotalIOPS)">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>IOPS总量</td>\n                <td>{{ info.TotalIOPS | number }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-md-4 col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-chart-area" title-text="带宽使用情况"></rd-widget-header>\n      <rd-widget-body>\n        <div class="chart-container" style="position: relative;">\n          <canvas id="bandwithChart" width="770" height="400"></canvas>\n        </div>\n        <div style="margin-top: 10px;" ng-if="info">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td>可用带宽</td>\n                <td>{{ ((info.FreeBandwidth * 100) / info.TotalBandwidth).toFixed(1) }}%</td>\n              </tr>\n              <tr>\n                <td>预留带宽</td>\n                <td>\n                  {{ info.ProvisionedBandwidth | humansize }}\n                  <span ng-if="+(info.ProvisionedBandwidth) >= +(info.TotalBandwidth)">\n                    <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td>总带宽</td>\n                <td>{{ info.TotalBandwidth | humansize }} /s</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <storidge-cluster-events-datatable\n    title-text="集群事件" title-icon="fa-history"\n    dataset="events" table-key="storidge_cluster_events"\n    order-by="Time"  reverse-order="true"\n    ></storidge-cluster-events-datatable>\n  </div>\n</div>\n\n\x3c!-- <div class="row">\n  <div class="col-md-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-history" title-text="集群事件">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="order(\'Time\')">\n                    Date\n                    <span ng-show="sortType == \'Time\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Time\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Category\')">\n                    Category\n                    <span ng-show="sortType == \'Category\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Category\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Module\')">\n                    Module\n                    <span ng-show="sortType == \'Module\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Module\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'Content\')">\n                    Content\n                    <span ng-show="sortType == \'Content\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Content\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="event in (events | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count)">\n                <td>{{ event.Time }}</td>\n                <td>{{ event.Category }}</td>\n                <td>{{ event.Module }}</td>\n                <td>{{ event.Content }}</td>\n              </tr>\n              <tr ng-if="!events">\n                <td colspan="4" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="events.length === 0">\n                <td colspan="4" class="text-center text-muted">No events available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="events" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div> --\x3e\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/sidebar/sidebar.html",r='\x3c!-- Sidebar --\x3e\n<div id="sidebar-wrapper">\n  <div class="sidebar-header">\n    <a ui-sref="portainer.home">\n      <img ng-if="logo" ng-src="{{ logo }}" class="img-responsive logo">\n      <img ng-if="!logo" src="'+n(400)+'" class="img-responsive logo" alt="Portainer">\n    </a>\n    <a ng-click="toggleSidebar()"><span class="menu-icon glyphicon glyphicon-transfer"></span></a>\n  </div>\n  <div class="sidebar-content">\n  <ul class="sidebar">\n    <li class="sidebar-list">\n      <a ui-sref="portainer.home" ui-sref-active="active">主页 <span class="menu-icon fa fa-home fa-fw"></span></a>\n    </li>\n    <li class="sidebar-title endpoint-name" ng-if="applicationState.endpoint.name">\n      <span class="fa fa-plug space-right"></span>{{ applicationState.endpoint.name }}\n    </li>\n    <azure-sidebar-content ng-if="applicationState.endpoint.mode && applicationState.endpoint.mode.provider === \'AZURE\'">\n    </azure-sidebar-content>\n    <docker-sidebar-content ng-if="applicationState.endpoint.mode && applicationState.endpoint.mode.provider !== \'AZURE\'"\n      endpoint-api-version="applicationState.endpoint.apiVersion"\n      swarm-management="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'"\n      standalone-management="applicationState.endpoint.mode.provider === \'DOCKER_STANDALONE\' || applicationState.endpoint.mode.provider === \'VMWARE_VIC\'"\n      admin-access="!applicationState.application.authentication || isAdmin"\n      offline-mode="endpointState.OfflineMode"\n    ></docker-sidebar-content>\n    <li class="sidebar-title" authorization="IntegrationStoridgeAdmin" ng-if="applicationState.endpoint.mode && applicationState.endpoint.extensions.length > 0">\n      <span>扩展</span>\n    </li>\n    <li authorization="IntegrationStoridgeAdmin" class="sidebar-list" ng-if="applicationState.endpoint.mode && applicationState.endpoint.extensions.indexOf(\'storidge\') !== -1 && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n      <a ui-sref="storidge.cluster" ui-sref-active="active">Storidge <span class="menu-icon fa fa-bolt fa-fw"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'storidge.cluster\' || $state.current.name === \'storidge.profiles\' || $state.current.name === \'storidge.monitor\' || $state.current.name === \'storidge.profiles.new\' || $state.current.name === \'storidge.profiles.profile\' || $state.current.name === \'storidge.drives\' || $state.current.name === \'storidge.drives.drive\' || $state.current.name === \'storidge.cluster.node\')">\n        <a ui-sref="storidge.monitor" ui-sref-active="active">监控</a>\n      </div>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'storidge.cluster\' || $state.current.name === \'storidge.profiles\' || $state.current.name === \'storidge.monitor\' || $state.current.name === \'storidge.profiles.new\' || $state.current.name === \'storidge.profiles.profile\' || $state.current.name === \'storidge.drives\' || $state.current.name === \'storidge.drives.drive\' || $state.current.name === \'storidge.cluster.node\')">\n        <a ui-sref="storidge.profiles" ui-sref-active="active">配置</a>\n      </div>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'storidge.cluster\' || $state.current.name === \'storidge.profiles\' || $state.current.name === \'storidge.monitor\' || $state.current.name === \'storidge.profiles.new\' || $state.current.name === \'storidge.profiles.profile\' || $state.current.name === \'storidge.drives\' || $state.current.name === \'storidge.drives.drive\' || $state.current.name === \'storidge.cluster.node\')">\n        <a ui-sref="storidge.drives" ui-sref-active="active">驱动</a>\n      </div>\n    </li>\n    <li class="sidebar-title" ng-if="(!applicationState.application.authentication || isAdmin) && applicationState.application.enableHostManagementFeatures">\n      <span>任务计划</span>\n    </li>\n    <li class="sidebar-list" ng-if="(!applicationState.application.authentication || isAdmin) && applicationState.application.enableHostManagementFeatures">\n      <a ui-sref="portainer.schedules" ui-sref-active="active">主机任务 <span class="menu-icon fa fa-clock fa-fw"></span></a>\n    </li>\n    <li class="sidebar-title">\n      <span>平台设置</span>\n    </li>\n    \x3c!--  <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="portainer.extensions" ui-sref-active="active">Extensions <span class="menu-icon fa fa-bolt fa-fw"></span></a>\n    </li>  -插件扩展-  --\x3e\n    <li class="sidebar-list" ng-if="applicationState.application.authentication && (isAdmin || isTeamLeader)">\n      <a ui-sref="portainer.users" ui-sref-active="active">用户 <span class="menu-icon fa fa-users fa-fw"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.users\' || $state.current.name === \'portainer.users.user\' || $state.current.name === \'portainer.teams\' || $state.current.name === \'portainer.teams.team\' || $state.current.name === \'portainer.roles\' || $state.current.name === \'portainer.roles.role\' || $state.current.name === \'portainer.roles.new\')">\n        <a ui-sref="portainer.teams" ui-sref-active="active">用户组</a>\n      </div>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.users\' || $state.current.name === \'portainer.users.user\' || $state.current.name === \'portainer.teams\' || $state.current.name === \'portainer.teams.team\' || $state.current.name === \'portainer.roles\' || $state.current.name === \'portainer.roles.role\' || $state.current.name === \'portainer.roles.new\')">\n        \x3c!--  <a ui-sref="portainer.roles" ui-sref-active="active">角色</a>  -角插件扩展-  --\x3e\n      </div>\n    </li>\n    <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="portainer.endpoints" ui-sref-active="active">节点 <span class="menu-icon fa fa-plug fa-fw"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.endpoints\' || $state.current.name === \'portainer.endpoints.endpoint\' || $state.current.name === \'portainer.endpoints.new\' || $state.current.name === \'portainer.endpoints.endpoint.access\' || $state.current.name === \'portainer.groups\' || $state.current.name === \'portainer.groups.group\' || $state.current.name === \'portainer.groups.group.access\' || $state.current.name === \'portainer.groups.new\' || $state.current.name === \'portainer.tags\')">\n        <a ui-sref="portainer.groups" ui-sref-active="active">节点组</a>\n      </div>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.endpoints\' || $state.current.name === \'portainer.endpoints.endpoint\' || $state.current.name === \'portainer.endpoints.new\' || $state.current.name === \'portainer.endpoints.endpoint.access\' || $state.current.name === \'portainer.groups\' || $state.current.name === \'portainer.groups.group\' || $state.current.name === \'portainer.groups.group.access\' || $state.current.name === \'portainer.groups.new\' || $state.current.name === \'portainer.tags\')">\n        <a ui-sref="portainer.tags" ui-sref-active="active">标签</a>\n      </div>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="portainer.registries" ui-sref-active="active">仓库 <span class="menu-icon fa fa-database fa-fw"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="portainer.settings" ui-sref-active="active">设置 <span class="menu-icon fa fa-cogs fa-fw"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.settings\' || $state.current.name === \'portainer.settings.authentication\' || $state.current.name === \'portainer.about\') && applicationState.application.authentication && isAdmin">\n        <a ui-sref="portainer.settings.authentication" ui-sref-active="active">认证</a></div>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'portainer.settings\' || $state.current.name === \'portainer.settings.authentication\' || $state.current.name === \'portainer.about\')">\n        <a ui-sref="portainer.about" ui-sref-active="active">关于</a>\n      </div>\n    </li>\n  </ul>\n  <div class="sidebar-footer-content">\n    <img src="'+n(401)+'" class="img-responsive logo" alt="Portainer">\n    <span class="version">{{ uiVersion }}</span>\n  </div>\n  </div>\n</div>\n\x3c!-- End Sidebar --\x3e\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){e.exports=n.p+"870e9e3a3b726bac6f94a0be1859ae3a.png"},function(e,t,n){e.exports=n.p+"84f523ddee89097ab9f50804b9b1f7fd.png"},function(e,t){var n="app/portainer/views/about/about.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Portainer">\n  </rd-header-title>\n  <rd-header-content>\n    关于 “Portainer”\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="small" style="line-height:1.65;">\n        <b>Portainer</b> <span class="menu-icon fa fa-heart red-icon "></span> 是由 <a href="http://www.portainer.io" target="_blank">PORTAINER</a> 基于开源软件 <b>Docker</b> 推出的一款容器云平台产品。\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="帮助与支持" icon="fa-heartbeat"></rd-widget-header>\n      <rd-widget-body>\n      <div class="small" style="line-height:1.65;">\n        <p>\n          如果您需要 <b>Portainer</b> 的任何帮助与支持服务，请通过下面的方式与我们联系。\n        </p>\n        <p>\n          <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>官方网站</u> <i class="fab fa-slack" aria-hidden="true"></i>\n          <ul>\n              <li>请关注我们的官网  <a href="http://www.portainer.io" target="_blank"><i class="fa fa-book" aria-hidden="true"></i> http://www.portainer.io</a> ，以查找和访问最新的资料和文件。</li>\n          </ul>\n        </p>\n        <p>\n          <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>技术交流</u> <i class="fab fa-github-alt" aria-hidden="true"></i>\n          <ul>\n            <li>通过我们的官网在第一时间和我们取得联系和互动。</li>\n          </ul>\n        </p>\n        <p>\n          <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>邮件支持</u> <i class="fab fa-twitter" aria-hidden="true"></i>\n          <ul>\n            <li>如果您还有其他任何需求，也可以直接发送邮件与我们联系。</li>\n            </ul>\n        </p>\n      </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header title-text="功能限制" icon="fa-plug"></rd-widget-header>\n      <rd-widget-body>\n        <div class="small" style="line-height:1.65;">\n        <li>Portainer 对 Docker >= 1.10 提供全面的技术支持，并部分支持 Docker 1.9（某些功能可能不可用）。</li>\n        <li>Portainer 对 Docker Swarm >= 1.2.3 提供全面的技术支持，不再对 Standalone Mode 提供支持，仅支持 Swarm Mode。</li>\n      </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n    <div class="col-sm-12">\n        <rd-widget>\n            <rd-widget-header title-text="版权信息" icon="fa-building"></rd-widget-header>\n            <rd-widget-body>\n                <div class="small" style="line-height:1.65;">\n                    <p>\n                    <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>许可协议</u>  <i class="fa fa-money-bill-alt" aria-hidden="true"></i>\n                    <ul>\n                        <li>本软件基于 <a target="_blank" href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"><i class="fa fa-book" aria-hidden="true"></i> 开源GPL 2.0协议</a> 分发。</li>\n                    </ul>\n                    </p>\n                    <p>\n                    <i class="fa fa-chevron-circle-right" aria-hidden="true"></i> <u>版权所有</u>  <i class="fab fa-paypal" aria-hidden="true"></i>\n                    <ul>\n                        <li>本软件归属 <a href="http://www.portainer.io" target="_blank">PORTAINER</a> 所有。</li>\n                        <li>❤修改汉化：<a href="http://imnks.com/" target="_blank">我不是矿神</a></li>\n                    </ul>\n                    </p>\n                </div>\n            </rd-widget-body>\n        </rd-widget>\n    </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/account/account.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="用户设置"></rd-header-title>\n  <rd-header-content>用户设置</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title-text="更改用户密码"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- current-password-input --\x3e\n          <div class="form-group">\n            <label for="current_password" class="col-sm-2 control-label text-left">当前密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.currentPassword" id="current_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !current-password-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">新密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword.length >= 8]" aria-hidden="true"></i>\n              <span class="small text-muted">您的新密码必须至少含有8个字符</span>\n            </div>\n          </div>\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">确认密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="(AuthenticationMethod !== 1 && userID !== 1) || !formValues.currentPassword || formValues.newPassword.length < 8 || formValues.newPassword !== formValues.confirmPassword" ng-click="updatePassword()">更新密码</button>\n              <span class="text-muted small" style="margin-left: 5px;" ng-if="AuthenticationMethod === 2 && userID !== 1">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                使用LDAP身份验证时，您不能更改密码。\n              </span>\n              <span class="text-muted small" style="margin-left: 5px;" ng-if="AuthenticationMethod === 3 && userID !== 1">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                使用OAuth身份验证时，您不能更改密码。\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/auth/auth.html",r='<div class="page-wrapper">\n  \x3c!-- login box --\x3e\n  <div class="container simple-box">\n    <div class="col-sm-6 col-sm-offset-3">\n      \x3c!-- login box logo --\x3e\n      <div class="row">\n        <img ng-if="!logo" src="'+n(211)+'" class="simple-box-logo" alt="Portainer">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n      </div>\n      \x3c!-- !login box logo --\x3e\n      \x3c!-- login panel --\x3e\n      <div class="panel panel-default" ng-show="!state.isInOAuthProcess">\n        <div class="panel-body">\n          \x3c!-- login form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- username input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>\n              <input id="username" type="text" class="form-control" name="username" ng-model="formValues.Username" auto-focus>\n            </div>\n            \x3c!-- !username input --\x3e\n            \x3c!-- password input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n              <input id="password" type="password" class="form-control" name="password" ng-model="formValues.Password">\n            </div>\n            \x3c!-- !password input --\x3e\n            \x3c!-- login button --\x3e\n            <div class="form-group">\n              <div class="col-sm-12" >\n                <a ng-href="{{OAuthLoginURI}}" ng-if="AuthenticationMethod === 3">\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left:2px" ng-if="state.OAuthProvider === \'Microsoft\'">\n                    <i class="fab fa-microsoft" aria-hidden="true"></i> 通过 Microsoft 账户登录\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left:2px" ng-if="state.OAuthProvider === \'Google\'">\n                    <i class="fab fa-google" aria-hidden="true" ></i> 通过 Google 账户登录\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left:2px" ng-if="state.OAuthProvider === \'Github\'">\n                    <i class="fab fa-github" aria-hidden="true" ></i> 通过 Github 账户登录\n                  </div>\n                  <div class="btn btn-primary btn-sm pull-left" style="margin-left:2px" ng-if="state.OAuthProvider === \'OAuth\'">\n                    <i class="fa fa-sign-in-alt" aria-hidden="true" ></i> 通过 OAuth 账户登录\n                  </div>\n                </a>\n\n                <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="authenticateUser()"><i class="fa fa-sign-in-alt" aria-hidden="true"></i> 登录</button>\n\n                <span class="pull-right" style="margin: 5px;" ng-if="state.AuthenticationError">\n                  <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <span class="small text-danger">{{ state.AuthenticationError }}</span>\n                </span>\n              </div>\n            </div>\n\n            \x3c!-- !login button --\x3e\n          </form>\n          \x3c!-- !login form --\x3e\n        </div>\n      </div>\n      \x3c!-- !login panel --\x3e\n      <div class="panel panel-default" ng-show="state.isInOAuthProcess">\n        <div class="panel-body">\n          <div class="form-group text-center">\n              <span class="small text-muted">OAuth 身份验证中...<span button-spinner="true"></span></span>\n          </div>\n        </div>\n      </div>\n      <div style="text-align:center;font-size:8px;color: #333333">\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Portainer,&nbsp;&nbsp;版本: 1.24.2</br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;© 2021,&nbsp;&nbsp;PORTAINER\n      </div>\n    </div>\n  </div>\n  \x3c!-- !login box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t){var n="app/portainer/views/endpoints/endpoints.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.endpoints" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>节点管理</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!applicationState.application.endpointManagement">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-exclamation-triangle" title-text="节点管理不可用">\n      </rd-widget-header>\n      <rd-widget-body>\n        <span class="small text-muted">Portainer已经开始使用<code>--external-endpoints</code>标志。\n          通过UI进行节点管理已被禁用。\n          <span ng-if="applicationState.application.authentication">您仍然可以管理节点的访问。</span>\n        </span>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <endpoints-datatable\n    title-text="节点" title-icon="fa-plug"\n    dataset="endpoints" table-key="endpoints"\n    order-by="Name" \n    endpoint-management="applicationState.application.endpointManagement"\n    access-management="applicationState.application.authentication"\n    remove-action="removeAction"\n    ></endpoints-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/edit/endpoint.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.endpoints">节点</a> &gt; <a ui-sref="portainer.endpoints.endpoint({id: endpoint.Id})">{{ endpoint.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            配置\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="container_name" ng-model="endpoint.Name" placeholder="例如 docker-prod01">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div class="form-group">\n            <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n              节点URL地址\n              <portainer-tooltip position="bottom" message="Docker主机的URL或IP地址，Docker API必须可以通过公开的TCP端口访问，请参考Docker文档来配置它。"></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input ng-disabled="endpointType === \'local\' || endpoint.Type === 3" type="text" class="form-control" id="endpoint_url" ng-model="endpoint.URL" placeholder="例如 10.0.0.10:2375 或 mydocker.mydomain.com:2375">\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div class="form-group" ng-if="endpoint.Type !== 3">\n            <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n              外部IP地址\n              <portainer-tooltip position="bottom" message="暴露容器的可访问URL或IP地址，该字段是可选的，默认为节点的URL地址。"></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="endpoint_public_url" ng-model="endpoint.PublicURL" placeholder="例如 10.0.0.10 或 mydocker.mydomain.com">\n            </div>\n          </div>\n          <azure-endpoint-config ng-if="endpoint.Type === 3"\n            application-id="endpoint.AzureCredentials.ApplicationID"\n            tenant-id="endpoint.AzureCredentials.TenantID"\n            authentication-key="endpoint.AzureCredentials.AuthenticationKey"\n          ></azure-endpoint-config>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            元数据\n          </div>\n          \x3c!-- group --\x3e\n          <div class="form-group">\n            <label for="endpoint_group" class="col-sm-3 col-lg-2 control-label text-left">\n              节点组\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <select ng-options="group.Id as group.Name for group in groups" ng-model="endpoint.GroupId" id="endpoint_group" class="form-control"></select>\n            </div>\n          </div>\n          \x3c!-- !group --\x3e\n          \x3c!-- tags --\x3e\n          <div class="form-group">\n            <tag-selector\n              tags="availableTags"\n              model="endpoint.Tags"\n            ></tag-selector>\n          </div>\n          \x3c!-- !tags --\x3e\n          \x3c!-- endpoint-security --\x3e\n          <div ng-if="endpointType === \'remote\' && endpoint.Type !== 3">\n            <div class="col-sm-12 form-section-title">\n              安全\n            </div>\n            <por-endpoint-security form-data="formValues.SecurityFormData" endpoint="endpoint"></por-endpoint-security>\n          </div>\n          \x3c!-- !endpoint-security --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !endpoint.Name || !endpoint.URL || (endpoint.TLS && ((endpoint.TLSVerify && !formValues.TLSCACert) || (endpoint.TLSClientCert && (!formValues.TLSCert || !formValues.TLSKey))))" ng-click="updateEndpoint()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">更新节点</span>\n                <span ng-show="state.actionInProgress">正在更新节点...</span>\n              </button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="portainer.endpoints">取消</a>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/create/createendpoint.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建节点"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.endpoints">节点</a> &gt; 添加节点\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal" name="endpointCreationForm">\n          <div class="col-sm-12 form-section-title">\n            环境类型\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="docker_endpoint" ng-model="state.EnvironmentType" value="docker">\n                <label for="docker_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Docker\n                  </div>\n                  <p>Docker环境</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="agent_endpoint" ng-model="state.EnvironmentType" value="agent">\n                <label for="agent_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i>\n                    代理\n                  </div>\n                  <p>Portainer代理</p>\n                </label>\n              </div>\n              \x3c!--Disable Azure Supoort--\x3e\n              <div style="display:none;">\n              \x3c!--Disable Azure Supoort--\x3e\n                <input type="radio" id="azure_endpoint" ng-model="state.EnvironmentType" value="azure">\n                <label for="azure_endpoint">\n                  <div class="boxselector_header">\n                    <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Azure\n                  </div>\n                  <p>连接到微软Azure ACI</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'docker\'">\n            <div class="col-sm-12 form-section-title" >\n              重要提示\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                Docker的API必须可以通过公开的TCP端口访问。关于如何通过公开的TCP端口访问Docker的API，您可以查看<a href="https://docs.docker.com/engine/security/https/" target="_blank">Docker官方文档</a>来了解更多信息。\n              </span>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'agent\'">\n            <div class="col-sm-12 form-section-title" >\n              提示\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                首先请确保已在集群中部署了"Portainer Agent"代理。如果没有，请在任意管理节点上使用以下命令来部署代理（yml文件URL按照实际情况而定）：\n                <div style="margin-top: 10px;">\n                  <code>\n                    curl -L http://example.com/agent.yml -o agent.yml && docker stack deploy --compose-file=agent.yml portainer-agent\n                  </code>\n                  <span class="btn btn-primary btn-sm space-left" ng-click="copyAgentCommand()"><i class="fa fa-copy space-right" aria-hidden="true"></i>复制</span>\n                  <span>\n                    <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n                  </span>\n                </div>\n              </span>\n            </div>\n          </div>\n          <div ng-if="state.EnvironmentType === \'azure\'">\n            <div class="col-sm-12 form-section-title" >\n              提示\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small">\n                  <p class="text-muted">\n                    <i class="fa fa-flask orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> 此功能是实验性的。\n                  </p>\n                  <p class="text-primary">\n                    连接到微软Azure以管理Azure容器实例(ACI)。\n                  </p>\n                  <p class="text-muted">\n                    <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                    请查阅 <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal" target="_blank">微软Azure官方文档</a> 了解以下\n                    所需使用的有关凭据的相关内容。\n                  </p>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            环境详情\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" name="container_name" ng-model="formValues.Name" placeholder="例如 docker-prod01" required auto-focus>\n            </div>\n          </div>\n          <div class="form-group" ng-show="endpointCreationForm.container_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="endpointCreationForm.container_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div ng-if="state.EnvironmentType === \'docker\' || state.EnvironmentType === \'agent\'">\n            <div class="form-group">\n              <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n                节点URL地址\n                <portainer-tooltip position="bottom" message="Docker主机的URL或IP地址，Docker API必须可以通过TCP端口访问，请参考Docker文档来配置它。"></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input ng-if="state.EnvironmentType === \'docker\'" type="text" class="form-control" name="endpoint_url" ng-model="formValues.URL" placeholder="例如 10.0.0.10:2375 或 mydocker.mydomain.com:2375" required>\n                <input ng-if="state.EnvironmentType === \'agent\'" type="text" class="form-control" name="endpoint_url" ng-model="formValues.URL" placeholder="例如 10.0.0.10:18081 或 tasks.portainer-agent:18081" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.endpoint_url.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.endpoint_url.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div ng-if="state.EnvironmentType === \'docker\' || state.EnvironmentType === \'agent\'">\n            <div class="form-group">\n              <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n                外部公共IP地址\n                <portainer-tooltip position="bottom" message="容器暴露的可访问的URL或IP地址，该字段是可选的，并将作为节点的默认URL地址。"></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="endpoint_public_url" ng-model="formValues.PublicURL" placeholder="例如 10.0.0.10 或 mydocker.mydomain.com">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          \x3c!-- azure-details --\x3e\n          <div ng-if="state.EnvironmentType === \'azure\'">\n            \x3c!-- applicationId-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_appid" class="col-sm-3 col-lg-2 control-label text-left">应用ID</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" name="azure_credential_appid" ng-model="formValues.AzureApplicationId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_appid.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_appid.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !applicationId-input --\x3e\n            \x3c!-- tenantId-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_tenantid" class="col-sm-3 col-lg-2 control-label text-left">租户ID</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" name="azure_credential_tenantid" ng-model="formValues.AzureTenantId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_tenantid.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_tenantid.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !tenantId-input --\x3e\n            \x3c!-- authenticationkey-input --\x3e\n            <div class="form-group">\n              <label for="azure_credential_authkey" class="col-sm-3 col-lg-2 control-label text-left">认证密钥</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" name="azure_credential_authkey" ng-model="formValues.AzureAuthenticationKey" placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=" required>\n              </div>\n            </div>\n            <div class="form-group" ng-show="endpointCreationForm.azure_credential_authkey.$invalid">\n              <div class="col-sm-12 small text-warning">\n                <div ng-messages="endpointCreationForm.azure_credential_authkey.$error">\n                  <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !authenticationkey-input --\x3e\n          </div>\n          \x3c!-- !azure-details --\x3e\n          \x3c!-- endpoint-security --\x3e\n          <por-endpoint-security ng-if="state.EnvironmentType === \'docker\'" form-data="formValues.SecurityFormData"></por-endpoint-security>\n          \x3c!-- !endpoint-security --\x3e\n          <div class="col-sm-12 form-section-title">\n            元数据\n          </div>\n          \x3c!-- group --\x3e\n          <div class="form-group">\n            <label for="endpoint_group" class="col-sm-3 col-lg-2 control-label text-left">\n              节点组\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <select ng-options="group.Id as group.Name for group in groups" ng-model="formValues.GroupId" id="endpoint_group" class="form-control"></select>\n            </div>\n          </div>\n          \x3c!-- !group --\x3e\n          \x3c!-- tags --\x3e\n          <div class="form-group">\n            <tag-selector\n              tags="availableTags"\n              model="formValues.Tags"\n            ></tag-selector>\n          </div>\n          \x3c!-- !tags --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button ng-if="state.EnvironmentType === \'docker\'" type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !endpointCreationForm.$valid || (formValues.TLS && ((formValues.TLSVerify && !formValues.TLSCACert) || (formValues.TLSClientCert && (!formValues.TLSCert || !formValues.TLSKey))))" ng-click="addDockerEndpoint()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 添加节点</span>\n                <span ng-show="state.actionInProgress">节点创建中...</span>\n              </button>\n              <button ng-if="state.EnvironmentType === \'agent\'" type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !endpointCreationForm.$valid" ng-click="addAgentEndpoint()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 添加节点</span>\n                <span ng-show="state.actionInProgress">节点创建中...</span>\n              </button>\n              <button ng-if="state.EnvironmentType === \'azure\'" type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !endpointCreationForm.$valid" ng-click="addAzureEndpoint()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 添加节点</span>\n                <span ng-show="state.actionInProgress">节点创建中...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/endpoints/access/endpointAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点访问"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.endpoints">节点</a> &gt; <a\n      ui-sref="portainer.endpoints.endpoint({id: ctrl.endpoint.Id})">{{ ctrl.endpoint.Name }}</a> &gt; 访问管理\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="ctrl.endpoint">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title-text="节点"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>\n                {{ ctrl.endpoint.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL地址</td>\n              <td>\n                {{ ctrl.endpoint.URL | stripprotocol }}\n              </td>\n            </tr>\n            <tr>\n              <td>节点组</td>\n              <td>\n                <a ui-sref="portainer.groups.group({ id: ctrl.group.Id })">{{ ctrl.group.Name }}</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="ctrl.endpoint && ctrl.group" access-controlled-entity="ctrl.endpoint" action-in-progress="ctrl.state.actionInProgress"\n  entity-type="endpoint" inherit-from="ctrl.group" update-access="ctrl.updateAccess">\n</por-access-management>')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/groups.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点组">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.groups" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>节点组管理</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <groups-datatable\n    title-text="节点组" title-icon="fa-object-group"\n    dataset="groups" table-key="groups"\n    order-by="Name" \n    access-management="applicationState.application.authentication"\n    remove-action="removeAction"\n    ></groups-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/edit/group.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点组详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.groups">节点组</a> &gt; {{ ::group.Name }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <group-form\n          model="group"\n          available-endpoints="availableEndpoints"\n          available-tags="availableTags"\n          associated-endpoints="associatedEndpoints"\n          add-label-action="addLabel"\n          remove-label-action="removeLabel"\n          form-action="update"\n          form-action-label="更新组"\n          action-in-progress="state.actionInProgress"\n        ></group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/create/creategroup.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建节点组"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.groups">节点组</a> &gt; 添加组\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <group-form\n          model="model"\n          available-endpoints="availableEndpoints"\n          available-tags="availableTags"\n          associated-endpoints="associatedEndpoints"\n          add-label-action="addLabel"\n          remove-label-action="removeLabel"\n          form-action="create"\n          form-action-label="创建组"\n          action-in-progress="state.actionInProgress"\n        ></group-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/groups/access/groupAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点组访问"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.groups">节点组</a> &gt; <a ui-sref="portainer.groups.group({id: group.Id})">{{ group.Name }}</a> &gt; 访问管理\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="group">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title-text="组"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>\n                {{ group.Name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="group" access-controlled-entity="group" entity-type="group" action-in-progress="state.actionInProgress"\n  update-access="updateAccess"\n></por-access-management>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/home/home.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主页">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.home" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>节点</rd-header-content>\n</rd-header>\n\n<motd-panel\n  ng-if="motd && motd.Message !== \'\' && applicationState.UI.dismissedInfoHash !== motd.Hash"\n  motd="motd"\n  dismiss-action="dismissImportantInformation(motd.Hash)">\n</motd-panel>\n\n<information-panel\n  ng-if="!isAdmin && endpoints.length === 0"\n  title-text="提示">\n  <span class="small text-muted">\n    <p>\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      您无权访问任何环境，请与您的管理员联系。\n    </p>\n  </span>\n</information-panel>\n\n<div class="row" ng-if="endpoints.length > 0">\n  <div class="col-sm-12">\n    <endpoint-list\n      title-text="节点列表" title-icon="fa-plug"\n      endpoints="endpoints" table-key="endpoints"\n      dashboard-action="goToDashboard"\n      show-snapshot-action="!applicationState.application.authentication || isAdmin"\n      snapshot-action="triggerSnapshot"\n      edit-action="goToEdit"\n      is-admin="isAdmin"\n    ></endpoint-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a="app/portainer/views/init/endpoint/initEndpoint.html",r='<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-sm-12">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n        <img ng-if="!logo" src="'+n(211)+'" class="simple-box-logo" alt="Portainer">\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init-endpoint panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init-endpoint form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  将Portainer连接到您想要管理的Docker环境。\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- endpoint-type --\x3e\n            <div class="form-group" style="margin-bottom: 0">\n              <div class="boxselector_wrapper">\n                <div>\n                  <input type="radio" id="local_endpoint" ng-model="formValues.EndpointType" value="local">\n                  <label for="local_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                      本地\n                    </div>\n                    <p>管理本地的Docker环境</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="remote_endpoint" ng-model="formValues.EndpointType" value="remote">\n                  <label for="remote_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-docker" aria-hidden="true" style="margin-right: 2px;"></i>\n                      远程\n                    </div>\n                    <p>管理一个远程的Docker环境</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="agent_endpoint" ng-model="formValues.EndpointType" value="agent">\n                  <label for="agent_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i>\n                      代理\n                    </div>\n                    <p>连接到一个Portainer代理</p>\n                  </label>\n                </div>\n                \x3c!--Disable Azure Supoort--\x3e\n                <div style="display:none;">\n                \x3c!--Disable Azure Supoort--\x3e\n                  <input type="radio" id="azure_endpoint" ng-model="formValues.EndpointType" value="azure">\n                  <label for="azure_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Azure\n                    </div>\n                    <p>连接到微软Azure ACI</p>\n                  </label>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !endpoint-type  --\x3e\n            \x3c!-- local-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'local\'">\n              <div class="col-sm-12 form-section-title">\n                提示\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      管理运行Portainer的Docker环境。\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      请确保您已启动带有以下Docker标志的Portainer容器:\n\t\t\t\t\t</p>\n                    <p class="text-muted">\n\t\t\t\t\t  <code>-v "/var/run/docker.sock:/var/run/docker.sock"</code> (Linux).\n                    </p>\n                    <p class="text-muted">\n\t\t\t\t\t  或者\n                    </p>\n                    <p class="text-muted">\n                      <code>-v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine</code> (Windows).\n                    </p>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress" ng-click="createLocalEndpoint()" button-spinner="state.actionInProgress">\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> 连接</span>\n                    <span ng-show="state.actionInProgress">正在连接...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !local-endpoint --\x3e\n            \x3c!-- agent-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'agent\'">\n              <div class="col-sm-12 form-section-title">\n                提示\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      直接连接到Swarm集群中运行的Portainer代理。\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      如果您已经在与代理相同的网络中启动了Portainer，那么可以使用 <code>tasks.AGENT_SERVICE_NAME:AGENT_SERVICE_PORT</code> \n                      类型的URL格式来连接到节点。\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                环境\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">名称</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="例如 docker-prod01">\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              \x3c!-- endpoint-url-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_url" class="col-sm-4 col-lg-3 control-label text-left">\n                  代理URL地址\n                  <portainer-tooltip position="bottom" message="一个Portainer代理的URL或IP地址。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="例如 10.0.0.10:18081 或 tasks.portainer-agent:18081">\n                </div>\n              </div>\n              \x3c!-- !endpoint-url-input --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Name || !formValues.URL" ng-click="createAgentEndpoint()" button-spinner="state.actionInProgress">\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> 连接</span>\n                    <span ng-show="state.actionInProgress">正在连接...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !agent-endpoint --\x3e\n            \x3c!-- azure-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'azure\'">\n              <div class="col-sm-12 form-section-title">\n                提示\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-muted">\n                      <i class="fa fa-flask orange-icon" aria-hidden="true" style="margin-right: 2px;"></i> 此功能是实验性的。\n                    </p>\n                    <p class="text-primary">\n                      连接到微软Azure以管理Azure容器实例(ACI)。\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      请查阅 <a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-create-service-principal-portal" target="_blank">微软Azure官方文档</a> 了解以下\n                      所需使用的有关凭据的相关内容。\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                环境\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">名称</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="例如 azure-01">\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              <div class="col-sm-12 form-section-title">\n                Azure认证凭据\n              </div>\n              \x3c!-- applicationId-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_appid" class="col-sm-4 col-lg-3 control-label text-left">应用ID</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="azure_credential_appid" ng-model="formValues.AzureApplicationId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx">\n                </div>\n              </div>\n              \x3c!-- !applicationId-input --\x3e\n              \x3c!-- tenantId-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_tenantid" class="col-sm-4 col-lg-3 control-label text-left">租户ID</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="azure_credential_tenantid" ng-model="formValues.AzureTenantId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx">\n                </div>\n              </div>\n              \x3c!-- !tenantId-input --\x3e\n              \x3c!-- authenticationkey-input --\x3e\n              <div class="form-group">\n                <label for="azure_credential_authkey" class="col-sm-4 col-lg-3 control-label text-left">认证密钥</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="azure_credential_authkey" ng-model="formValues.AzureAuthenticationKey" placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=">\n                </div>\n              </div>\n              \x3c!-- !authenticationkey-input --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Name || !formValues.AzureApplicationId || !formValues.AzureTenantId || !formValues.AzureAuthenticationKey" ng-click="createAzureEndpoint()" button-spinner="state.actionInProgress">\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> 连接</span>\n                    <span ng-show="state.actionInProgress">连接中...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !azure-endpoint --\x3e\n            \x3c!-- remote-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'remote\'">\n              <div class="col-sm-12 form-section-title">\n                提示\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-primary">\n                      使用基于TCP的Docker API将Portainer连接到远程的Docker环境。\n                    </p>\n                    <p class="text-muted">\n                      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Docker的API必须可以通过公开的TCP端口访问。关于如何通过公开的TCP端口访问Docker的API，您可以查看<a href="https://docs.docker.com/engine/security/https/" target="_blank">Docker官方文档</a>来了解更多信息。\n                    </p>\n                  </span>\n                </div>\n              </div>\n              <div class="col-sm-12 form-section-title">\n                环境\n              </div>\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">名称</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="例如 docker-prod01">\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              \x3c!-- endpoint-url-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_url" class="col-sm-4 col-lg-3 control-label text-left">\n                  节点接口地址\n                  <portainer-tooltip position="bottom" message="Docker主机的URL或IP地址，Docker API必须可以通过TCP端口访问，请参考Docker文档来配置它。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="例如 10.0.0.10:2375 或 mydocker.mydomain.com:2375">\n                </div>\n              </div>\n              \x3c!-- !endpoint-url-input --\x3e\n              \x3c!-- tls-checkbox --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label for="tls" class="control-label text-left">\n                    TLS\n                    <portainer-tooltip position="bottom" message="如果您需要指定TLS证书来连接到Docker端口，请启用此选项。"></portainer-tooltip>\n                  </label>\n                  <label class="switch" style="margin-left: 20px;">\n                    <input type="checkbox" ng-model="formValues.TLS"><i></i>\n                  </label>\n                </div>\n              </div>\n              \x3c!-- !tls-checkbox --\x3e\n              \x3c!-- tls-options --\x3e\n              <div ng-if="formValues.TLS">\n                \x3c!-- skip-server-verification --\x3e\n                <div class="form-group">\n                  <div class="col-sm-10">\n                    <label for="tls_verify" class="control-label text-left">\n                      跳过服务端验证\n                      <portainer-tooltip position="bottom" message="如果您需要根据指定的CA对服务器进行身份验证，请启用此选项。"></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;">\n                      <input type="checkbox" ng-model="formValues.TLSSkipVerify"><i></i>\n                    </label>\n                  </div>\n                </div>\n                \x3c!-- !skip-server-verification --\x3e\n                \x3c!-- skip-client-verification --\x3e\n                <div class="form-group">\n                  <div class="col-sm-10">\n                    <label for="tls_client_cert" class="control-label text-left">\n                      跳过客户端验证\n                      <portainer-tooltip position="bottom" message="如果您需要使用客户端证书进行身份验证，请启用此选项。"></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;">\n                      <input type="checkbox" ng-model="formValues.TLSSKipClientVerify"><i></i>\n                    </label>\n                  </div>\n                </div>\n                \x3c!-- !skip-client-verification --\x3e\n                <div class="col-sm-12 form-section-title" ng-if="!formValues.TLSSkipVerify || !formValues.TLSSKipClientVerify">\n                  需要的TLS文件\n                </div>\n                \x3c!-- ca-input --\x3e\n                <div class="form-group" ng-if="!formValues.TLSSkipVerify">\n                  <label class="col-sm-4 col-lg-3 control-label text-left">TLS CA证书</label>\n                  <div class="col-sm-8 col-lg-9">\n                    <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">选择文件</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.TLSCACert.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                      <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                    </span>\n                  </div>\n                </div>\n                \x3c!-- !ca-input --\x3e\n                <div ng-if="!formValues.TLSSKipClientVerify">\n                  \x3c!-- cert-input --\x3e\n                  <div class="form-group">\n                    <label for="tls_cert" class="col-sm-4 col-lg-3 control-label text-left">TLS证书</label>\n                    <div class="col-sm-8 col-lg-9">\n                      <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCert">选择文件</button>\n                      <span style="margin-left: 5px;">\n                        {{ formValues.TLSCert.name }}\n                        <i class="fa fa-times red-icon" ng-if="!formValues.TLSCert" aria-hidden="true"></i>\n                        <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                      </span>\n                    </div>\n                  </div>\n                  \x3c!-- !cert-input --\x3e\n                  \x3c!-- key-input --\x3e\n                  <div class="form-group">\n                    <label class="col-sm-4 col-lg-3 control-label text-left">TLS密钥</label>\n                    <div class="col-sm-8 col-lg-9">\n                      <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSKey">选择文件</button>\n                      <span style="margin-left: 5px;">\n                        {{ formValues.TLSKey.name }}\n                        <i class="fa fa-times red-icon" ng-if="!formValues.TLSKey" aria-hidden="true"></i>\n                        <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                      </span>\n                    </div>\n                  </div>\n                  \x3c!-- !key-input --\x3e\n                </div>\n              </div>\n              \x3c!-- !tls-options --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Name || !formValues.URL || (formValues.TLS && ((formValues.TLSVerify && !formValues.TLSCACert) || (!formValues.TLSSKipClientVerify && (!formValues.TLSCert || !formValues.TLSKey))))" ng-click="createRemoteEndpoint()" button-spinner="state.actionInProgress">\n                    <span ng-hide="state.actionInProgress"><i class="fa fa-bolt" aria-hidden="true"></i> 连接</span>\n                    <span ng-show="state.actionInProgress">正在连接...</span>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !remote-endpoint --\x3e\n          </form>\n          \x3c!-- !init-endpoint form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init-endpoint panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){var a="app/portainer/views/init/admin/initAdmin.html",r='<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n        <img ng-if="!logo" src="'+n(211)+'" class="simple-box-logo" alt="Portainer">\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init password panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init password form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  请创建初始的管理员用户。\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- username-input --\x3e\n            <div class="form-group">\n              <label for="username" class="col-sm-4 control-label text-left">\n                用户名\n              </label>\n              <div class="col-sm-8">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" placeholder="例如 admin">\n              </div>\n            </div>\n            \x3c!-- !username-input --\x3e\n            \x3c!-- new-password-input --\x3e\n            <div class="form-group">\n              <label for="password" class="col-sm-4 control-label text-left">密码</label>\n              <div class="col-sm-8">\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password" auto-focus>\n              </div>\n            </div>\n            \x3c!-- !new-password-input --\x3e\n            \x3c!-- confirm-password-input --\x3e\n            <div class="form-group">\n              <label for="confirm_password" class="col-sm-4 control-label text-left">确认密码</label>\n              <div class="col-sm-8">\n                <div class="input-group">\n                  <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password">\n                  <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]" aria-hidden="true"></i></span>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !confirm-password-input --\x3e\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  <i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password.length >= 8]" aria-hidden="true"></i>\n                  密码必须至少8个字符\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- actions --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || formValues.Password.length < 8 || formValues.Password !== formValues.ConfirmPassword" ng-click="createAdminUser()" button-spinner="state.actionInProgress">                  \n                  <span ng-hide="state.actionInProgress"><i class="fa fa-user-plus" aria-hidden="true"></i> 创建用户</span>\n                  <span ng-show="state.actionInProgress">正在创建用户...</span>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !actions --\x3e\n          </form>\n          \x3c!-- !init password form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init password panel --\x3e\n      <div style="text-align:center;font-size:8px;color: #333333">\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Portainer,&nbsp;&nbsp;版本: 1.24.2</br>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;© 2021,&nbsp;&nbsp;PORTAINER\n      </div>\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t){var n="app/portainer/views/extensions/extensions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="扩展"></rd-header-title>\n  <rd-header-content>扩展插件</rd-header-content>\n</rd-header>\n\n<information-panel title-text="提示">\n  <span class="text-muted" style="font-size: 90%;">\n    <p>\n    Portainer CE is a great way of managing clusters, provisioning containers and services and\n    managing container environment lifecycles. To extend the benefit of Portainer CE even more,\n    and to address the needs of larger, complex or critical environments, the Portainer\n    team provides a growing range of low-cost Extensions.\n    </p>\n\n    <p>\n    To ensure that Portainer remains the best choice for managing production container platforms,\n    the Portainer team have chosen a modular, extensible design approach, where additional capability\n    can be added to the Portainer CE core as needed, and at very low cost.\n    </p>\n\n    <p>\n    Available through a simple subscription process from the list below, Portainer Extensions\n    provide a simple way to enhance Portainer CE’s core functionality through incremental capability in important areas.\n    </p>\n\n    <p>\n    For additional information on Portainer Extensions, see our website <a href="http://www.portainer.io/" target="_blank">here</a>.\n    </p>\n  </span>\n</information-panel>\n\n<div class="row">\n  <div class="col-sm-12">\n\n    <rd-widget>\n      <rd-widget-body>\n\n        <form class="form-horizontal" name="extensionEnableForm">\n          <div class="col-sm-12 form-section-title">\n            启用扩展\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                确保您拥有有效的许可证。\n              </span>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label for="extension_license" class="col-sm-2 control-label text-left">许可证</label>\n            <div class="col-sm-10">\n              <input type="text" name="extension_license" class="form-control" ng-model="formValues.License" ng-change="isValidLicenseFormat(extensionEnableForm)" required placeholder="在此输入许可证密钥">\n            </div>\n          </div>\n\n          <div class="form-group" ng-show="extensionEnableForm.extension_license.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="extensionEnableForm.extension_license.$error">\n                <p ng-message="invalidLicense"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 许可证格式无效。</p>\n              </div>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="enableExtension()" ng-disabled="state.actionInProgress || !extensionEnableForm.$valid" button-spinner="state.actionInProgress" style="margin-left: 0px;">\n                <span ng-hide="state.actionInProgress">启用扩展</span>\n                <span ng-show="state.actionInProgress">扩展启用中...</span>\n              </button>\n            </div>\n          </div>\n\n        </form>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extensions && extensions.length > 0">\n  <div class="col-sm-12">\n    <extension-list\n    current-date="state.currentDate"\n    extensions="extensions"\n    ></extension-list>\n  </div>\n</div>\n\n<information-panel title-text="Error" ng-if="extensions && extensions.length === 0">\n  <span class="small text-muted">\n    <p>\n      <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n      平台系统必须连接到Internet才能获取可用的扩展程序列表。\n    </p>\n  </span>\n</information-panel>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/extensions/inspect/extension.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="扩展插件详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.extensions">扩展插件</a> &gt; {{ extension.Name }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="extension">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n\n        <div style="display: flex;">\n\n          <div style="flex-grow: 4; display: flex; flex-direction: column; justify-content: space-between;">\n\n            <div class="form-group">\n              <div class="text-muted" style="font-size: 150%;">\n                {{ extension.Name }} 扩展\n              </div>\n\n              <div class="small text-muted" style="margin-top: 5px;">\n                提供者: <a href="http://example.com" href="_blank">VendorName</a>\n              </div>\n            </div>\n\n            <div class="form-group">\n              <div class="text-muted">\n                {{ extension.ShortDescription }}\n              </div>\n            </div>\n          </div>\n\n          <div style="flex-grow: 1; border-left: 1px solid #777;">\n\n            <div class="form-group" style="margin-left: 40px;">\n\n              <div style="font-size: 125%; border-bottom: 2px solid #2d3e63; padding-bottom: 5px;">\n                <span ng-if="extension.Enabled">已启用</span>\n                <span ng-if="!extension.Enabled && extension.License.Expiration && !extension.License.Valid">已过期</span>\n                <span ng-if="!extension.Enabled && !extension.License.Expiration">{{ extension.Price }}</span>\n              </div>\n\n              <div class="small text-muted col-sm-12" style="margin: 15px 0 15px 0;" ng-if="!extension.Enabled">\n                {{ extension.PriceDescription }}\n              </div>\n\n              <div style="margin-top: 10px; margin-bottom: 95px;" ng-if="!extension.Enabled && extension.Available">\n                <label for="instances_qty" class="col-sm-7 control-label text-left" style="margin-top: 7px;">实例</label>\n                <div class="col-sm-5">\n                  <input type="number" class="form-control" ng-model="formValues.instances" id="instances_qty" placeholder="1" min="1">\n                </div>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="!extension.Enabled && extension.Available">\n                <a href="{{ extension.ShopURL }}&quantity={{ formValues.instances }}" target="_blank" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">\n                  购买\n                </a>\n              </div>\n\n              <div style="margin-top: 10px;" ng-if="!extension.Enabled && extension.Available">\n                <a ui-sref="portainer.extensions" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">\n                  添加许可证密钥\n                </a>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="!extension.Enabled && !extension.Available">\n                <btn class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;" disabled>开发中</btn>\n              </div>\n\n              <div style="margin-top: 15px;" ng-if="extension.Enabled && extension.UpdateAvailable">\n                <button type="button" class="btn btn-primary btn-sm" ng-click="updateExtension(extension)" ng-disabled="state.updateInProgress" button-spinner="state.updateInProgress" style="width: 100%; margin-left: 0;">\n                  <span ng-hide="state.updateInProgress">更新</span>\n                  <span ng-show="state.updateInProgress">扩展更新中...</span>\n                </button>\n              </div>\n\n              <div style="margin-top: 5px;" ng-if="extension.Enabled">\n                <button type="button" class="btn btn-danger btn-sm" ng-click="deleteExtension(extension)" ng-disabled="state.deleteInProgress" button-spinner="state.deleteInProgress" style="width: 100%; margin-left: 0;">\n                  <span ng-hide="state.deleteInProgress">删除</span>\n                  <span ng-show="state.deleteInProgress">扩展删除中...</span>\n                </button>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extension">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            介绍\n          </span>\n        </div>\n        <div class="form-group" ng-if="extension.Description">\n          <div class="text-muted" style="font-size: 90%;" ng-bind-html="extension.Description"></div>\n        </div>\n        <div class="form-group" ng-if="!extension.Description">\n          <div class="small text-muted">\n            <p>\n              <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true"></i>\n              目前此扩展程序无法使用。\n            </p>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="extension">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            截图\n          </span>\n        </div>\n        <div style="text-align: center;">\n          <div ng-repeat="image in extension.Images" style="margin-top: 25px; cursor: zoom-in;">\n            <img ng-src="{{image}}" ng-click="enlargeImage(image)" style="max-width: 1024px;" />\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/registries.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="仓库">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.registries" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>仓库管理</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="dockerhub && isAdmin">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-database" title-text="DockerHub">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- note --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              DockerHub仓库可提供给任何用户使用，您可以指定在此处用于推送和拉取镜像的凭据。\n            </span>\n          </div>\n          \x3c!-- !note --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                启用认证\n                <portainer-tooltip position="bottom" message="如果您需要指定凭证以连接到仓库推送和拉取私有镜像，请启用此选项。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="dockerhub.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="dockerhub.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="hub_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="hub_username" ng-model="dockerhub.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="hub_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="hub_password" ng-model="formValues.dockerHubPassword" placeholder="*******">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || dockerhub.Authentication && (!dockerhub.Username || !formValues.dockerHubPassword)" ng-click="updateDockerHub()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">更新</span>\n                <span ng-show="state.actionInProgress">正在更新DockerHub设置...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <registries-datatable\n    title-text="仓库" title-icon="fa-database"\n    dataset="registries" table-key="registries"\n    order-by="Name"\n    access-management="applicationState.application.authentication && isAdmin"\n    remove-action="removeAction"\n    registry-management="registryManagementAvailable"\n    ></registries-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/edit/registry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="仓库详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">仓库</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_name" ng-model="registry.Name" placeholder="例如 my-registry">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              仓库URL地址\n              <portainer-tooltip position="bottom" message="Docker仓库的URL或IP地址。"></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="registry.URL" placeholder="例如 10.0.0.10:5000 或 myregistry.domain.tld">\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                认证\n                <portainer-tooltip position="bottom" message="如果您需要指定连接到此仓库的凭据，请启用此选项。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="registry.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="registry.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="registry.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="formValues.Password" placeholder="*******">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !registry.Name || !registry.URL || (registry.Authentication && (!registry.Username || !formValues.Password))" ng-click="updateRegistry()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">更新仓库</span>\n                <span ng-show="state.actionInProgress">正在更新仓库...</span>\n              </button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="portainer.registries">取消</a>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/create/createregistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建容器镜像仓库"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">容器镜像仓库</a> &gt; 添加容器镜像仓库\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            仓库提供商\n          </div>\n\n          <div class="form-group"></div>\n\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div ng-click="selectQuayRegistry()">\n                <input type="radio" id="registry_quay" ng-model="model.Type" ng-value="1">\n                <label for="registry_quay">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Quay.io\n                  </div>\n                  <p>Quay容器仓库</p>\n                </label>\n              </div>\n              <div ng-click="selectAzureRegistry()">\n                <input type="radio" id="registry_azure" ng-model="model.Type" ng-value="2">\n                <label for="registry_azure">\n                  <div class="boxselector_header">\n                    <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Azure\n                  </div>\n                  <p>Azure容器仓库</p>\n                </label>\n              </div>\n              <div ng-click="selectCustomRegistry()">\n                <input type="radio" id="registry_custom" ng-model="model.Type" ng-value="3">\n                <label for="registry_custom">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    自定义容器镜像仓库\n                  </div>\n                  <p>定义您自己的容器镜像仓库</p>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <registry-form-quay ng-if="model.Type === 1"\n            model="model"\n            form-action="create"\n            form-action-label="添加仓库"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-quay>\n\n          <registry-form-azure ng-if="model.Type === 2"\n            model="model"\n            form-action="create"\n            form-action-label="添加仓库"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-azure>\n\n          <registry-form-custom ng-if="model.Type === 3"\n            model="model"\n            form-action="create"\n            form-action-label="添加仓库"\n            action-in-progress="state.actionInProgress"\n          ></registry-form-custom>\n\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/registries/access/registryAccess.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="仓库访问"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">仓库</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a> &gt; 访问管理\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="registry">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title-text="仓库"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>\n                {{ registry.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL地址</td>\n              <td>\n                {{ registry.URL }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="registry" access-controlled-entity="registry" entity-type="registry" action-in-progress="state.actionInProgress"\n  update-access="updateAccess">\n</por-access-management>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/schedules.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="计划列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.schedules" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>计划</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <schedules-datatable\n    title-text="计划" title-icon="fa-clock"\n    dataset="schedules" table-key="schedules"\n    order-by="Name"\n    remove-action="removeAction"\n    ></schedules-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/edit/schedule.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="计划详情">\n    <a data-toggle="tooltip" title-text="刷新" ui-sref="portainer.schedules.schedule({id: schedule.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.schedules">任务计划</a> &gt; {{ ::schedule.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n\n        <uib-tabset active="state.activeTab">\n          <uib-tab index="0">\n            <uib-tab-heading>\n              <i class="fa fa-wrench" aria-hidden="true"></i> 配置\n            </uib-tab-heading>\n\n            <schedule-form\n              ng-if="schedule"\n              model="schedule"\n              endpoints="endpoints"\n              groups="groups"\n              form-action="update"\n              form-action-label="更新列表"\n              action-in-progress="state.actionInProgress"\n            ></schedule-form>\n          </uib-tab>\n\n\n          <uib-tab index="1">\n            <uib-tab-heading>\n              <i class="fa fa-tasks" aria-hidden="true"></i> 任务\n            </uib-tab-heading>\n\n            <div class="col-sm-12 form-section-title">\n              信息\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                在所有的节点上通过快照检索任务。此视图中的可用数据可能不是最新的。\n              </span>\n            </div>\n\n            <div class="col-sm-12 form-section-title" style="margin-bottom: 20px;">\n              任务\n            </div>\n            <schedule-tasks-datatable\n              ng-if="tasks"\n              title-text="任务" title-icon="fa-tasks"\n              dataset="tasks"\n              table-key="schedule-tasks"\n              order-by="Status" reverse-order="true"\n              go-to-container-logs="goToContainerLogs"\n            ></schedule-tasks-datatable>\n          </uib-tab>\n\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/schedules/create/createschedule.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建计划"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.schedules">任务计划</a> &gt; 添加计划\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <schedule-form\n          model="model"\n          endpoints="endpoints"\n          groups="groups"\n          form-action="create"\n          form-action-label="创建计划"\n          action-in-progress="state.actionInProgress"\n        ></schedule-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/settings/settings.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="设置"></rd-header-title>\n  <rd-header-content>设置</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title-text="应用设置"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- snapshot-interval --\x3e\n          <div class="form-group">\n            <label for="snapshot_interval" class="col-sm-2 control-label text-left">快照间隔时间</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-model="settings.SnapshotInterval" id="snapshot_interval" placeholder="例如 15m">\n            </div>\n          </div>\n          \x3c!-- !snapshot-interval --\x3e\n          \x3c!-- logo --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_logo" class="control-label text-left">\n                使用自定义标志\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_logo" ng-model="formValues.customLogo"><i></i>\n              </label>\n            </div>\n          </div>\n          <div ng-if="formValues.customLogo">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                您可以在此处指定您标志的URL地址，如果要获得最佳显示效果，标志尺寸应为155像素×55像素。\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="logo_url" class="col-sm-1 control-label text-left">\n                URL地址\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.LogoURL" id="logo_url" placeholder="https://mycompany.com/logo.png">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !logo --\x3e\n          \x3c!-- templates --\x3e\n          <div class="col-sm-12 form-section-title">\n            应用模板\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_templates" class="control-label text-left">\n                使用外部模板\n                <portainer-tooltip position="bottom" message="当使用外部模板时，将禁用应用内的模板管理。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_templates" ng-model="formValues.externalTemplates"><i></i>\n              </label>\n            </div>\n          </div>\n          <div ng-if="formValues.externalTemplates">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                您可以在此处指定自定义模板定义文件的URL地址。\n              </span>\n            </div>\n            <div class="form-group" >\n              <label for="templates_url" class="col-sm-1 control-label text-left">\n                URL地址\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.TemplatesURL" id="templates_url" placeholder="https://example.mydomain.com/templates.json">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !templates --\x3e\n          \x3c!-- security --\x3e\n          <div class="col-sm-12 form-section-title">\n            安全\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowbindmounts" class="control-label text-left">\n                为非管理员禁用绑定挂载\n                <portainer-tooltip position="bottom" message="启用时，普通用户将无法在创建容器时使用绑定挂载。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_allowbindmounts" ng-model="formValues.restrictBindMounts"><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_allowbindmounts" class="control-label text-left">\n                为非管理员禁用特权模式\n                <portainer-tooltip position="bottom" message="启用时，常规用户在创建容器时将无法使用特权模式。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_allowbindmounts" ng-model="formValues.restrictPrivilegedMode"><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_enableHostManagementFeatures" class="control-label text-left">\n                启用主机管理功能\n                <portainer-tooltip position="bottom" message="启用主机管理功能：主机调度程序，主机浏览和命令执行。在部署Portainer代理时，您需要设置CAP_HOST_MANAGEMENT变量才可以使用其中的一些功能。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_enableHostManagementFeatures" ng-model="formValues.enableHostManagementFeatures"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- security --\x3e\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="saveApplicationSettings()" ng-disabled="state.actionInProgress" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">保存设置</span>\n                <span ng-show="state.actionInProgress">正在保存...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tags" title-text="隐藏容器"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" ng-submit="addFilteredContainerLabel()" name="addTagForm">\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              您可以使用Portainer中的特定标签来隐藏容器，需要您指定标签名称和参数值。\n            </span>\n          </div>\n          <div class="form-group">\n            <label for="header_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11 col-md-4">\n              <input type="text" required class="form-control" id="header_name" name="label_name" ng-model="formValues.labelName" placeholder="例如 com.example.foo">\n            </div>\n            <label for="header_value" class="col-sm-1 margin-sm-top control-label text-left">参数值</label>\n            <div class="col-sm-11 col-md-4 margin-sm-top">\n              <input type="text" class="form-control" id="header_value" ng-model="formValues.labelValue" placeholder="例如 bar">\n            </div>\n            <div class="col-sm-12 col-md-2 margin-sm-top">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!formValues.labelName"><i class="fa fa-plus space-right" aria-hidden="true"></i>添加过滤器</button>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12 table-responsive">\n              <table class="table table-hover">\n                <thead>\n                  <tr>\n                    <th>名称</th>\n                    <th>参数值</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr ng-repeat="label in settings.BlackListedLabels">\n                    <td>{{ label.name }}</td>\n                    <td>{{ label.value }}</td>\n                    <td><button type="button" class="btn btn-danger btn-xs" ng-click="removeFilteredContainerLabel($index)"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除</button></td>\n                  </tr>\n                  <tr ng-if="settings.BlackListedLabels.length === 0">\n                    <td colspan="3" class="text-center text-muted">没有可用的过滤器。</td>\n                  </tr>\n                  <tr ng-if="!settings.BlackListedLabels">\n                    <td colspan="3" class="text-center text-muted">载入中...</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          \x3c!-- !filtered-labels --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/settings/authentication/settingsAuthentication.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="认证设置"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.settings">设置</a> &gt; 认证\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title-text="认证"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            认证方法\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="registry_quay" ng-model="settings.AuthenticationMethod" ng-value="1">\n                <label for="registry_quay">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    内部\n                  </div>\n                  <p>内部认证机制</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_custom" ng-model="settings.AuthenticationMethod" ng-value="2">\n                <label for="registry_custom">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    LDAP\n                  </div>\n                  <p>外部LDAP认证</p>\n                </label>\n              </div>\n\n              \x3c!-- Disable OAuth --\x3e\n              <div style="display:none">\n\n              <div ng-if="oauthAuthenticationAvailable">\n                <input type="radio" id="registry_auth" ng-model="settings.AuthenticationMethod" ng-value="3">\n                <label for="registry_auth">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    OAuth\n                  </div>\n                  <p>OAuth身份验证</p>\n                </label>\n              </div>\n              <div style="color: #767676;" ng-click="goToOAuthExtensionView()" ng-if="!oauthAuthenticationAvailable">\n                <input type="radio" id="registry_auth" ng-model="settings.AuthenticationMethod" ng-value="3" disabled>\n                <label for="registry_auth" tooltip-append-to-body="true" tooltip-placement="bottom" tooltip-class="portainer-tooltip" uib-tooltip="Feature available via an extension" style="cursor:pointer; border-color: #767676">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    OAuth (扩展)\n                  </div>\n                  <p>OAuth身份验证</p>\n                </label>\n              </div>\n\n              </div>\n              \x3c!-- Disable OAuth --\x3e\n\n            </div>\n          </div>\n\n          <div ng-if="settings.AuthenticationMethod === 1">\n            <div class="col-sm-12 form-section-title">\n              提示\n            </div>\n            <div class="form-group col-sm-12 text-muted small">\n              当使用内部认证时，Portainer将在本地加密用户密码并存储凭证。\n            </div>\n          </div>\n\n\n          <div ng-if="settings.AuthenticationMethod === 2">\n            <div>\n              <div class="col-sm-12 form-section-title">\n                提示\n              </div>\n              <div class="form-group col-sm-12 text-muted small">\n                使用LDAP身份验证时，Portainer会将用户身份验证委派给LDAP服务器认证，如果验证失败将使用内部认证验证。\n              </div>\n          </div>\n\n            <div class="col-sm-12 form-section-title">\n              LDAP配置\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_url" class="col-sm-3 col-lg-2 control-label text-left">\n                LDAP服务器\n                <portainer-tooltip position="bottom" message="LDAP服务器的URL或IP地址。"></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="ldap_url" ng-model="LDAPSettings.URL" placeholder="例如 10.0.0.10:389 或 myldap.domain.tld:389">\n              </div>\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_username" class="col-sm-3 col-lg-2 control-label text-left">\n                Reader DN\n                <portainer-tooltip position="bottom" message="将用于搜索用户的帐户。"></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="ldap_username" ng-model="LDAPSettings.ReaderDN" placeholder="cn=readonly-account,dc=ldap,dc=domain,dc=tld">\n              </div>\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                密码\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="ldap_password" ng-model="LDAPSettings.Password" placeholder="password">\n              </div>\n            </div>\n\n            <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLS && !LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                连接检查\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.connectivityCheckInProgress || !LDAPSettings.URL || !LDAPSettings.ReaderDN || !LDAPSettings.Password" ng-click="LDAPConnectivityCheck()" button-spinner="state.connectivityCheckInProgress">\n                  <span ng-hide="state.connectivityCheckInProgress">测试连接</span>\n                  <span ng-show="state.connectivityCheckInProgress">正在测试连接...</span>\n                </button>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              LDAP安全\n            </div>\n\n            \x3c!-- starttls --\x3e\n            <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  启用StartTLS\n                  <portainer-tooltip position="bottom" message="如果要使用StartTLS来保护到服务器的连接，请启用此选项；如果选择使用TLS，则忽略。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.StartTLS"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !starttls --\x3e\n\n            \x3c!-- tls-checkbox --\x3e\n            <div class="form-group" ng-if="!LDAPSettings.StartTLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  使用TLS\n                  <portainer-tooltip position="bottom" message="如果您需要指定TLS证书以连接到LDAP服务器，请启用此选项。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.TLSConfig.TLS"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-checkbox --\x3e\n\n            \x3c!-- tls-skip-verify --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  跳过服务器证书的验证\n                  <portainer-tooltip position="bottom" message="跳过服务器TLS证书的验证，不建议在不安全的网络上使用。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.TLSConfig.TLSSkipVerify"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-skip-verify --\x3e\n\n            \x3c!-- tls-certs --\x3e\n            <div ng-if="LDAPSettings.TLSConfig.TLS || LDAPSettings.StartTLS">\n              \x3c!-- ca-input --\x3e\n              <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLSSkipVerify">\n                <label class="col-sm-2 control-label text-left">TLS CA证书</label>\n                <div class="col-sm-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">选择文件</button>\n                  <span style="margin-left: 5px;">\n                    {{ formValues.TLSCACert.name }}\n                    <i class="fa fa-check green-icon" ng-if="formValues.TLSCACert && formValues.TLSCACert === LDAPSettings.TLSConfig.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-circle-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !ca-input --\x3e\n            </div>\n            \x3c!-- !tls-certs --\x3e\n\n            <div class="form-group" ng-if="LDAPSettings.TLSConfig.TLS || LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                连接检查\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button type="button" class="btn btn-primary btn-sm" ng-click="LDAPConnectivityCheck()" ng-disabled="!LDAPSettings.URL || !LDAPSettings.ReaderDN || !LDAPSettings.Password || (!formValues.TLSCACert && !LDAPSettings.TLSConfig.TLSSkipVerify)">测试连接</button>\n                <i id="connectivityCheckSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              自动配置用户\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                启用自动配置用户后，Portainer将使用基础的标准用户角色自动创建用户，并将其分配给与LDAP组名称匹配的用户组。如果禁用，则必须提前在系统中创建用户。\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  自动配置用户\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.AutoCreateUsers"><i></i>\n                </label>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              用户搜索配置\n            </div>\n\n            \x3c!-- search-settings --\x3e\n            <div ng-repeat="config in LDAPSettings.SearchSettings | limitTo: (1 - LDAPSettings.SearchSettings)" style="margin-top: 5px;">\n\n              <div class="form-group" ng-if="$index > 0">\n                <span class="col-sm-12 text-muted small">\n                  额外的搜索配置\n                </span>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_basedn_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  基础DN\n                  <portainer-tooltip position="bottom" message="LDAP服务器将从中搜索用户元素中可分辨的名称。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-4">\n                  <input type="text" class="form-control" id="ldap_basedn_{{$index}}" ng-model="config.BaseDN" placeholder="dc=ldap,dc=domain,dc=tld">\n                </div>\n\n                <label for="ldap_username_att_{{$index}}" class="col-sm-4 col-md-3 col-lg-2 margin-sm-top control-label text-left">\n                  用户名属性\n                  <portainer-tooltip position="bottom" message="表示用户名的LDAP属性。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-3 col-lg-4 margin-sm-top">\n                  <input type="text" class="form-control" id="ldap_username_att_{{$index}}" ng-model="config.UserNameAttribute" placeholder="uid">\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="ldap_filter_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  过滤器\n                  <portainer-tooltip position="bottom" message="用于选择用户元素的LDAP搜索过滤器（可选）。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-7 col-md-9">\n                  <input type="text" class="form-control" id="ldap_filter_{{$index}}" ng-model="config.Filter" placeholder="(objectClass=account)">\n                </div>\n                <div class="col-sm-1" ng-if="$index > 0">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeSearchConfiguration($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div class="form-group">\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSearchConfiguration()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加用户搜索配置\n                </span>\n              </div>\n\n            </div>\n            \x3c!-- !search-settings --\x3e\n\n            <div class="col-sm-12 form-section-title">\n              用户组搜索配置\n            </div>\n\n            \x3c!-- group-search-settings --\x3e\n            <div ng-repeat="groupConfig in LDAPSettings.GroupSearchSettings | limitTo: (1 - LDAPSettings.GroupSearchSettings)" style="margin-top: 5px;">\n\n              <div class="form-group" ng-if="$index > 0">\n                <span class="col-sm-12 text-muted small">\n                  额外的搜索配置\n                </span>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_group_basedn_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  用户组基础DN\n                  <portainer-tooltip position="bottom" message="LDAP服务器搜索用户组时可识别的名称。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-4">\n                  <input type="text" class="form-control" id="ldap_group_basedn_{{$index}}" ng-model="groupConfig.GroupBaseDN" placeholder="dc=ldap,dc=domain,dc=tld">\n                </div>\n\n                <label for="ldap_group_att_{{$index}}" class="col-sm-4 col-md-3 col-lg-2 margin-sm-top control-label text-left">\n                  用户组成员属性\n                  <portainer-tooltip position="bottom" message="表示用户组成员资格的LDAP属性。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-3 col-lg-4 margin-sm-top">\n                  <input type="text" class="form-control" id="ldap_group_att_{{$index}}" ng-model="groupConfig.GroupAttribute" placeholder="member">\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="ldap_group_filter_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  用户组过滤器\n                  <portainer-tooltip position="bottom" message="用于筛选用户组元素的LDAP搜索过滤器（可选）。"></portainer-tooltip>\n                </label>\n                <div class="col-sm-7 col-md-9">\n                  <input type="text" class="form-control" id="ldap_group_filter_{{$index}}" ng-model="groupConfig.GroupFilter" placeholder="(objectClass=account)">\n                </div>\n                <div class="col-sm-1" ng-if="$index > 0">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeGroupSearchConfiguration($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div class="form-group">\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addGroupSearchConfiguration()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加用户组搜索配置\n                </span>\n              </div>\n\n            </div>\n            \x3c!-- !group-search-settings --\x3e\n          </div>\n\n          <oauth-settings ng-if="isOauthEnabled()" settings="OAuthSettings" teams="teams"></oauth-settings>\n\n            \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="saveSettings()" ng-disabled="state.actionInProgress" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">保存配置</span>\n                <span ng-show="state.actionInProgress">正在保存...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/stacks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="堆栈列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.stacks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>堆栈</rd-header-content>\n</rd-header>\n<information-panel-offline ng-if="offlineMode"></information-panel-offline>\n<div class="row">\n  <div class="col-sm-12">\n    <stacks-datatable\n    title-text="堆栈" title-icon="fa-th-list"\n    dataset="stacks" table-key="stacks"\n    order-by="Name" \n    remove-action="removeAction"\n    show-ownership-column="applicationState.application.authentication"\n    offline-mode="offlineMode"\n    ></stacks-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/edit/stack.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="堆栈详情">\n    <a data-toggle="tooltip" title-text="刷新" ui-sref="portainer.stacks.stack({id: stack.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.stacks">堆栈</a> &gt; {{ stackName }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <uib-tabset active="state.activeTab">\n          \x3c!-- tab-info --\x3e\n          <uib-tab index="0">\n            <uib-tab-heading>\n              <i class="fa fa-th-list" aria-hidden="true"></i> 堆栈\n            </uib-tab-heading>\n            <div style="margin-top: 10px;">\n              \x3c!-- stack-information --\x3e\n              <div ng-if="state.externalStack">\n                <div class="col-sm-12 form-section-title">\n                  提示\n                </div>\n                <div class="form-group">\n                  <span class="small">\n                    <p class="text-muted">\n                      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      此堆栈是在Portainer外部创建的，可能无法管理和控制这个外部堆栈。\n                    </p>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !stack-information --\x3e\n              \x3c!-- stack-details --\x3e\n              <div>\n                <div class="col-sm-12 form-section-title">\n                  堆栈详情\n                </div>\n                <div class="form-group">\n                  {{ stackName }}\n                  <button authorization="PortainerStackDelete" class="btn btn-xs btn-danger" ng-click="removeStack()" ng-if="!state.externalStack || stack.Type === 1"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除堆栈</button>\n                </div>\n              </div>\n              \x3c!-- !stack-details --\x3e\n              <stack-duplication-form\n                ng-if="!state.externalStack && endpoints.length > 0"\n                endpoints="endpoints"\n                groups="groups"\n                current-endpoint-id="currentEndpointId"\n                on-duplicate="duplicateStack(name, endpointId)"\n                on-migrate="migrateStack(name, endpointId)"\n                >\n              </stack-duplication-form>\n            </div>\n          </uib-tab>\n          \x3c!-- !tab-info --\x3e\n          \x3c!-- tab-file --\x3e\n          <uib-tab index="1" ng-if="stackFileContent" select="showEditor()">\n            <uib-tab-heading>\n              <i class="fa fa-pencil-alt space-right" aria-hidden="true"></i> 编辑器\n            </uib-tab-heading>\n            <form class="form-horizontal" ng-if="state.showEditorTab" style="margin-top: 10px;">\n              <div class="form-group">\n                <span class="col-sm-12 text-muted small">\n                  您可以查看 <a href="https://docs.docker.com/compose/compose-file/" target="_blank">Docker官方文档</a> 来了解Compose文件格式的更多信息。\n                </span>\n              </div>\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <code-editor\n                    identifier="stack-editor"\n                    placeholder="# 在此处定义或粘贴您的 docker-compose 文件内容"\n                    yml="true"\n                    on-change="editorUpdate"\n                    value="stackFileContent"\n                  ></code-editor>\n                </div>\n              </div>\n              \x3c!-- environment-variables --\x3e\n              <div ng-if="stack && stack.Type === 1">\n                <div class="col-sm-12 form-section-title">\n                  环境\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12" style="margin-top: 5px;" authorization="PortainerStackUpdate">\n                    <label class="control-label text-left">环境变量</label>\n                    <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                      <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加环境变量\n                    </span>\n                  </div>\n                  \x3c!-- environment-variable-input-list --\x3e\n                  <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                    <div ng-repeat="variable in stack.Env" style="margin-top: 2px;">\n                      <div class="input-group col-sm-5 input-group-sm">\n                        <span class="input-group-addon">名称</span>\n                        <input type="text" class="form-control" ng-model="variable.name" placeholder="例如 FOO">\n                      </div>\n                      <div class="input-group col-sm-5 input-group-sm">\n                        <span class="input-group-addon">参数值</span>\n                        <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 bar">\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)" authorization="PortainerStackUpdate">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                  </div>\n                  \x3c!-- !environment-variable-input-list --\x3e\n                </div>\n              </div>\n              \x3c!-- !environment-variables --\x3e\n              \x3c!-- options --\x3e\n              <div ng-if="stack.Type === 1 && applicationState.endpoint.apiVersion >= 1.27" authorization="PortainerStackUpdate">\n                <div class="col-sm-12 form-section-title">\n                选项\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <label for="prune" class="control-label text-left">\n                      精简服务\n                      <portainer-tooltip position="bottom" message="精简不再被引用的服务。"></portainer-tooltip>\n                    </label>\n                    <label class="switch" style="margin-left: 20px;">\n                      <input name="prune" type="checkbox" ng-model="formValues.Prune"><i></i>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !options --\x3e\n              <div authorization="PortainerStackUpdate">\n                <div class="col-sm-12 form-section-title">\n                  操作\n                </div>\n                <div class="form-group">\n                  <div class="col-sm-12">\n                    <button type="button" class="btn btn-sm btn-primary" ng-disabled="state.actionInProgress" ng-click="deployStack()" button-spinner="state.actionInProgress">\n                      <span ng-hide="state.actionInProgress">更新堆栈</span>\n                      <span ng-show="state.actionInProgress">正在进行部署...</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </uib-tab>\n          \x3c!-- !tab-file --\x3e\n        </uib-tabset>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="containers">\n  <div class="col-sm-12">\n    <containers-datatable\n      title-text="容器" title-icon="fa-server"\n      dataset="containers" table-key="stack-containers"\n      order-by="Status"\n      show-ownership-column="applicationState.application.authentication"\n      show-host-column="false"\n      show-add-action="false"\n    ></containers-datatable>\n  </div>\n</div>\n\n<div class="row" ng-if="services">\n  <div class="col-sm-12">\n    <services-datatable\n    title-text="服务" title-icon="fa-list-alt"\n    dataset="services" table-key="stack-services"\n    order-by="Name"\n    nodes="nodes"\n    agent-proxy="applicationState.endpoint.mode.agentProxy && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'"\n    show-ownership-column="false"\n    show-update-action="applicationState.endpoint.apiVersion >= 1.25"\n    show-task-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n    show-add-action="false"\n    show-stack-column="false"\n    ></services-datatable>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="stack && applicationState.application.authentication"\n  resource-id="stack.Name"\n  resource-control="stack.ResourceControl"\n  resource-type="\'stack\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/stacks/create/createstack.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建堆栈"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.stacks">堆栈</a> &gt; 添加堆栈\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="stack_name" class="col-sm-1 control-label text-left">名称</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="stack_name" placeholder="例如 myStack" auto-focus>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small" ng-if="state.StackType === 1">\n              使用堆栈相当于通过 <code>docker stack deploy</code> 命令来部署应用。\n            </span>\n            <span class="col-sm-12 text-muted small" ng-if="state.StackType === 2">\n              使用堆栈相当于通过 <code>docker-compose</code> 命令来部署应用。目前仅支持版本为"<b>2</b>"的Compose文件格式。\n            </span>\n          </div>\n          \x3c!-- build-method --\x3e\n          <div class="col-sm-12 form-section-title">\n            构建方法\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="method_editor" ng-model="state.Method" value="editor">\n                <label for="method_editor">\n                  <div class="boxselector_header">\n                    <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                    网页编辑器\n                  </div>\n                  <p>使用我们的Web编辑器</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_upload" ng-model="state.Method" value="upload">\n                <label for="method_upload">\n                  <div class="boxselector_header">\n                    <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n                    上传\n                  </div>\n                  <p>从您的电脑上传</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="method_repository" ng-model="state.Method" value="repository">\n                <label for="method_repository">\n                  <div class="boxselector_header">\n                    <i class="fab fa-git" aria-hidden="true" style="margin-right: 2px;"></i>\n                    仓库\n                  </div>\n                  <p>使用一个git仓库</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !build-method --\x3e\n          \x3c!-- web-editor --\x3e\n          <div ng-show="state.Method === \'editor\'">\n            <div class="col-sm-12 form-section-title">\n              网页编辑器\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                您可以在<a href="https://docs.docker.com/compose/compose-file/" target="_blank">docker官方文档</a>中获得有关撰写该文件格式的更多信息。\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <code-editor\n                  identifier="stack-creation-editor"\n                  placeholder="# 在此定义或粘贴docker-compose文件的内容"\n                  yml="true"\n                  on-change="editorUpdate"\n                ></code-editor>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !web-editor --\x3e\n          \x3c!-- upload --\x3e\n          <div ng-show="state.Method === \'upload\'">\n            <div class="col-sm-12 form-section-title">\n              上传\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                您可以从计算机上传Compose文件。\n              </span>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.StackFile">选择文件</button>\n                <span style="margin-left: 5px;">\n                  {{ formValues.StackFile.name }}\n                  <i class="fa fa-times red-icon" ng-if="!formValues.StackFile" aria-hidden="true"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !upload --\x3e\n          \x3c!-- repository --\x3e\n          <div ng-show="state.Method === \'repository\'">\n            <div class="col-sm-12 form-section-title">\n              Git仓库\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                您可以使用一个git仓库的URL地址。\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">仓库URL地址</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="formValues.RepositoryURL" id="stack_repository_url" placeholder="https://github.com/example/example-compose">\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                使用下列语法指定引用的Git仓库：使用 <code>refs/heads/branch_name</code> 分支，或使用 <code>refs/tags/tag_name</code> 标签。如未指定，将使用默认的 <code>HEAD</code> 引用，通常会指向为 <code>master</code> 分支。\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_url" class="col-sm-2 control-label text-left">仓库引用</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="formValues.RepositoryReferenceName" id="stack_repository_reference_name" placeholder="refs/heads/master">\n              </div>\n            </div>\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                从仓库的根目录指定Compose文件的路径。\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="stack_repository_path" class="col-sm-2 control-label text-left">Compose路径</label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="formValues.ComposeFilePathInRepository" id="stack_repository_path" placeholder="docker-compose.yml">\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label class="control-label text-left">\n                  身份认证\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="formValues.RepositoryAuthentication"><i></i>\n                </label>\n              </div>\n            </div>\n            <div class="form-group" ng-if="formValues.RepositoryAuthentication">\n              <label for="repository_username" class="col-sm-1 control-label text-left">用户名</label>\n              <div class="col-sm-11 col-md-5">\n                <input type="text" class="form-control" ng-model="formValues.RepositoryUsername" name="repository_username" placeholder="myGitUser">\n              </div>\n              <label for="repository_password" class="col-sm-1 margin-sm-top control-label text-left">\n                密码\n              </label>\n              <div class="col-sm-11 col-md-5 margin-sm-top">\n                <input type="password" class="form-control" ng-model="formValues.RepositoryPassword" name="repository_password" placeholder="myPassword">\n              </div>\n            </div>\n          </div>\n          \x3c!-- environment-variables --\x3e\n          <div>\n            <div class="col-sm-12 form-section-title">\n              环境\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">环境变量</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加环境变量\n                </span>\n              </div>\n              \x3c!-- environment-variable-input-list --\x3e\n              <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                <div ng-repeat="variable in formValues.Env" style="margin-top: 2px;">\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">名称</span>\n                    <input type="text" class="form-control" ng-model="variable.name" placeholder="例如 FOO">\n                  </div>\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">参数值</span>\n                    <input type="text" class="form-control" ng-model="variable.value" placeholder="例如 bar">\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n              \x3c!-- !environment-variable-input-list --\x3e\n            </div>\n          </div>\n          \x3c!-- !environment-variables --\x3e\n          \x3c!-- !repository --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress\n              || (state.Method === \'upload\' && !formValues.StackFile)\n              || (state.Method === \'repository\' && ((!formValues.RepositoryURL || !formValues.ComposeFilePathInRepository) || (formValues.RepositoryAuthentication && (!formValues.RepositoryUsername || !formValues.RepositoryPassword))))\n              || !formValues.Name" ng-click="deployStack()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">部署堆栈</span>\n                <span ng-show="state.actionInProgress">正在部署堆栈...</span>\n              </button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/uiplugin/uiplugin.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="汉化说明">\n  </rd-header-title>\n  <rd-header-content>\n    汉化说明\n  </rd-header-content>\n</rd-header>\n<div style="width:99%;height:99%;overflow:hidden;zoom:1;">\n      <div style="width:99%;height:99%;margin-left:5px;">\n        <iframe src="../plugin.html" width="100%" height="100%" frameborder="0" align="center" scrolling="auto" allowtransparency="true">\n        您的浏览器不支持iframe，请升级!\n        </iframe>\n      </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/support/support.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="Portainer 容器云支持">\n  </rd-header-title>\n  <rd-header-content>\n    商业支持选项\n  </rd-header-content>\n</rd-header>\n\n<information-panel title-text="提示">\n  <span class="small text-muted">\n    <p>\n      业务支持是订阅服务，由厂商直接提供。业务支持提供标准和关键级别，提供一系列可用性和响应时间选项。\n    </p>\n    <p>\n      一旦通过购买获得，支持订阅将允许私人访问适当服务级别的支持门户。\n    </p>\n    <p>\n      业务支持包括软件的全面协助和问题解决，以及询问“如何”问题的能力。\n    </p>\n    <p>\n      软件以外的问题（例如与第三方软件或硬件相关的问题）将被诊断，验证，客户将被转介给相关供应商以获得支持。厂商支持将调查并解决任何被识别为支持案例的错误。\n    </p>\n  </span>\n</information-panel>\n\n<div class="row">\n  <div class="col-sm-12">\n    <product-list\n      title-text="可用的支持选项"\n      products="products"\n      go-to="goToProductView"\n    ></product-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/support/product/product.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="支持选项详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.support">支持选项：</a> &gt; {{ product.Name }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n\n        <div style="display: flex;">\n\n          <div style="flex-grow: 4; display: flex; flex-direction: column; justify-content: space-between;">\n\n            <div class="form-group">\n              <div class="text-muted" style="font-size: 150%;">\n                {{ product.Name }}\n              </div>\n\n              <div class="small text-muted" style="margin-top: 5px;">\n                提供者: <a href="http://example.com" href="_blank">VendorName</a>\n              </div>\n            </div>\n\n            <div class="form-group">\n              <div class="text-muted">\n                {{ product.ShortDescription }}\n              </div>\n            </div>\n\n          </div>\n\n          <div style="flex-grow: 1; border-left: 1px solid #777;">\n\n            <div class="form-group" style="margin-left: 40px;">\n\n              <div style="font-size: 125%; border-bottom: 2px solid #2d3e63; padding-bottom: 5px;">\n                {{ product.Price }}\n              </div>\n\n              <div class="small text-muted col-sm-12" style="margin: 15px 0 15px 0;">\n                {{ product.PriceDescription }}\n              </div>\n\n              <div style="margin-top: 10px; margin-bottom: 95px;">\n                <label for="endpoint_count" class="col-sm-7 control-label text-left" style="margin-top: 7px;">主机</label>\n                <div class="col-sm-5">\n                  <input type="number" class="form-control" ng-model="formValues.hostCount" id="endpoint_count" placeholder="10" min="10">\n                </div>\n              </div>\n\n              <div style="margin-top: 15px;" >\n                  <a href="https://portainer.io/checkout/?add-to-cart={{ product.ProductId }}&quantity={{ formValues.hostCount }}" target="_blank">\n                      <button ng-disabled="!formValues.hostCount || formValues.hostCount < 10" class="btn btn-primary btn-sm" style="width: 100%; margin-left: 0;">购买</button>\n                </a>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="product">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span>\n            介绍\n          </span>\n        </div>\n        <div class="form-group">\n          <span class="small text-muted" style="white-space: pre-line;">{{ product.Description }}</span>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/tags/tags.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="标签">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.tags" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>标签管理</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="添加一个新的标签">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" name="tagCreationForm" ng-submit="createTag()">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="name" class="col-sm-2 control-label text-left">\n              名称\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" name="name" ng-model="formValues.Name" ng-change="checkNameValidity(tagCreationForm)" placeholder="org/acme" required auto-focus />\n            </div>\n          </div>\n          <div class="form-group" ng-show="tagCreationForm.name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="tagCreationForm.name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                <p ng-message="validName"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这个标签已存在。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !tagCreationForm.$valid" ng-click="createTag()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 创建标签</span>\n                <span ng-show="state.actionInProgress">标签创建中...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\n<div class="row">\n  <div class="col-sm-12">\n    <tags-datatable\n    title-text="标签" title-icon="fa-tags"\n    dataset="tags" table-key="tags"\n    order-by="Name" \n    remove-action="removeAction"\n    ></tags-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/update-password/updatePassword.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="page-wrapper">\n  \x3c!--  box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!--  panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          <form class="simple-box-form form-horizontal" name="updatePasswordForm">\n          \x3c!-- note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                您的必须更新您的密码。\n              </span>\n            </div>\n          </div>\n          \x3c!-- !note --\x3e\n          \x3c!-- current-password-input --\x3e\n          <div class="form-group">\n            <label for="current_password" class="col-sm-4 control-label text-left">当前密码</label>\n            <div class="col-sm-8">\n              <input type="password" class="form-control" ng-model="formValues.CurrentPassword" id="current_password" auto-focus required>\n            </div>\n          </div>\n          \x3c!-- !current-password-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="password" class="col-sm-4 control-label text-left">密码</label>\n            <div class="col-sm-8">\n              <input type="password" class="form-control" ng-model="formValues.Password" id="password" required>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-4 control-label text-left">确认密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password" required>\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          \x3c!-- note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                <i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password.length >= 8]" aria-hidden="true"></i>\n                密码长度必须至少为8个字符\n              </span>\n            </div>\n          </div>\n          \x3c!-- !note --\x3e\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !updatePasswordForm.$valid || formValues.Password.length < 8 || formValues.Password !== formValues.ConfirmPassword" ng-click="updatePassword()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">更新密码</span>\n                <span ng-show="state.actionInProgress">正在更新密码...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n          </form>\n        </div>\n      </div>\n      \x3c!-- ! panel --\x3e\n    </div>\n  </div>\n  \x3c!-- ! box --\x3e\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/users/users.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="用户">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.users" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>用户管理</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="添加一个新用户">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="username" class="col-sm-3 col-lg-2 control-label text-left">\n              用户名\n              <portainer-tooltip ng-if="AuthenticationMethod === 2" position="bottom" message="用户名必须与外部LDAP源中定义的用户名完全匹配。"></portainer-tooltip>\n            </label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" ng-change="checkUsernameValidity()" placeholder="例如 jdoe" auto-focus>\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[state.validUsername]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="confirm_password" class="col-sm-3 col-lg-2 control-label text-left">确认密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          \x3c!-- admin-checkbox --\x3e\n          <div class="form-group" ng-if="isAdmin">\n            <div class="col-sm-12">\n              <label for="permissions" class="control-label text-left">\n                管理员\n                <portainer-tooltip position="bottom" message="管理员可以访问并管理Portainer的所有设置，以及完全访问并控制所有已定义的节点及资源。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.Administrator"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !admin-checkbox --\x3e\n          \x3c!-- teams --\x3e\n          <div class="form-group" ng-if="!formValues.Administrator">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                添加到用户组\n              </label>\n              <span class="small text-muted" style="margin-left: 20px;" ng-if="teams.length === 0">\n                您还没有创建任何用户组，请通过<a ui-sref="portainer.teams">用户组视图</a>来管理用户组。\n              </span>\n              <span isteven-multi-select\n               ng-if="teams.length > 0"\n               input-model="teams"\n               output-model="formValues.Teams"\n               button-label="Name"\n               item-label="Name"\n               tick-property="ticked"\n               helper-elements="filter"\n               search-property="Name"\n               translation="{nothingSelected: \'选择一个或多个用户组\', search: \'搜索...\'}"\n               style="margin-left: 20px;">\n               </span>\n            </div>\n          </div>\n          \x3c!-- !teams --\x3e\n          <div class="form-group" ng-if="isAdmin && !formValues.Administrator && formValues.Teams.length === 0">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                注意：没有用户组的非管理员用户默认情况下不能访问任何节点，请前往<a ui-sref="portainer.endpoints">节点视图</a>来管理这些用户的访问。\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !state.validUsername || formValues.Username === \'\' || (AuthenticationMethod === 1 && formValues.Password === \'\') || (AuthenticationMethod === 1 && formValues.Password !== formValues.ConfirmPassword)" ng-click="addUser()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 创建用户</span>\n                <span ng-show="state.actionInProgress">正在创建用户...</span>\n              </button>\n              <span class="text-danger" ng-if="state.userCreationError" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.userCreationError }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <users-datatable\n    title-text="用户" title-icon="fa-user"\n    dataset="users" table-key="users"\n    order-by="Username"\n    authentication-method="AuthenticationMethod"\n    remove-action="removeAction"\n    ></users-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/users/edit/user.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="用户详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.users">用户</a> &gt; <a ui-sref="portainer.users.user({id: user.Id})">{{ user.Username }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user" title-text="用户详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td><label>用户名</label></td>\n              <td>\n                {{ user.Username }}\n                <button class="btn btn-xs btn-danger" ng-click="deleteUser()"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个用户</button>\n              </td>\n            </tr>\n            <tr ng-if="isAdmin">\n              <td colspan="2">\n                <label for="permissions" class="control-label text-left">\n                  管理员\n                  <portainer-tooltip position="bottom" message="管理员有权限访问Portainer平台的所有设置，以及管理所有已定义的节点和资源。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="formValues.Administrator" ng-change="updatePermissions()"><i></i>\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="AuthenticationMethod === 1">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title-text="修改用户密码"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">新的密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">确认密码</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-2">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="formValues.newPassword === \'\' || formValues.newPassword !== formValues.confirmPassword" ng-click="updatePassword()">更新密码</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/teams/teams.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="用户组">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.teams" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>用户组管理</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="isAdmin">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="添加一个新的用户组">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" name="teamCreationForm" ng-submit="addTeam()">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="team_name" class="col-sm-2 control-label text-left">名称</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" id="team_name" name="team_name" ng-model="formValues.Name" ng-change="checkNameValidity(teamCreationForm)" placeholder="例如 development" auto-focus required>\n            </div>\n          </div>\n          <div class="form-group" ng-show="teamCreationForm.team_name.$invalid">\n            <div class="col-sm-12 small text-warning">\n              <div ng-messages="teamCreationForm.team_name.$error">\n                <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n                <p ng-message="validName"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这个用户组已存在。</p>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- team-leaders --\x3e\n          <div class="form-group" ng-if="users.length > 0">\n            <div class="col-sm-12" >\n              <label class="control-label text-left">\n                选择用户组管理员\n                <portainer-tooltip position="bottom" message="您可以分配一个或多个管理员到这个用户组，用户组管理员可以管理他们用户组的用户和资源。"></portainer-tooltip>\n              </label>\n              <span isteven-multi-select\n               ng-if="users.length > 0"\n               input-model="users"\n               output-model="formValues.Leaders"\n               button-label="Username"\n               item-label="Username"\n               tick-property="ticked"\n               helper-elements="filter"\n               search-property="Username"\n               translation="{nothingSelected: \'选择一个或多个用户组管理员\', search: \'搜索...\'}"\n               style="margin-left: 20px;">\n              </span>\n            </div>\n          </div>\n          \x3c!-- !team-leaders --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !teamCreationForm.$valid" ng-click="addTeam()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 创建用户组</span>\n                <span ng-show="state.actionInProgress">正在创建用户组...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <teams-datatable\n    title-text="用户组" title-icon="fa-users"\n    dataset="teams" table-key="teams"\n    order-by="Name"\n    remove-action="removeAction"\n    ></teams-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/teams/edit/team.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="用户组详情"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.teams">用户组</a> &gt; <a ui-sref="portainer.teams.team({id: team.Id})">{{ team.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title-text="用户组详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>名称</td>\n              <td>\n                {{ team.Name }}\n                <button class="btn btn-xs btn-danger" ng-if="isAdmin" ng-click="deleteTeam()"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个用户组</button>\n              </td>\n            </tr>\n            <tr>\n              <td>用户组管理员</td>\n              <td>{{ leaderCount }}</td>\n            </tr>\n            <tr>\n              <td>用户组中的用户总数</td>\n              <td>{{ teamMembers.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="team">\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title-text="用户">\n        <div class="pull-md-right pull-lg-right">\n          每页项目:\n          <select ng-model="state.pagination_count_users" ng-change="changePaginationCountUsers()">\n            <option value="0">全部</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="addAllUsers()" ng-if="isAdmin" ng-disabled="users.length ===  0 || filteredUsers.length === 0"><i class="fa fa-user-plus space-right" aria-hidden="true"></i>添加所有用户</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterUsers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderUsers(\'Username\')">\n                    名称\n                    <span ng-show="sortTypeUsers == \'Username\' && !sortReverseUsers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeUsers == \'Username\' && sortReverseUsers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr pagination-id="table1" dir-paginate="user in users | filter:state.filterUsers | orderBy:sortTypeUsers:sortReverseUsers | itemsPerPage: state.pagination_count_users">\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;">\n                    <a ng-click="addUser(user)"><i class="fa fa-plus-circle space-right" aria-hidden="true"></i>添加</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!users">\n                <td colspan="2" class="text-center text-muted">正在载入...</td>\n              </tr>\n              <tr ng-if="users.length === 0 || (users | filter:state.filterUsers).length === 0">\n                <td colspan="2" class="text-center text-muted">没有用户。</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="users" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table1"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title-text="用户组成员">\n        <div class="pull-md-right pull-lg-right">\n          每页项目:\n          <select ng-model="state.pagination_count_members" ng-change="changePaginationCountGroupMembers()">\n            <option value="0">全部</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="removeAllUsers()" ng-if="isAdmin" ng-disabled="teamMembers.length ===  0 || filteredGroupMembers.length === 0"><i class="fa fa-user-times space-right" aria-hidden="true"></i>删除所有用户</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterGroupMembers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderGroupMembers(\'Username\')">\n                    名称\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="orderGroupMembers(\'TeamRole\')">\n                    用户组角色\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr pagination-id="table2" dir-paginate="user in teamMembers | filter:state.filterGroupMembers | orderBy:sortTypeGroupMembers:sortReverseGroupMembers | itemsPerPage: state.pagination_count_groupMembers">\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin || user.TeamRole === \'Member\'">\n                    <a ng-click="removeUser(user)"><i class="fa fa-minus-circle space-right" aria-hidden="true"></i>删除</a>\n                  </span>\n                </td>\n                <td>\n                  <i ng-if="user.TeamRole === \'Leader\'" class="fa fa-user-plus" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <i ng-if="user.TeamRole === \'Member\'" class="fa fa-user" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.TeamRole }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin">\n                    <a style="margin-left: 5px;" ng-click="promoteToLeader(user)" ng-if="user.TeamRole === \'Member\'"><i class="fa fa-user-plus space-right" aria-hidden="true"></i>用户组管理员</a>\n                    <a style="margin-left: 5px;" ng-click="demoteToMember(user)" ng-if="user.TeamRole === \'Leader\'"><i class="fa fa-user-times space-right" aria-hidden="true"></i>成员</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!teamMembers">\n                <td colspan="2" class="text-center text-muted">正在载入...</td>\n              </tr>\n              <tr ng-if="teamMembers.length === 0 || (teamMembers | filter:state.filterGroupMembers).length === 0">\n                <td colspan="2" class="text-center text-muted">没有用户组成员。</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="teamMembers" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table2"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/templates.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header id="view-top">\n  <rd-header-title title-text="应用市场列表">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.templates" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>应用</rd-header-content>\n</rd-header>\n\n<div class="row">\n  \x3c!-- stack-form --\x3e\n  <div class="col-sm-12" ng-if="state.selectedTemplate && (state.selectedTemplate.Type === 2 || state.selectedTemplate.Type === 3)">\n    <rd-widget>\n      <rd-widget-custom-header icon="state.selectedTemplate.Logo" title-text="state.selectedTemplate.Title"></rd-widget-custom-header>\n      <rd-widget-body classes="padding">\n\n        <form class="form-horizontal">\n          \x3c!-- description --\x3e\n          <div ng-if="state.selectedTemplate.Note">\n            <div class="col-sm-12 form-section-title">\n              提示\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <div class="template-note" ng-if="state.selectedTemplate.Note" ng-bind-html="state.selectedTemplate.Note"></div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !description --\x3e\n          <div class="col-sm-12 form-section-title">\n            配置\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-2 control-label text-left">名称</label>\n            <div class="col-sm-10">\n              <input type="text" name="container_name" class="form-control" ng-model="formValues.name" placeholder="例如 myStack" required>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- env --\x3e\n          <div ng-repeat="var in state.selectedTemplate.Env" ng-if="!var.preset || var.select" class="form-group">\n            <label for="field_{{ $index }}" class="col-sm-2 control-label text-left">\n              {{ var.label }}\n              <portainer-tooltip ng-if="var.description" position="bottom" message="{{ var.description }}"></portainer-tooltip>\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-if="!var.select" ng-model="var.value" id="field_{{ $index }}">\n              <select class="form-control" ng-if="var.select" ng-model="var.value" id="field_{{ $index }}">\n                <option selected disabled hidden value="">选择参数</option>\n                <option ng-repeat="choice in var.select" value="{{ choice.value }}">{{ choice.text }}</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !env --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.name" ng-click="createTemplate()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">部署堆栈</span>\n                <span ng-show="state.actionInProgress">正在部署...</span>\n              </button>\n              <button type="button" class="btn btn-sm btn-default" ng-click="unselectTemplate(state.selectedTemplate)">隐藏</button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  \x3c!-- !stack-form --\x3e\n  \x3c!-- container-form --\x3e\n  <div class="col-sm-12" ng-if="state.selectedTemplate && state.selectedTemplate.Type === 1">\n    <rd-widget>\n      <rd-widget-custom-header icon="state.selectedTemplate.Logo" title-text="state.selectedTemplate.Image"></rd-widget-custom-header>\n      <rd-widget-body classes="padding">\n\n        <form class="form-horizontal">\n          \x3c!-- description --\x3e\n          <div ng-if="state.selectedTemplate.Note">\n            <div class="col-sm-12 form-section-title">\n              提示\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <div class="template-note" ng-if="state.selectedTemplate.Note" ng-bind-html="state.selectedTemplate.Note"></div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !description --\x3e\n          <div class="col-sm-12 form-section-title">\n            配置\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-2 control-label text-left">名称</label>\n            <div class="col-sm-10">\n              <input type="text" name="container_name" class="form-control" ng-model="formValues.name" placeholder="例如 web (optional)">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- network-input --\x3e\n          <div class="form-group">\n            <label for="container_network" class="col-sm-2 control-label text-left">网络</label>\n            <div class="col-sm-10">\n              <select class="form-control" ng-options="net.Name for net in availableNetworks | orderBy: \'Name\'" ng-model="formValues.network">\n                <option disabled hidden value="">选择一个网络</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !network-input --\x3e\n          \x3c!-- env --\x3e\n          <div ng-repeat="var in state.selectedTemplate.Env" ng-if="!var.preset || var.select" class="form-group">\n            <label for="field_{{ $index }}" class="col-sm-2 control-label text-left">\n              {{ var.label }}\n              <portainer-tooltip ng-if="var.description" position="bottom" message="{{ var.description }}"></portainer-tooltip>\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-if="!var.select" ng-model="var.value" id="field_{{ $index }}">\n              <select class="form-control" ng-if="var.select" ng-model="var.value" id="field_{{ $index }}">\n                <option selected disabled hidden value="">选择参数</option>\n                <option ng-repeat="choice in var.select" value="{{ choice.value }}">{{ choice.text }}</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !env --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <a class="small interactive" ng-if="!state.showAdvancedOptions" ng-click="state.showAdvancedOptions = true;">\n                <i class="fa fa-plus space-right" aria-hidden="true"></i> 显示高级选项\n              </a>\n              <a class="small interactive" ng-if="state.showAdvancedOptions" ng-click="state.showAdvancedOptions = false;">\n                <i class="fa fa-minus space-right" aria-hidden="true"></i> 隐藏高级选项\n              </a>\n            </div>\n          </div>\n          <div ng-if="state.showAdvancedOptions">\n            \x3c!-- port-mapping --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">端口映射</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的端口\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px" ng-if="state.selectedTemplate.Ports.length > 0">\n                <span class="small text-muted">如果您将主机端口留空，Portainer将自动分配一个端口。</span>\n              </div>\n              \x3c!-- !port-mapping --\x3e\n              \x3c!-- port-mapping-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="portBinding in state.selectedTemplate.Ports" style="margin-top: 2px;">\n                    \x3c!-- host-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">主机</span>\n                      <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="例如 80 或 1.2.3.4:80 (optional)">\n                    </div>\n                    \x3c!-- !host-port --\x3e\n                    <span style="margin: 0 10px 0 10px;">\n                      <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                    </span>\n                    \x3c!-- container-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">容器</span>\n                      <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="例如 80">\n                    </div>\n                    \x3c!-- !container-port --\x3e\n                    \x3c!-- protocol-actions --\x3e\n                    <div class="input-group col-sm-3 input-group-sm">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !protocol-actions --\x3e\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n            \x3c!-- volume-mapping --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">存储卷映射</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的存储卷\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px" ng-if="state.selectedTemplate.Volumes.length > 0">\n                <span class="small text-muted">使用<b>auto</b>选项时Portainer将自动创建和映射本存储卷。</span>\n              </div>\n              <div ng-repeat="volume in state.selectedTemplate.Volumes">\n                <div class="col-sm-12" style="margin-top: 10px;">\n                  \x3c!-- volume-line1 --\x3e\n                  <div class="col-sm-12 form-inline">\n                    \x3c!-- container-path --\x3e\n                    <div class="input-group input-group-sm col-sm-6">\n                      <span class="input-group-addon">容器</span>\n                      <input type="text" class="form-control" ng-model="volume.containerPath" placeholder="例如 /path/in/container">\n                    </div>\n                    \x3c!-- !container-path --\x3e\n                    \x3c!-- volume-type --\x3e\n                    <div class="input-group col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'auto\'" ng-click="volume.bind = \'\'">自动</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.bind = \'\'">存储卷</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.bind = \'\'" ng-if="isAdmin || allowBindMounts">绑定</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !volume-type --\x3e\n                  </div>\n                  \x3c!-- !volume-line1 --\x3e\n                  \x3c!-- volume-line2 --\x3e\n                  <div class="col-sm-12 form-inline" style="margin-top: 5px;" ng-if="volume.type !== \'auto\'">\n                    <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n                    \x3c!-- volume --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                      <span class="input-group-addon">存储卷</span>\n                      <select class="form-control" ng-model="volume.bind">\n                        <option selected disabled hidden value="">选择一个存储卷</option>\n                        <option ng-repeat="vol in availableVolumes" ng-value="vol.Name">{{ vol.Name|truncate:30}}</option>\n                      </select>\n                    </div>\n                    \x3c!-- !volume --\x3e\n                    \x3c!-- bind --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                      <span class="input-group-addon">主机</span>\n                      <input type="text" class="form-control" ng-model="volume.bind" placeholder="例如 /path/on/host">\n                    </div>\n                    \x3c!-- !bind --\x3e\n                    \x3c!-- read-only --\x3e\n                    <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="false">可写</label>\n                        <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="true">只读</label>\n                      </div>\n                    </div>\n                    \x3c!-- !read-only --\x3e\n                  </div>\n                  \x3c!-- !volume-line2 --\x3e\n                </div>\n              </div>\n            </div>\n            \x3c!-- !volume-mapping --\x3e\n            \x3c!-- extra-host --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Hosts文件条目</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraHost()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加额外的条目\n                </span>\n              </div>\n              \x3c!-- extra-host-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="(idx, host) in state.selectedTemplate.Hosts track by $index" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="state.selectedTemplate.Hosts[idx]" placeholder="例如 host:IP">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraHost($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !extra-host --\x3e\n            \x3c!-- labels --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">标签</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n                </span>\n              </div>\n                \x3c!-- labels-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in state.selectedTemplate.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">名称</span>\n                      <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">参数值</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n                \x3c!-- !labels-input-list --\x3e\n            </div>\n            \x3c!-- !labels --\x3e\n            \x3c!-- hostname --\x3e\n            <div class="form-group">\n              <label for="container_hostname" class="col-sm-2 control-label text-left">主机名</label>\n              <div class="col-sm-10">\n                <input type="text" name="container_hostname" class="form-control" ng-model="state.selectedTemplate.Hostname" placeholder="留空使用docker默认值">\n              </div>\n            </div>\n            \x3c!-- !hostname --\x3e\n          </div>\n          \x3c!-- !advanced-options --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.network" ng-click="createTemplate()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">部署容器</span>\n                <span ng-show="state.actionInProgress">正在部署...</span>\n              </button>\n              <button type="button" class="btn btn-sm btn-default" ng-click="unselectTemplate(state.selectedTemplate)">隐藏</button>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  \x3c!-- container-form --\x3e\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <template-list ng-if="templates"\n      title-text="应用模板" title-icon="fa-rocket"\n      templates="templates" table-key="templates"\n      select-action="selectTemplate"\n      delete-action="deleteTemplate"\n      show-add-action="state.templateManagement && isAdmin"\n      show-update-action="state.templateManagement && isAdmin"\n      show-delete-action="state.templateManagement && isAdmin"\n      show-swarm-stacks="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\' && applicationState.endpoint.apiVersion >= 1.25"\n    ></template-list>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/edit/template.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="模板详情">\n    <a data-toggle="tooltip" title-text="刷新" ui-sref="portainer.templates.template({id: template.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.templates">模板</a> &gt; {{ ::template.Title }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <template-form\n          model="template"\n          categories="categories"\n          networks="networks"\n          form-action="update"\n          show-type-selector="false"\n          form-action-label="更新模板"\n          action-in-progress="state.actionInProgress"\n        ></template-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/portainer/views/templates/create/createtemplate.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="创建模板"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.templates">模板</a> &gt; 添加模板\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <template-form\n          model="model"\n          categories="categories"\n          networks="networks"\n          form-action="create"\n          show-type-selector="true"\n          form-action-label="创建模板"\n          action-in-progress="state.actionInProgress"\n        ></template-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a={"./__module.js":265,"./agent/_module.js":269,"./agent/components/file-uploader/file-uploader-controller.js":443,"./agent/components/file-uploader/file-uploader.js":444,"./agent/components/files-datatable/files-datatable.js":446,"./agent/components/host-browser/host-browser-controller.js":448,"./agent/components/host-browser/host-browser.js":453,"./agent/components/node-selector/node-selector.js":455,"./agent/components/node-selector/nodeSelectorController.js":457,"./agent/components/volume-browser/volume-browser.js":458,"./agent/components/volume-browser/volumeBrowserController.js":460,"./agent/models/agent.js":237,"./agent/rest/agent.js":461,"./agent/rest/browse.js":462,"./agent/rest/host.js":463,"./agent/rest/ping.js":464,"./agent/rest/response/browse.js":136,"./agent/rest/v1/agent.js":467,"./agent/rest/v1/browse.js":468,"./agent/services/agentService.js":469,"./agent/services/hostBrowserService.js":470,"./agent/services/pingService.js":471,"./agent/services/volumeBrowserService.js":472,"./app.js":473,"./azure/_module.js":270,"./azure/components/azure-endpoint-config/azure-endpoint-config.js":474,"./azure/components/azure-sidebar-content/azure-sidebar-content.js":476,"./azure/components/datatables/containergroups-datatable/containerGroupsDatatable.js":478,"./azure/models/container_group.js":106,"./azure/models/location.js":238,"./azure/models/provider.js":239,"./azure/models/resource_group.js":240,"./azure/models/subscription.js":241,"./azure/rest/azure.js":480,"./azure/rest/container_group.js":481,"./azure/rest/location.js":482,"./azure/rest/provider.js":483,"./azure/rest/resource_group.js":484,"./azure/rest/subscription.js":485,"./azure/services/azureService.js":486,"./azure/services/containerGroupService.js":487,"./azure/services/locationService.js":488,"./azure/services/providerService.js":489,"./azure/services/resourceGroupService.js":490,"./azure/services/subscriptionService.js":491,"./azure/views/containerinstances/containerInstancesController.js":492,"./azure/views/containerinstances/create/createContainerInstanceController.js":493,"./azure/views/dashboard/dashboardController.js":494,"./config.js":495,"./constants.js":530,"./docker/__module.js":271,"./docker/components/container-capabilities/container-capabilities.js":531,"./docker/components/container-quick-actions/containerQuickActions.js":533,"./docker/components/container-restart-policy/container-restart-policy-controller.js":535,"./docker/components/container-restart-policy/container-restart-policy.js":536,"./docker/components/dashboard-cluster-agent-info/dashboard-cluster-agent-info.js":538,"./docker/components/dashboard-cluster-agent-info/dashboardClusterAgentInfoController.js":540,"./docker/components/datatables/configs-datatable/configsDatatable.js":541,"./docker/components/datatables/container-networks-datatable/containerNetworksDatatable.js":543,"./docker/components/datatables/container-processes-datatable/containerProcessesDatatable.js":545,"./docker/components/datatables/containers-datatable/actions/containersDatatableActions.js":547,"./docker/components/datatables/containers-datatable/actions/containersDatatableActionsController.js":549,"./docker/components/datatables/containers-datatable/containersDatatable.js":550,"./docker/components/datatables/containers-datatable/containersDatatableController.js":552,"./docker/components/datatables/events-datatable/eventsDatatable.js":553,"./docker/components/datatables/host-jobs-datatable/jobsDatatable.js":555,"./docker/components/datatables/host-jobs-datatable/jobsDatatableController.js":557,"./docker/components/datatables/images-datatable/imagesDatatable.js":558,"./docker/components/datatables/images-datatable/imagesDatatableController.js":560,"./docker/components/datatables/macvlan-nodes-datatable/macvlanNodesDatatable.js":561,"./docker/components/datatables/networks-datatable/networksDatatable.js":563,"./docker/components/datatables/networks-datatable/networksDatatableController.js":565,"./docker/components/datatables/node-tasks-datatable/nodeTasksDatatable.js":568,"./docker/components/datatables/nodes-datatable/nodesDatatable.js":570,"./docker/components/datatables/secrets-datatable/secretsDatatable.js":572,"./docker/components/datatables/service-tasks-datatable/serviceTasksDatatable.js":574,"./docker/components/datatables/service-tasks-datatable/serviceTasksDatatableController.js":576,"./docker/components/datatables/services-datatable/actions/servicesDatatableActions.js":577,"./docker/components/datatables/services-datatable/actions/servicesDatatableActionsController.js":579,"./docker/components/datatables/services-datatable/servicesDatatable.js":580,"./docker/components/datatables/services-datatable/servicesDatatableController.js":582,"./docker/components/datatables/tasks-datatable/tasksDatatable.js":583,"./docker/components/datatables/tasks-datatable/tasksDatatableController.js":585,"./docker/components/datatables/volumes-datatable/volumesDatatable.js":586,"./docker/components/datatables/volumes-datatable/volumesDatatableController.js":588,"./docker/components/dockerSidebarContent/docker-sidebar-content.js":589,"./docker/components/host-overview/host-overview.js":591,"./docker/components/host-view-panels/devices-panel/devices-panel.js":593,"./docker/components/host-view-panels/disks-panel/disks-panel.js":595,"./docker/components/host-view-panels/engine-details-panel/engine-details-panel.js":597,"./docker/components/host-view-panels/host-details-panel/host-details-panel.js":599,"./docker/components/host-view-panels/node-availability-select/node-availability-select-controller.js":601,"./docker/components/host-view-panels/node-availability-select/node-availability-select.js":602,"./docker/components/host-view-panels/node-labels-table/node-labels-table-controller.js":604,"./docker/components/host-view-panels/node-labels-table/node-labels-table.js":605,"./docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel-controller.js":607,"./docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel.js":610,"./docker/components/imageRegistry/por-image-registry.js":612,"./docker/components/imageRegistry/porImageRegistryController.js":614,"./docker/components/log-viewer/log-viewer.js":615,"./docker/components/log-viewer/logViewerController.js":617,"./docker/components/network-macvlan-form/network-macvlan-form.js":618,"./docker/components/network-macvlan-form/networkMacvlanFormController.js":620,"./docker/components/network-macvlan-form/networkMacvlanFormModel.js":242,"./docker/components/volumesNFSForm/volumes-nfs-form.js":621,"./docker/components/volumesNFSForm/volumesNFSFormModel.js":243,"./docker/filters/filters.js":623,"./docker/helpers/configHelper.js":626,"./docker/helpers/constraintsHelper.js":627,"./docker/helpers/containerHelper.js":628,"./docker/helpers/imageHelper.js":629,"./docker/helpers/infoHelper.js":630,"./docker/helpers/labelHelper.js":631,"./docker/helpers/logHelper.js":632,"./docker/helpers/nodeHelper.js":633,"./docker/helpers/secretHelper.js":634,"./docker/helpers/serviceHelper.js":635,"./docker/helpers/taskHelper.js":636,"./docker/helpers/volumeHelper.js":637,"./docker/interceptors/containersInterceptor.js":638,"./docker/interceptors/imagesInterceptor.js":639,"./docker/interceptors/infoInterceptor.js":640,"./docker/interceptors/networksInterceptor.js":641,"./docker/interceptors/versionInterceptor.js":642,"./docker/interceptors/volumesInterceptor.js":643,"./docker/models/config.js":179,"./docker/models/container.js":61,"./docker/models/containerCapabilities.js":119,"./docker/models/event.js":244,"./docker/models/image.js":88,"./docker/models/imageDetails.js":245,"./docker/models/imageLayer.js":246,"./docker/models/network.js":180,"./docker/models/node.js":181,"./docker/models/plugin.js":247,"./docker/models/secret.js":182,"./docker/models/service.js":183,"./docker/models/swarm.js":248,"./docker/models/task.js":184,"./docker/models/volume.js":140,"./docker/rest/build.js":646,"./docker/rest/commit.js":647,"./docker/rest/config.js":648,"./docker/rest/container.js":649,"./docker/rest/exec.js":650,"./docker/rest/image.js":651,"./docker/rest/network.js":652,"./docker/rest/node.js":653,"./docker/rest/plugin.js":654,"./docker/rest/response/handlers.js":9,"./docker/rest/response/image.js":249,"./docker/rest/secret.js":655,"./docker/rest/service.js":656,"./docker/rest/swarm.js":657,"./docker/rest/system.js":658,"./docker/rest/systemEndpoint.js":659,"./docker/rest/task.js":660,"./docker/rest/volume.js":661,"./docker/services/buildService.js":662,"./docker/services/configService.js":663,"./docker/services/containerService.js":664,"./docker/services/execService.js":665,"./docker/services/imageService.js":666,"./docker/services/networkService.js":667,"./docker/services/nodeService.js":668,"./docker/services/pluginService.js":669,"./docker/services/secretService.js":670,"./docker/services/serviceService.js":671,"./docker/services/swarmService.js":672,"./docker/services/systemService.js":673,"./docker/services/taskService.js":674,"./docker/services/volumeService.js":675,"./docker/views/configs/configsController.js":676,"./docker/views/configs/create/createConfigController.js":688,"./docker/views/configs/edit/configController.js":689,"./docker/views/containers/console/containerConsoleController.js":690,"./docker/views/containers/containersController.js":691,"./docker/views/containers/create/createContainerController.js":692,"./docker/views/containers/edit/containerController.js":693,"./docker/views/containers/inspect/containerInspectController.js":694,"./docker/views/containers/logs/containerLogsController.js":695,"./docker/views/containers/stats/containerStatsController.js":696,"./docker/views/dashboard/dashboardController.js":697,"./docker/views/events/eventsController.js":698,"./docker/views/host/host-browser-view/host-browser-view-controller.js":699,"./docker/views/host/host-browser-view/host-browser-view.js":700,"./docker/views/host/host-job/host-job-controller.js":702,"./docker/views/host/host-job/host-job.js":703,"./docker/views/host/host-view-controller.js":705,"./docker/views/host/host-view.js":706,"./docker/views/images/build/buildImageController.js":708,"./docker/views/images/edit/imageController.js":709,"./docker/views/images/imagesController.js":710,"./docker/views/images/import/importImageController.js":711,"./docker/views/networks/create/createNetworkController.js":712,"./docker/views/networks/edit/networkController.js":713,"./docker/views/networks/networksController.js":714,"./docker/views/nodes/node-browser/node-browser-controller.js":715,"./docker/views/nodes/node-browser/node-browser.js":716,"./docker/views/nodes/node-details/node-details-view-controller.js":718,"./docker/views/nodes/node-details/node-details-view.js":719,"./docker/views/nodes/node-job/node-job-controller.js":721,"./docker/views/nodes/node-job/node-job.js":722,"./docker/views/secrets/create/createSecretController.js":724,"./docker/views/secrets/edit/secretController.js":725,"./docker/views/secrets/secretsController.js":726,"./docker/views/services/create/createServiceController.js":727,"./docker/views/services/edit/serviceController.js":732,"./docker/views/services/logs/serviceLogsController.js":750,"./docker/views/services/servicesController.js":751,"./docker/views/swarm/swarmController.js":752,"./docker/views/swarm/visualizer/swarmVisualizerController.js":753,"./docker/views/tasks/edit/taskController.js":754,"./docker/views/tasks/logs/taskLogsController.js":755,"./docker/views/volumes/browse/browseVolumeController.js":756,"./docker/views/volumes/create/createVolumeController.js":757,"./docker/views/volumes/edit/volumeController.js":758,"./docker/views/volumes/volumesController.js":759,"./extensions/_module.js":760,"./extensions/oauth/__module.js":761,"./extensions/oauth/components/oauth-providers-selector/oauth-provider-selector-controller.js":762,"./extensions/oauth/components/oauth-providers-selector/oauth-providers-selector.js":763,"./extensions/oauth/components/oauth-settings/oauth-settings-controller.js":765,"./extensions/oauth/components/oauth-settings/oauth-settings.js":766,"./extensions/oauth/services/rest/oauth.js":768,"./extensions/rbac/__module.js":769,"./extensions/rbac/components/access-viewer/accessViewer.js":771,"./extensions/rbac/components/access-viewer/accessViewerController.js":773,"./extensions/rbac/components/access-viewer/datatable/accessViewerDatatable.js":775,"./extensions/rbac/components/roles-datatable/rolesDatatable.js":777,"./extensions/rbac/directives/authorization.js":779,"./extensions/rbac/directives/disable-authorization.js":780,"./extensions/rbac/models/access.js":120,"./extensions/rbac/models/role.js":250,"./extensions/rbac/rest/role.js":781,"./extensions/rbac/services/roleService.js":782,"./extensions/rbac/views/roles/rolesController.js":783,"./extensions/registry-management/_module.js":784,"./extensions/registry-management/components/registries-repositories-datatable/registryRepositoriesDatatable.js":788,"./extensions/registry-management/components/registries-repository-tags-datatable/registriesRepositoryTagsDatatable.js":790,"./extensions/registry-management/helpers/localRegistryHelper.js":792,"./extensions/registry-management/models/registryRepository.js":252,"./extensions/registry-management/models/repositoryTag.js":251,"./extensions/registry-management/rest/catalog.js":794,"./extensions/registry-management/rest/manifest.js":795,"./extensions/registry-management/rest/tags.js":796,"./extensions/registry-management/rest/transform/linkGetResponse.js":253,"./extensions/registry-management/services/registryAPIService.js":797,"./extensions/registry-management/views/configure/configureRegistryController.js":798,"./extensions/registry-management/views/repositories/edit/registryRepositoryController.js":799,"./extensions/registry-management/views/repositories/registryRepositoriesController.js":800,"./extensions/storidge/__module.js":272,"./extensions/storidge/components/cluster-events-datatable/storidgeClusterEventsDatatable.js":801,"./extensions/storidge/components/drives-datatable/storidgeDrivesDatatable.js":803,"./extensions/storidge/components/drives-datatable/storidgeDrivesDatatableController.js":805,"./extensions/storidge/components/nodes-datatable/storidgeNodesDatatable.js":806,"./extensions/storidge/components/nodes-datatable/storidgeNodesDatatableController.js":808,"./extensions/storidge/components/profileSelector/storidgeProfileSelector.js":809,"./extensions/storidge/components/profileSelector/storidgeProfileSelectorController.js":811,"./extensions/storidge/components/profiles-datatable/storidgeProfilesDatatable.js":812,"./extensions/storidge/components/snapshot-creation/storidgeSnapshotCreation.js":814,"./extensions/storidge/components/snapshot-creation/storidgeSnapshotCreationController.js":816,"./extensions/storidge/components/snapshots-datatable/storidgeSnapshotsDatatable.js":817,"./extensions/storidge/components/snapshots-datatable/storidgeSnapshotsDatatableController.js":819,"./extensions/storidge/components/volume-storidge-info/volumeStoridgeInfo.js":820,"./extensions/storidge/components/volume-storidge-info/volumeStoridgeInfoController.js":822,"./extensions/storidge/filters/filters.js":823,"./extensions/storidge/models/drive.js":192,"./extensions/storidge/models/events.js":254,"./extensions/storidge/models/info.js":255,"./extensions/storidge/models/node.js":193,"./extensions/storidge/models/profile.js":54,"./extensions/storidge/models/snapshot.js":194,"./extensions/storidge/models/volume.js":195,"./extensions/storidge/rest/storidge.js":824,"./extensions/storidge/services/chartService.js":825,"./extensions/storidge/services/clusterService.js":872,"./extensions/storidge/services/driveService.js":873,"./extensions/storidge/services/nodeService.js":874,"./extensions/storidge/services/profileService.js":875,"./extensions/storidge/services/snapshotService.js":876,"./extensions/storidge/services/volumeService.js":877,"./extensions/storidge/views/cluster/clusterController.js":878,"./extensions/storidge/views/drives/drivesController.js":879,"./extensions/storidge/views/drives/inspect/driveController.js":880,"./extensions/storidge/views/monitor/monitorController.js":881,"./extensions/storidge/views/nodes/inspect/nodeController.js":882,"./extensions/storidge/views/profiles/create/createProfileController.js":883,"./extensions/storidge/views/profiles/edit/profileController.js":884,"./extensions/storidge/views/profiles/profilesController.js":885,"./extensions/storidge/views/snapshots/inspect/snapshotController.js":886,"./portainer/__module.js":273,"./portainer/components/access-datatable/accessDatatable.js":887,"./portainer/components/access-datatable/accessDatatableController.js":889,"./portainer/components/access-table/access-table.js":890,"./portainer/components/accessControlForm/por-access-control-form.js":892,"./portainer/components/accessControlForm/porAccessControlFormController.js":894,"./portainer/components/accessControlForm/porAccessControlFormModel.js":24,"./portainer/components/accessControlPanel/por-access-control-panel.js":895,"./portainer/components/accessControlPanel/porAccessControlPanelController.js":897,"./portainer/components/accessManagement/por-access-management.js":898,"./portainer/components/accessManagement/porAccessManagementController.js":900,"./portainer/components/autofocus.js":901,"./portainer/components/buttonSpinner.js":902,"./portainer/components/code-editor/code-editor.js":903,"./portainer/components/code-editor/codeEditorController.js":905,"./portainer/components/datatables/endpoints-datatable/endpointsDatatable.js":906,"./portainer/components/datatables/genericDatatableController.js":908,"./portainer/components/datatables/groups-datatable/groupsDatatable.js":910,"./portainer/components/datatables/registries-datatable/registriesDatatable.js":912,"./portainer/components/datatables/schedule-tasks-datatable/scheduleTasksDatatable.js":914,"./portainer/components/datatables/schedules-datatable/schedulesDatatable.js":916,"./portainer/components/datatables/schedules-datatable/schedulesDatatableController.js":918,"./portainer/components/datatables/stacks-datatable/stacksDatatable.js":919,"./portainer/components/datatables/stacks-datatable/stacksDatatableController.js":921,"./portainer/components/datatables/tags-datatable/tagsDatatable.js":922,"./portainer/components/datatables/teams-datatable/teamsDatatable.js":924,"./portainer/components/datatables/users-datatable/usersDatatable.js":926,"./portainer/components/endpoint-list/endpoint-item/endpoint-item-controller.js":928,"./portainer/components/endpoint-list/endpoint-item/endpointItem.js":929,"./portainer/components/endpoint-list/endpoint-list-controller.js":931,"./portainer/components/endpoint-list/endpoint-list.js":932,"./portainer/components/endpoint-selector/endpoint-selector.js":934,"./portainer/components/endpoint-selector/endpointSelectorController.js":936,"./portainer/components/endpointSecurity/por-endpoint-security.js":937,"./portainer/components/endpointSecurity/porEndpointSecurityController.js":939,"./portainer/components/endpointSecurity/porEndpointSecurityModel.js":137,"./portainer/components/extension-list/extension-item/extension-item.js":940,"./portainer/components/extension-list/extension-item/extensionItemController.js":942,"./portainer/components/extension-list/extension-list.js":943,"./portainer/components/forms/execute-job-form/execute-job-form-controller.js":945,"./portainer/components/forms/execute-job-form/execute-job-form.js":946,"./portainer/components/forms/group-form/group-form.js":948,"./portainer/components/forms/registry-form-azure/registry-form-azure.js":950,"./portainer/components/forms/registry-form-custom/registry-form-custom.js":952,"./portainer/components/forms/registry-form-quay/registry-form-quay.js":954,"./portainer/components/forms/schedule-form/schedule-form.js":956,"./portainer/components/forms/template-form/template-form.js":958,"./portainer/components/group-association-table/group-association-table.js":960,"./portainer/components/header-content.js":962,"./portainer/components/header-title.js":963,"./portainer/components/header.js":964,"./portainer/components/information-panel-offline/informationPanelOffline.js":965,"./portainer/components/information-panel-offline/informationPanelOfflineController.js":967,"./portainer/components/information-panel/information-panel.js":968,"./portainer/components/loading.js":970,"./portainer/components/motd-panel/motd-panel.js":971,"./portainer/components/multi-endpoint-selector/multi-endpoint-selector.js":973,"./portainer/components/multi-endpoint-selector/multiEndpointSelectorController.js":975,"./portainer/components/onEnterKey.js":976,"./portainer/components/product-list/product-item/product-item.js":977,"./portainer/components/product-list/product-list.js":981,"./portainer/components/slider/slider.js":983,"./portainer/components/slider/sliderController.js":985,"./portainer/components/stack-duplication-form/stack-duplication-form-controller.js":986,"./portainer/components/stack-duplication-form/stack-duplication-form.js":987,"./portainer/components/tag-selector/tag-selector.js":989,"./portainer/components/tag-selector/tagSelectorController.js":991,"./portainer/components/template-list/template-item/template-item.js":992,"./portainer/components/template-list/template-list-controller.js":994,"./portainer/components/template-list/template-list.js":995,"./portainer/components/template-widget.js":997,"./portainer/components/tooltip.js":998,"./portainer/components/widget-body.js":999,"./portainer/components/widget-custom-header.js":1e3,"./portainer/components/widget-footer.js":1001,"./portainer/components/widget-header.js":1002,"./portainer/components/widget-taskbar.js":1003,"./portainer/components/widget.js":1004,"./portainer/filters/filters.js":1005,"./portainer/helpers/endpointHelper.js":1006,"./portainer/helpers/formHelper.js":1007,"./portainer/helpers/registryHelper.js":1008,"./portainer/helpers/resourceControlHelper.js":1009,"./portainer/helpers/stackHelper.js":1010,"./portainer/helpers/templateHelper.js":1011,"./portainer/helpers/urlHelper.js":1012,"./portainer/helpers/userHelper.js":1015,"./portainer/helpers/webhookHelper.js":1016,"./portainer/interceptors/endpointStatusInterceptor.js":1017,"./portainer/models/access.js":138,"./portainer/models/dockerhub.js":256,"./portainer/models/extension.js":196,"./portainer/models/group.js":89,"./portainer/models/motd.js":257,"./portainer/models/registry.js":62,"./portainer/models/resourceControl.js":25,"./portainer/models/schedule.js":56,"./portainer/models/settings.js":197,"./portainer/models/stack.js":91,"./portainer/models/status.js":258,"./portainer/models/tag.js":259,"./portainer/models/team.js":198,"./portainer/models/teamMembership.js":85,"./portainer/models/template.js":77,"./portainer/models/user.js":199,"./portainer/models/webhook.js":260,"./portainer/rest/auth.js":1018,"./portainer/rest/dockerhub.js":1019,"./portainer/rest/endpoint.js":1020,"./portainer/rest/extension.js":1021,"./portainer/rest/group.js":1022,"./portainer/rest/legacyExtension.js":1023,"./portainer/rest/motd.js":1024,"./portainer/rest/registry.js":1025,"./portainer/rest/resourceControl.js":1026,"./portainer/rest/schedule.js":1027,"./portainer/rest/settings.js":1028,"./portainer/rest/stack.js":1029,"./portainer/rest/status.js":1030,"./portainer/rest/tag.js":1031,"./portainer/rest/team.js":1032,"./portainer/rest/teamMembership.js":1033,"./portainer/rest/template.js":1034,"./portainer/rest/user.js":1035,"./portainer/rest/webhooks.js":1036,"./portainer/services/api/accessService.js":1037,"./portainer/services/api/dockerhubService.js":1038,"./portainer/services/api/endpointService.js":1039,"./portainer/services/api/extensionService.js":1040,"./portainer/services/api/groupService.js":1041,"./portainer/services/api/legacyExtensionService.js":1042,"./portainer/services/api/motdService.js":1043,"./portainer/services/api/registryService.js":1044,"./portainer/services/api/resourceControlService.js":1045,"./portainer/services/api/scheduleService.js":1046,"./portainer/services/api/settingsService.js":1047,"./portainer/services/api/stackService.js":1048,"./portainer/services/api/statusService.js":1049,"./portainer/services/api/tagService.js":1050,"./portainer/services/api/teamMembershipService.js":1051,"./portainer/services/api/teamService.js":1052,"./portainer/services/api/templateService.js":1053,"./portainer/services/api/userService.js":1054,"./portainer/services/api/webhookService.js":1055,"./portainer/services/authentication.js":1056,"./portainer/services/chartService.js":1057,"./portainer/services/codeMirror.js":1058,"./portainer/services/datatableService.js":1088,"./portainer/services/endpointProvider.js":1089,"./portainer/services/fileUpload.js":1090,"./portainer/services/formValidator.js":1091,"./portainer/services/httpRequestHelper.js":1092,"./portainer/services/legacyExtensionManager.js":1093,"./portainer/services/localStorage.js":1094,"./portainer/services/modalService.js":1095,"./portainer/services/notifications.js":1096,"./portainer/services/pagination.js":1097,"./portainer/services/stateManager.js":1098,"./portainer/views/account/accountController.js":1099,"./portainer/views/auth/authController.js":1100,"./portainer/views/endpoints/access/endpointAccessController.js":1101,"./portainer/views/endpoints/create/createEndpointController.js":1102,"./portainer/views/endpoints/edit/endpointController.js":1103,"./portainer/views/endpoints/endpointsController.js":1104,"./portainer/views/extensions/extensionsController.js":1105,"./portainer/views/extensions/inspect/extensionController.js":1106,"./portainer/views/groups/access/groupAccessController.js":1107,"./portainer/views/groups/create/createGroupController.js":1108,"./portainer/views/groups/edit/groupController.js":1109,"./portainer/views/groups/groupsController.js":1110,"./portainer/views/home/homeController.js":1111,"./portainer/views/init/admin/initAdminController.js":1112,"./portainer/views/init/endpoint/initEndpointController.js":1113,"./portainer/views/main/mainController.js":1114,"./portainer/views/registries/access/registryAccessController.js":1115,"./portainer/views/registries/create/createRegistryController.js":1116,"./portainer/views/registries/edit/registryController.js":1117,"./portainer/views/registries/registriesController.js":1118,"./portainer/views/schedules/create/createScheduleController.js":1119,"./portainer/views/schedules/edit/scheduleController.js":1120,"./portainer/views/schedules/schedulesController.js":1121,"./portainer/views/settings/authentication/settingsAuthenticationController.js":1122,"./portainer/views/settings/settingsController.js":1123,"./portainer/views/sidebar/sidebarController.js":1124,"./portainer/views/stacks/create/createStackController.js":1125,"./portainer/views/stacks/edit/stackController.js":1126,"./portainer/views/stacks/stacksController.js":1127,"./portainer/views/support/product/productController.js":1128,"./portainer/views/support/supportController.js":1129,"./portainer/views/tags/tagsController.js":1130,"./portainer/views/teams/edit/teamController.js":1131,"./portainer/views/teams/teamsController.js":1132,"./portainer/views/templates/create/createTemplateController.js":1133,"./portainer/views/templates/edit/templateController.js":1134,"./portainer/views/templates/templatesController.js":1135,"./portainer/views/update-password/updatePasswordController.js":1136,"./portainer/views/users/edit/userController.js":1137,"./portainer/views/users/usersController.js":1138,"./vendors.js":1139};function r(e){var t=i(e);return n(t)}function i(e){var t=a[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}r.keys=function(){return Object.keys(a)},r.resolve=i,e.exports=r,r.id=442},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.agent").controller("FileUploaderController",["$q",function(e){var t=this;t.state={uploadInProgress:!1},t.onFileSelected=function(n){if(!n)return;t.state.uploadInProgress=!0,e.when(t.uploadFile(n)).finally(function(){t.state.uploadInProgress=!1})}}])},function(e,t,n){var a=n(445);angular.module("portainer.agent").component("fileUploader",{templateUrl:a,controller:"FileUploaderController",bindings:{uploadFile:"<onFileSelected"}})},function(e,t){var n="app/agent/components/file-uploader/file-uploader.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<button \n  ngf-select="$ctrl.onFileSelected($file)"\n  class="btn ng-scope"\n  button-spinner="$ctrl.state.uploadInProgress">\n  <i style="margin:0" class="fa fa-upload" ng-if="!$ctrl.state.uploadInProgress"></i>\n</button>\n')}]),e.exports=n},function(e,t,n){var a=n(447);angular.module("portainer.agent").component("filesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",isRoot:"<",goToParent:"&",browse:"&",rename:"&",download:"&",delete:"&",isUploadAllowed:"<",onFileSelectedForUpload:"<"}})},function(e,t){var n="app/agent/components/files-datatable/files-datatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-header icon="{{$ctrl.titleIcon}}" title-text="{{ $ctrl.titleText }}">\n       <file-uploader authorization="DockerAgentBrowsePut" ng-if="$ctrl.isUploadAllowed" on-file-selected="$ctrl.onFileSelectedForUpload">\n       </file-uploader>\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Size\')">\n                  大小\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'ModTime\')">\n                  最后修改时间\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ModTime\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ModTime\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                操作\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="!$ctrl.isRoot">\n              <td colspan="4">\n                <a ng-click="$ctrl.goToParent()"><i class="fa fa-level-up-alt space-right"></i>回到\n                  父级目录</a>\n              </td>\n            </tr>\n            <tr ng-repeat="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder))">\n              <td>\n                <span ng-if="item.edit">\n                  <input class="input-sm" type="text" ng-model="item.newName"\n                    on-enter-key="$ctrl.rename({name: item.Name, newName: item.newName}); item.edit = false;"\n                    auto-focus />\n                  <a class="interactive" ng-click="item.edit = false;"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="$ctrl.rename({name: item.Name, newName: item.newName}); item.edit = false;"><i\n                      class="fa fa-check-square"></i></a>\n                </span>\n                <span ng-if="!item.edit && item.Dir">\n                  <a ng-click="$ctrl.browse({name: item.Name})"><i class="fa fa-folder space-right"\n                      aria-hidden="true"></i>{{ item.Name }}</a>\n                </span>\n                <span ng-if="!item.edit && !item.Dir">\n                  <i class="fa fa-file space-right" aria-hidden="true"></i>{{\n                  item.Name }}\n                </span>\n              </td>\n              <td>{{ item.Size | humansize }}</td>\n              <td>\n                {{ item.ModTime | getisodatefromtimestamp }}\n              </td>\n              <td>\n                <btn authorization="DockerAgentBrowseGet" class="btn btn-xs btn-primary space-right" ng-click="$ctrl.download({ name: item.Name })"\n                  ng-if="!item.Dir">\n                  <i class="fa fa-download" aria-hidden="true"></i> 下载\n                </btn>\n                <btn authorization="DockerAgentBrowseRename" class="btn btn-xs btn-primary space-right" ng-click="item.newName = item.Name; item.edit = true">\n                  <i class="fa fa-edit" aria-hidden="true"></i> 重命名\n                </btn>\n                <btn authorization="DockerAgentBrowseDelete" class="btn btn-xs btn-danger" ng-click="$ctrl.delete({ name: item.Name })">\n                  <i class="fa fa-trash" aria-hidden="true"></i> 删除\n                </btn>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">没有可用的文件。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(276),n(42),n(451);var a=n(170),r=n(86),i=n(50);angular.module("portainer.agent").controller("HostBrowserController",["HostBrowserService","Notifications","FileSaver","ModalService",function(e,t,n,o){var s=this,l="/host";function c(e){e=e||s.state.path;var t=new RegExp("^"+l+"/?");return e.replace(t,"/")}function d(n){e.ls(n).then(function(e){s.state.path=n,s.files=e}).catch(function(e){t.error("失败",e,"无法预览")})}function p(e,t){return e.lastIndexOf("/")===e.length-1?e+t:e+"/"+t}s.state={path:l},s.goToParent=function(){d(function(e){if(e===l)return l;var t=Object(i.a)(e,"/");return Object(r.a)(Object(a.a)(t,0,t.length-1),"/")}(this.state.path))},s.browse=function(e){d(p(s.state.path,e))},s.renameFile=function(n,a){var r=p(s.state.path,n),i=p(s.state.path,a);e.rename(r,i).then(function(){return t.success("已成功重命名文件",c(i)),e.ls(s.state.path)}).then(function(e){s.files=e}).catch(function(e){t.error("失败",e,"无法重命名文件")})},s.downloadFile=function(a){var r=p(s.state.path,a);e.get(r).then(function(e){var t=new Blob([e.file],{type:"text/plain;charset=utf-8"});n.saveAs(t,a)}).catch(function(e){t.error("失败",e,"无法下载文件")})},s.deleteFile=function(n){var a=p(s.state.path,n);o.confirmDeletion("您确定要删除这个文件 "+c(a)+" ?",function(n){var r;if(n)return r=a,void e.delete(r).then(function(){return t.success("已成功删除文件",c(r)),e.ls(s.state.path)}).then(function(e){s.files=e}).catch(function(e){t.error("失败",e,"无法删除文件")})})},s.isRoot=function(){return s.state.path===l},s.onFileSelectedForUpload=function(n){e.upload(s.state.path,n).then(function(){d(s.state.path)}).catch(function(e){t.error("失败",e,"无法上传文件")})},s.$onInit=function(){d(l)},s.getRelativePath=c}])},,,,,function(e,t,n){var a=n(454);angular.module("portainer.agent").component("hostBrowser",{controller:"HostBrowserController",templateUrl:a,bindings:{}})},function(e,t){var n="app/agent/components/host-browser/host-browser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<files-datatable\n  title-text="主机浏览器 - {{$ctrl.getRelativePath()}}" title-icon="fa-file"\n  dataset="$ctrl.files" table-key="host_browser"\n  order-by="Dir"\n  is-root="$ctrl.isRoot()"\n  go-to-parent="$ctrl.goToParent()"\n  browse="$ctrl.browse(name)"\n  rename="$ctrl.renameFile(name, newName)"\n  download="$ctrl.downloadFile(name)"\n  delete="$ctrl.deleteFile(name)"\n\n  is-upload-allowed="true"\n  on-file-selected-for-upload="$ctrl.onFileSelectedForUpload"\n>\n\n</files-datatable>\n')}]),e.exports=n},function(e,t,n){var a=n(456);angular.module("portainer.agent").component("nodeSelector",{templateUrl:a,controller:"NodeSelectorController",bindings:{model:"="}})},function(e,t){var n="app/agent/components/node-selector/nodeSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="form-group">\n  <label for="target_node" class="col-sm-1 control-label text-left">节点</label>\n  <div class="col-sm-11">\n    <select class="form-control"\n      ng-model="$ctrl.model" ng-options="agent.NodeName as agent.NodeName for agent in $ctrl.agents"\n      ></select>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.agent").controller("NodeSelectorController",["AgentService","Notifications",function(e,t){var n=this;this.$onInit=function(){e.agents().then(function(e){n.agents=e,n.model||(n.model=e[0].NodeName)}).catch(function(e){t.error("失败",e,"无法载入代理")})}}])},function(e,t,n){var a=n(459);angular.module("portainer.agent").component("volumeBrowser",{templateUrl:a,controller:"VolumeBrowserController",bindings:{volumeId:"<",nodeName:"<",isUploadEnabled:"<"}})},function(e,t){var n="app/agent/components/volume-browser/volumeBrowser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<files-datatable\n  title-text="存储卷浏览器" title-icon="fa-file"\n  dataset="$ctrl.files" table-key="volume_browser"\n  order-by="Dir"\n  is-root="$ctrl.state.path === \'/\'"\n  go-to-parent="$ctrl.up()"\n  browse="$ctrl.browse(name)"\n  rename="$ctrl.rename(name, newName)"\n  download="$ctrl.download(name)"\n  delete="$ctrl.delete(name)"\n\n  is-upload-allowed="$ctrl.isUploadEnabled"\n  on-file-selected-for-upload="$ctrl.onFileSelectedForUpload"\n></files-datatable>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(276);var a=n(170),r=n(86),i=n(50);angular.module("portainer.agent").controller("VolumeBrowserController",["HttpRequestHelper","VolumeBrowserService","FileSaver","Blob","ModalService","Notifications",function(e,t,n,o,s,l){var c=this;function d(e){t.ls(c.volumeId,e).then(function(t){c.state.path=e,c.files=t}).catch(function(e){l.error("失败",e,"无法浏览存储卷")})}this.state={path:"/"},this.rename=function(e,n){var a="/"===this.state.path?e:this.state.path+"/"+e,r="/"===this.state.path?n:this.state.path+"/"+n;t.rename(this.volumeId,a,r).then(function(){return l.success("已成功重命名文件",r),t.ls(c.volumeId,c.state.path)}).then(function(e){c.files=e}).catch(function(e){l.error("失败",e,"无法重命名文件")})},this.delete=function(e){var n="/"===this.state.path?e:this.state.path+"/"+e;s.confirmDeletion("您确定要删除 "+n+" ?",function(e){var a;e&&(a=n,t.delete(c.volumeId,a).then(function(){return l.success("已成功删除文件",a),t.ls(c.volumeId,c.state.path)}).then(function(e){c.files=e}).catch(function(e){l.error("失败",e,"无法删除文件")}))})},this.download=function(e){var a="/"===this.state.path?e:this.state.path+"/"+e;t.get(this.volumeId,a).then(function(t){var a=new o([t.file],{type:"text/plain;charset=utf-8"});n.saveAs(a,e)}).catch(function(e){l.error("失败",e,"无法下载文件")})},this.up=function(){d(function(e){if(0===e.lastIndexOf("/"))return"/";var t=Object(i.a)(e,"/");return Object(r.a)(Object(a.a)(t,0,t.length-1),"/")}(this.state.path))},this.browse=function(e){d(function(e,t){if("/"===e)return e+t;return e+"/"+t}(this.state.path,e))},this.onFileSelectedForUpload=function(e){t.upload(c.state.path,e,c.volumeId).then(function(){d(c.state.path)}).catch(function(e){l.error("失败",e,"无法上传文件")})},this.$onInit=function(){e.setPortainerAgentTargetHeader(this.nodeName),t.ls(this.volumeId,this.state.path).then(function(e){c.files=e}).catch(function(e){l.error("失败",e,"无法浏览存储卷")})}}])},function(e,t){angular.module("portainer.agent").factory("Agent",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,a){"use strict";return e(t+"/:endpointId/docker/v:version/agents",{endpointId:n.endpointID,version:a.getAgentApiVersion},{query:{method:"GET",isArray:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(136);angular.module("portainer.agent").factory("Browse",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,r){return e(t+"/:endpointId/docker/v:version/browse/:action",{endpointId:n.endpointID,version:r.getAgentApiVersion},{ls:{method:"GET",isArray:!0,params:{action:"ls"}},get:{method:"GET",params:{action:"get"},transformResponse:a.browseGetResponse},delete:{method:"DELETE",params:{action:"delete"}},rename:{method:"PUT",params:{action:"rename"}}})}])},function(e,t){angular.module("portainer.agent").factory("Host",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","StateManager",function(e,t,n,a){"use strict";return e(t+"/:endpointId/docker/v:version/host/:action",{endpointId:n.endpointID,version:a.getAgentApiVersion},{info:{method:"GET",params:{action:"info"}}})}])},function(e,t,n){"use strict";n.r(t);n(465);angular.module("portainer.agent").factory("AgentPing",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","$q",function(e,t,n,a){return e(t+"/:endpointId/docker/ping",{endpointId:n.endpointID},{ping:{method:"GET",interceptor:{response:function(e){var t=e.resource,n=e.headers("Portainer-Agent-Api-Version")||1;return t.version=Number(n),t},responseError:function(e){return 404===e.status?{version:1}:a.reject(e)}}}})}])},,,function(e,t){angular.module("portainer.agent").factory("AgentVersion1",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/agents",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(136);angular.module("portainer.agent").factory("BrowseVersion1",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/browse/:volumeID/:action",{endpointId:n.endpointID},{ls:{method:"GET",isArray:!0,params:{action:"ls"}},get:{method:"GET",params:{action:"get"},transformResponse:a.browseGetResponse},delete:{method:"DELETE",params:{action:"delete"}},rename:{method:"PUT",params:{action:"rename"}}})}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(237);angular.module("portainer.agent").factory("AgentService",["$q","Agent","AgentVersion1","HttpRequestHelper","Host","StateManager",function(e,t,n,r,i,o){var s={};return s.agents=function(){var r=e.defer(),i=o.getState().endpoint.agentApiVersion;return(i>1?t:n).query({version:i}).$promise.then(function(e){var t=e.map(function(e){return new a.AgentViewModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索代理",err:e})}),r.promise},s.hostInfo=function(e){return r.setPortainerAgentTargetHeader(e),i.info().$promise},s}])},function(e,t){angular.module("portainer.agent").factory("HostBrowserService",["Browse","Upload","API_ENDPOINT_ENDPOINTS","EndpointProvider","$q","StateManager",function(e,t,n,a,r,i){var o={};return o.ls=function(t){return e.ls({path:t}).$promise},o.get=function(t){return e.get({path:t}).$promise},o.delete=function(t){return e.delete({path:t}).$promise},o.rename=function(t,n){var a={CurrentFilePath:t,NewFilePath:n};return e.rename({},a).$promise},o.upload=function(e,o,s){var l=r.defer(),c=i.getAgentApiVersion(),d=n+"/"+a.endpointID()+"/docker"+(c>1?"/v"+c:"")+"/browse/put";return t.upload({url:d,data:{file:o,Path:e}}).then(l.resolve,l.reject,s),l.promise},o}])},function(e,t){angular.module("portainer.agent").service("AgentPingService",["AgentPing",function(e){var t={};return t.ping=function(){return e.ping().$promise},t}])},function(e,t){angular.module("portainer.agent").factory("VolumeBrowserService",["StateManager","Browse","BrowseVersion1","$q","API_ENDPOINT_ENDPOINTS","EndpointProvider","Upload",function(e,t,n,a,r,i,o){"use strict";var s={};function l(){return e.getState().endpoint.agentApiVersion}function c(){return l()>1?t:n}return s.ls=function(e,t){return c().ls({volumeID:e,path:t,version:l()}).$promise},s.get=function(e,t){return c().get({volumeID:e,path:t,version:l()}).$promise},s.delete=function(e,t){return c().delete({volumeID:e,path:t,version:l()}).$promise},s.rename=function(e,t,n){var a={CurrentFilePath:t,NewFilePath:n};return c().rename({volumeID:e,version:l()},a).$promise},s.upload=function(t,n,s,l){var c=a.defer(),d=e.getAgentApiVersion();if(!(d<2)){var p=r+"/"+i.endpointID()+"/docker/v"+d+"/browse/put?volumeID="+s;return o.upload({url:p,data:{file:n,Path:t}}).then(c.resolve,c.reject,l),c.promise}c.reject("此代理版本不支持上传功能")},s}])},function(e,t,n){"use strict";n.r(t);var a=n(13);angular.module("portainer").run(["$rootScope","$state","Authentication","authManager","StateManager","EndpointProvider","Notifications","Analytics","cfpLoadingBar","$transitions","HttpRequestHelper",function(e,t,n,r,i,o,s,l,c,d,p){o.initialize(),i.initialize().then(function(i){i.application.authentication&&function(e,t,n,r){e.checkAuthOnRefresh(),t.init(),n.$on("unauthenticated",function(e,t){Object(a.a)(t.config.url,"/v2/")||r.go("portainer.auth",{error:"您的会话已过期"})})}(r,n,e,t),i.application.analytics&&function(e,t){e.offline(!1),e.registerScriptTags(),e.registerTrackers(),t.$on("$stateChangeSuccess",function(t,n){e.trackPage(n.url),e.pageView()})}(l,e)}).catch(function(e){s.error("失败",e,"无法检索应用程序设置")}),e.$state=t;var u=c.set;c.set=function(e){e>c.status()&&u.apply(c,arguments)},d.onBefore({to:"docker.**"},function(){p.resetAgentHeaders()})}])},function(e,t,n){var a=n(475);angular.module("portainer.azure").component("azureEndpointConfig",{bindings:{applicationId:"=",tenantId:"=",authenticationKey:"="},templateUrl:a})},function(e,t){var n="app/azure/components/azure-endpoint-config/azureEndpointConfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Azure配置\n  </div>\n  \x3c!-- applicationId-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_appid" class="col-sm-3 col-lg-2 control-label text-left">应用ID</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="azure_credential_appid" ng-model="$ctrl.applicationId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required>\n    </div>\n  </div>\n  \x3c!-- !applicationId-input --\x3e\n  \x3c!-- tenantId-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_tenantid" class="col-sm-3 col-lg-2 control-label text-left">租户ID</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="azure_credential_tenantid" ng-model="$ctrl.tenantId" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" required>\n    </div>\n  </div>\n  \x3c!-- !tenantId-input --\x3e\n  \x3c!-- authenticationkey-input --\x3e\n  <div class="form-group">\n    <label for="azure_credential_authkey" class="col-sm-3 col-lg-2 control-label text-left">认证密钥</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="azure_credential_authkey" ng-model="$ctrl.authenticationKey" placeholder="cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=" required>\n    </div>\n  </div>\n  \x3c!-- !authenticationkey-input --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(477);angular.module("portainer.azure").component("azureSidebarContent",{templateUrl:a})},function(e,t){var n="app/azure/components/azure-sidebar-content/azureSidebarContent.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<li class="sidebar-list">\n  <a ui-sref="azure.dashboard" ui-sref-active="active">仪表板 <span class="menu-icon fa fa-tachometer-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="azure.containerinstances" ui-sref-active="active">容器实例 <span class="menu-icon fa fa-server fa-fw"></span></a>\n</li>\n')}]),e.exports=n},function(e,t,n){var a=n(479);angular.module("portainer.azure").component("containergroupsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{title:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/azure/components/datatables/containergroups-datatable/containerGroupsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="azure.containerinstances.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加容器\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Location\')">\n                  位置\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Location\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Location\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                已发布的端口\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="azure.containerinstances.container({ id: item.Id })">{{ item.Name | truncate:50 }}</a>\n              </td>\n              <td>{{ item.Location }}</td>\n              <td>\n                <a ng-if="item.Ports.length > 0" ng-repeat="p in item.Ports" class="image-tag" ng-href="http://{{ item.IPAddress }}:{{ p.port }}" target="_blank">\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> :{{ p.port }}\n                </a>\n                <span ng-if="item.Ports.length == 0" >-</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有容器可用。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目:\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.azure").factory("Azure",["$http","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";var a={delete:function(a,r){var i=t+"/"+n.endpointID()+"/azure"+a+"?api-version="+r;return e({method:"DELETE",url:i})}};return a}])},function(e,t){angular.module("portainer.azure").factory("ContainerGroup",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";var a={},r=e(t+"/:endpointId/azure/subscriptions/:subscriptionId/providers/Microsoft.ContainerInstance/containerGroups",{endpointId:n.endpointID,"api-version":"2018-04-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}}),i=e(t+"/:endpointId/azure/subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerInstance/containerGroups/:containerGroupName",{endpointId:n.endpointID,"api-version":"2018-04-01"},{create:{method:"PUT",params:{subscriptionId:"@subscriptionId",resourceGroupName:"@resourceGroupName",containerGroupName:"@containerGroupName"}}});return a.query=r.query,a.create=i.create,a}])},function(e,t){angular.module("portainer.azure").factory("Location",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/locations",{endpointId:n.endpointID,"api-version":"2016-06-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}})}])},function(e,t){angular.module("portainer.azure").factory("Provider",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/providers/:providerNamespace",{endpointId:n.endpointID,"api-version":"2018-02-01"},{get:{method:"GET",params:{subscriptionId:"@subscriptionId",providerNamespace:"@providerNamespace"}}})}])},function(e,t){angular.module("portainer.azure").factory("ResourceGroup",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions/:subscriptionId/resourcegroups",{endpointId:n.endpointID,"api-version":"2018-02-01"},{query:{method:"GET",params:{subscriptionId:"@subscriptionId"}}})}])},function(e,t){angular.module("portainer.azure").factory("Subscription",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/azure/subscriptions",{endpointId:n.endpointID,"api-version":"2016-06-01"},{query:{method:"GET"}})}])},function(e,t,n){"use strict";n.r(t);n(19),n(34),n(1),n(6);angular.module("portainer.azure").factory("AzureService",["$q","Azure","SubscriptionService","ResourceGroupService","ContainerGroupService","ProviderService",function(e,t,n,a,r,i){var o={};function s(t,n){for(var a=e.defer(),r={},i=[],o=0;o<t.length;o++){var s=t[o];i.push(n(s.Id))}return e.all(i).then(function(e){for(var n=0;n<e.length;n++){var i=e[n];r[t[n].Id]=i}a.resolve(r)}).catch(function(e){a.reject({msg:"无法检索资源",err:e})}),a.promise}return o.deleteContainerGroup=function(e){return t.delete(e,"2018-04-01")},o.createContainerGroup=function(e,t,n){return r.create(e,t,n)},o.subscriptions=function(){return n.subscriptions()},o.containerInstanceProvider=function(e){return s(e,i.containerInstanceProvider)},o.resourceGroups=function(e){return s(e,a.resourceGroups)},o.containerGroups=function(e){return s(e,r.containerGroups)},o.aggregate=function(e){var t=[];return Object.keys(e).forEach(function(n){t=t.concat(e[n])}),t},o}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(106);angular.module("portainer.azure").factory("ContainerGroupService",["$q","ContainerGroup",function(e,t){var n={containerGroups:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then(function(e){var t=e.value.map(function(e){return new a.ContainerGroupViewModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索容器组",err:e})}),r.promise},create:function(e,n,r){var i=new a.CreateContainerGroupRequest(e);return t.create({subscriptionId:n,resourceGroupName:r,containerGroupName:e.Name},i).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(238);angular.module("portainer.azure").factory("LocationService",["$q","Location",function(e,t){var n={locations:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then(function(e){var t=e.value.map(function(e){return new a.LocationViewModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索到位置",err:e})}),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(239);angular.module("portainer.azure").factory("ProviderService",["$q","Provider",function(e,t){var n={containerInstanceProvider:function(n){var r=e.defer();return t.get({subscriptionId:n,providerNamespace:"Microsoft.ContainerInstance"}).$promise.then(function(e){var t=new a.ContainerInstanceProviderViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索到资源提供者",err:e})}),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(240);angular.module("portainer.azure").factory("ResourceGroupService",["$q","ResourceGroup",function(e,t){var n={resourceGroups:function(n){var r=e.defer();return t.query({subscriptionId:n}).$promise.then(function(e){var t=e.value.map(function(e){return new a.ResourceGroupViewModel(e,n)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索资源组",err:e})}),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(241);angular.module("portainer.azure").factory("SubscriptionService",["$q","Subscription",function(e,t){var n={subscriptions:function(){var n=e.defer();return t.query({}).$promise.then(function(e){var t=e.value.map(function(e){return new a.SubscriptionViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索订阅",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.azure").controller("AzureContainerInstancesController",["$scope","$state","AzureService","Notifications",function(e,t,n,a){e.deleteAction=function(r){var i=r.length;angular.forEach(r,function(r){n.deleteContainerGroup(r.Id).then(function(){a.success("已成功删除容器组",r.Name);var t=e.containerGroups.indexOf(r);e.containerGroups.splice(t,1)}).catch(function(e){a.error("失败",e,"无法删除容器组")}).finally(function(){0===--i&&t.reload()})})},n.subscriptions().then(function(e){var t=e;return n.containerGroups(t)}).then(function(t){e.containerGroups=n.aggregate(t)}).catch(function(e){a.error("失败",e,"无法加载容器组")})}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(106);angular.module("portainer.azure").controller("AzureCreateContainerInstanceController",["$q","$scope","$state","AzureService","Notifications",function(e,t,n,r,i){var o,s=[],l=[];function c(e,n,a){t.state.selectedResourceGroup=n[e.Id][0],t.resourceGroups=n[e.Id];var r=a[e.Id].Locations;t.model.Location=r[0],t.locations=r}t.state={actionInProgress:!1,selectedSubscription:null,selectedResourceGroup:null},t.changeSubscription=function(){c(t.state.selectedSubscription,s,l)},t.addPortBinding=function(){t.model.Ports.push({host:"",container:"",protocol:"TCP"})},t.removePortBinding=function(e){t.model.Ports.splice(e,1)},t.create=function(){var e=t.model,a=t.state.selectedSubscription.Id,o=t.state.selectedResourceGroup.Name;t.state.actionInProgress=!0,r.createContainerGroup(e,a,o).then(function(){i.success("已成功创建容器",e.Name),n.go("azure.containerinstances")}).catch(function(e){i.error("失败",e,"无法创建容器")}).finally(function(){t.state.actionInProgress=!1})},o=new a.ContainerGroupDefaultModel,r.subscriptions().then(function(n){var a=n;return t.state.selectedSubscription=a[0],t.subscriptions=a,e.all({resourceGroups:r.resourceGroups(a),containerInstancesProviders:r.containerInstanceProvider(a)})}).then(function(e){var n=e.resourceGroups;s=n;var a=e.containerInstancesProviders;l=a,t.model=o,c(t.state.selectedSubscription,n,a)}).catch(function(e){i.error("失败",e,"无法检索Azure资源")})}])},function(e,t){angular.module("portainer.azure").controller("AzureDashboardController",["$scope","AzureService","Notifications",function(e,t,n){t.subscriptions().then(function(n){var a=n;return e.subscriptions=a,t.resourceGroups(a)}).then(function(n){e.resourceGroups=t.aggregate(n)}).catch(function(e){n.error("失败",e,"无法加载仪表板数据")})}])},function(e,t,n){"use strict";n.r(t);n(5);var a=n(118),r=n.n(a),i=n(175),o=n(327);angular.module("portainer").config(["$urlRouterProvider","$httpProvider","localStorageServiceProvider","jwtOptionsProvider","AnalyticsProvider","$uibTooltipProvider","$compileProvider","cfpLoadingBarProvider",function(e,t,n,a,s,l,c,d){n.setPrefix("portainer"),a.config({tokenGetter:["LocalStorage",function(e){return e.getJWT()}]}),t.interceptors.push("jwtInterceptor"),t.interceptors.push("EndpointStatusInterceptor"),t.defaults.headers.post["Content-Type"]="application/json",t.defaults.headers.put["Content-Type"]="application/json",t.defaults.headers.patch["Content-Type"]="application/json",t.interceptors.push(["HttpRequestHelper",function(e){return{request:function(t){return t.url.indexOf("/docker/")>-1&&(t.headers["X-PortainerAgent-Target"]=e.portainerAgentTargetHeader(),e.portainerAgentManagerOperation()&&(t.headers["X-PortainerAgent-ManagerOperation"]="1")),t}}}]),s.setAccount({tracker:"UA-114452763-1",set:{anonymizeIp:!1}}),s.startOffline(!0),r.a.options.timeOut=3e3,i.Terminal.applyAddon(o),l.setTriggers({mouseenter:"mouseleave",click:"click",focus:"blur",outsideClick:"outsideClick"}),d.includeSpinner=!1,d.parentSelector="#loadingbar-placeholder",d.latencyThreshold=600,e.otherwise("/auth")}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){angular.module("portainer").constant("API_ENDPOINT_AUTH","api/auth").constant("API_ENDPOINT_DOCKERHUB","api/dockerhub").constant("API_ENDPOINT_ENDPOINTS","api/endpoints").constant("API_ENDPOINT_ENDPOINT_GROUPS","api/endpoint_groups").constant("API_ENDPOINT_MOTD","api/motd").constant("API_ENDPOINT_EXTENSIONS","api/extensions").constant("API_ENDPOINT_REGISTRIES","api/registries").constant("API_ENDPOINT_RESOURCE_CONTROLS","api/resource_controls").constant("API_ENDPOINT_SCHEDULES","api/schedules").constant("API_ENDPOINT_SETTINGS","api/settings").constant("API_ENDPOINT_STACKS","api/stacks").constant("API_ENDPOINT_STATUS","api/status").constant("API_ENDPOINT_USERS","api/users").constant("API_ENDPOINT_TAGS","api/tags").constant("API_ENDPOINT_TEAMS","api/teams").constant("API_ENDPOINT_TEAM_MEMBERSHIPS","api/team_memberships").constant("API_ENDPOINT_TEMPLATES","api/templates").constant("API_ENDPOINT_WEBHOOKS","api/webhooks").constant("DEFAULT_TEMPLATES_URL","https://raw.githubusercontent.com/portainer-community-offical/templates/portainer-portainer/templates.json").constant("PAGINATION_MAX_ITEMS",10).constant("APPLICATION_CACHE_VALIDITY",3600).constant("CONSOLE_COMMANDS_LABEL_PREFIX","io.caas.commands.").constant("PREDEFINED_NETWORKS",["host","bridge","none"])},function(e,t,n){var a=n(532);angular.module("portainer.docker").component("containerCapabilities",{templateUrl:a,bindings:{capabilities:"="}})},function(e,t){var n="app/docker/components/container-capabilities/containerCapabilities.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n    容器能力选项\n  </div>\n  <div class="form-group">\n    <div ng-repeat="cap in $ctrl.capabilities">\n      <div class="col-xs-8 col-sm-3 col-md-2">\n        <label for="capability" class="control-label text-left">\n          {{ cap.capability }}\n          <portainer-tooltip position="bottom" message="{{ cap.description }}"></portainer-tooltip>\n        </label>\n      </div>\n      <div class="col-xs-4 col-sm-2 col-md-1">\n        <label class="switch" style="margin-left: 20px;">\n            <input type="checkbox" name="capability" ng-model="cap.allowed"><i></i>\n        </label>\n      </div>\n      <div class="col-xs-0 col-sm-1 col-md-1">\n      </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(534);angular.module("portainer.docker").component("containerQuickActions",{templateUrl:a,bindings:{containerId:"<",nodeName:"<",status:"<",state:"<",taskId:"<"}})},function(e,t){var n="app/docker/components/container-quick-actions/containerQuickActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="btn-group btn-group-xs" role="group" aria-label="..." style="display:inline-flex;">\n  <a\n    authorization="DockerContainerLogs"\n    ng-if="$ctrl.state.showQuickActionLogs && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.logs({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="日志">\n    <i class="fa fa-file-alt space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerTaskLogs"\n    ng-if="$ctrl.state.showQuickActionLogs && $ctrl.taskId !== undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.tasks.task.logs({id: $ctrl.taskId})"\n    title="日志">\n    <i class="fa fa-file-alt space-right" aria-hidden="true"></i>\n  </a>\n  <a\n  authorization="DockerContainerInspect"\n    ng-if="$ctrl.state.showQuickActionInspect && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.inspect({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="查看详情">\n    <i class="fa fa-info-circle space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerTaskInspect"\n    ng-if="$ctrl.state.showQuickActionInspect && $ctrl.taskId !== undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.tasks.task({id: $ctrl.taskId})"\n    title="查看详情">\n    <i class="fa fa-info-circle space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerContainerStats"\n    ng-if="$ctrl.state.showQuickActionStats && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.stats({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="状态">\n    <i class="fa fa-chart-area space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerExecStart"\n    ng-if="$ctrl.state.showQuickActionExec && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.exec({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="命令行控制台">\n    <i class="fa fa-terminal space-right" aria-hidden="true"></i>\n  </a>\n  <a\n    authorization="DockerContainerAttach"\n    ng-if="$ctrl.state.showQuickActionAttach && [\'starting\', \'running\', \'healthy\', \'unhealthy\'].indexOf($ctrl.status) !== -1 && $ctrl.taskId === undefined"\n    style="margin: 0 2.5px;"\n    ui-sref="docker.containers.container.attach({id: $ctrl.containerId, nodeName: $ctrl.nodeName})"\n    title="连接控制台">\n    <i class="fa fa-plug space-right" aria-hidden="true"></i>\n  </a>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(11);angular.module("portainer.docker").controller("ContainerRestartPolicyController",[function(){var e=this;this.state={editModel:{}},e.save=function(){if(e.state.editModel.name===e.name&&e.state.editModel.maximumRetryCount===e.maximumRetryCount)return;e.updateRestartPolicy(e.state.editModel)},this.$onInit=function(){e.state.editModel={name:e.name?e.name:"no",maximumRetryCount:e.maximumRetryCount}}}])},function(e,t,n){var a=n(537);angular.module("portainer.docker").component("containerRestartPolicy",{templateUrl:a,controller:"ContainerRestartPolicyController",bindings:{name:"<",maximumRetryCount:"<",updateRestartPolicy:"&"}})},function(e,t){var n="app/docker/components/container-restart-policy/container-restart-policy.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <table class="table table-bordered table-condensed">\n    <tr>\n      <td class="col-md-3">\n        <span>名称</span>\n      </td>\n      <td>\n        <select class="form-control" ng-model="$ctrl.state.editModel.name" disable-authorization="DockerContainerUpdate">\n          <option value="no">从不</option>\n          <option value="on-failure">失败后</option>\n          <option value="always">任何</option>\n          <option value="unless-stopped">非停止</option>\n        </select>\n      </td>\n      <td class="col-md-2" authorization="DockerContainerUpdate">\n        <button class="btn btn-sm btn-primary" ng-click="$ctrl.save()">更新</button>\n      </td>\n    </tr>\n    <tr ng-if="$ctrl.state.editModel.name === \'on-failure\'">\n      <td class="col-md-3">最大重试次数</td>\n      <td colspan="2">\n        <input type="number" class="form-control" ng-model="$ctrl.state.editModel.maximumRetryCount" />\n      </td>\n    </tr>\n  </table>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(539);angular.module("portainer.docker").component("dashboardClusterAgentInfo",{templateUrl:a,controller:"DashboardClusterAgentInfoController"})},function(e,t){var n="app/docker/components/dashboard-cluster-agent-info/dashboardClusterAgentInfo.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-tachometer-alt" title-text="集群信息"></rd-widget-header>\n  <rd-widget-body classes="no-padding">\n    <table class="table">\n      <tbody>\n        <tr>\n          <td>集群节点</td>\n          <td>{{ $ctrl.agentCount }}</td>\n        </tr>\n        <tr>\n          <td colspan="2">\n            <div class="btn-group" role="group" aria-label="...">\n              <a ui-sref="docker.swarm.visualizer"><i class="fa fa-object-group space-right" aria-hidden="true"></i>转到群集可视化管理器</a>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("DashboardClusterAgentInfoController",["AgentService","Notifications",function(e,t){var n=this;this.$onInit=function(){e.agents().then(function(e){n.agentCount=e.length}).catch(function(e){t.error("失败",e,"无法检索代理信息")})}}])},function(e,t,n){var a=n(542);angular.module("portainer.docker").component("configsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<"}})},function(e,t){var n="app/docker/components/datatables/configs-datatable/configsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" authorization="DockerConfigDelete, DockerConfigCreate">\n        <button type="button" class="btn btn-sm btn-danger" authorization="DockerConfigDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n\t       <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.configs.new" authorization="DockerConfigCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加配置\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" authorization="DockerConfigDelete, DockerConfigCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  创建日期\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" authorization="DockerConfigDelete, DockerConfigCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.configs.config({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的配置。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(544);angular.module("portainer.docker").component("containerNetworksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",container:"<",availableNetworks:"<",joinNetworkAction:"<",joinNetworkActionInProgress:"<",leaveNetworkActionInProgress:"<",leaveNetworkAction:"<",nodeName:"<"}})},function(e,t){var n="app/docker/components/datatables/container-networks-datatable/containerNetworksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <form class="form-horizontal">\n          <div class="row" authorization="DockerNetworkConnect">\n            <label for="container_network" class="col-sm-3 col-lg-2 control-label text-left">加入一个网络</label>\n            <div class="col-sm-5 col-lg-4">\n              <select class="form-control" ng-model="$ctrl.selectedNetwork" id="container_network">\n                <option selected disabled hidden value="">选择一个网络</option>\n                <option ng-repeat="net in $ctrl.availableNetworks | orderBy: \'Name\'" ng-value="net.Id">{{ net.Name }}</option>\n              </select>\n            </div>\n            <div class="col-sm-1">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="$ctrl.joinNetworkActionInProgress || !$ctrl.selectedNetwork" ng-click="$ctrl.joinNetworkAction($ctrl.container, $ctrl.selectedNetwork)" button-spinner="$ctrl.joinNetworkActionInProgress">\n                <span ng-hide="$ctrl.joinNetworkActionInProgress">加入网络</span>\n                <span ng-show="$ctrl.joinNetworkActionInProgress">正在加入网络...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>网络</th>\n              <th>IP地址</th>\n              <th>网关</th>\n              <th>MAC地址</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="(key, value) in $ctrl.dataset | itemsPerPage: $ctrl.state.paginatedItemLimit" ng-class="{active: item.Checked}">\n              <td><a ui-sref="docker.networks.network({ id: key, nodeName: $ctrl.nodeName })">{{ key }}</a></td>\n              <td>{{ value.IPAddress || \'-\' }}</td>\n              <td>{{ value.Gateway || \'-\' }}</td>\n              <td>{{ value.MacAddress || \'-\' }}</td>\n              <td authorization="DockerNetworkDisconnect">\n                <button type="button" class="btn btn-xs btn-danger" ng-disabled="$ctrl.leaveNetworkActionInProgress" button-spinner="$ctrl.leaveNetworkActionInProgress" ng-click="$ctrl.leaveNetworkAction($ctrl.container, key)">\n                  <span ng-hide="$ctrl.leaveNetworkActionInProgress"><i class="fa fa-trash-alt space-right" aria-hidden="true"></i> 离开网络</span>\n                  <span ng-show="$ctrl.leaveNetworkActionInProgress">正在离开网络...</span>\n                </button>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.dataset.length === 0">\n              <td colspan="5" class="text-center text-muted">没有可用的网络。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(546);angular.module("portainer.docker").component("containerProcessesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"=",headerset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/container-processes-datatable/containerProcessesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th ng-repeat="header in $ctrl.headerset">\n                {{ header }}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredProcesses = ($ctrl.dataset | filter:$ctrl.state.textFilter | itemsPerPage: $ctrl.state.paginatedItemLimit))">\n              <td ng-repeat="info in item track by $index">{{ info }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="{{ $ctrl.headerset.length }}" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredProcesses.length === 0">\n              <td colspan="{{ $ctrl.headerset.length }}" class="text-center text-muted">没有可用的进程。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(548);angular.module("portainer.docker").component("containersDatatableActions",{templateUrl:a,controller:"ContainersDatatableActionsController",bindings:{selectedItems:"=",selectedItemCount:"=",noStoppedItemsSelected:"=",noRunningItemsSelected:"=",noPausedItemsSelected:"=",showAddAction:"<"}})},function(e,t){var n="app/docker/components/datatables/containers-datatable/actions/containersDatatableActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="actionBar" authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate">\n  <div class="btn-group" role="group" aria-label="...">\n    <button authorization="DockerContainerStart" type="button" class="btn btn-sm btn-success" ng-click="$ctrl.startAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noStoppedItemsSelected">\n      <i class="fa fa-play space-right" aria-hidden="true"></i>启动\n    </button>\n    <button authorization="DockerContainerStop" type="button" class="btn btn-sm btn-danger" ng-click="$ctrl.stopAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noRunningItemsSelected">\n      <i class="fa fa-stop space-right" aria-hidden="true"></i>停止\n    </button>\n    <button authorization="DockerContainerKill" type="button" class="btn btn-sm btn-danger" ng-click="$ctrl.killAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0">\n      <i class="fa fa-bomb space-right" aria-hidden="true"></i>终止\n    </button>\n    <button authorization="DockerContainerRestart" type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.restartAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0">\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>重启\n    </button>\n    <button authorization="DockerContainerPause" type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.pauseAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noRunningItemsSelected">\n      <i class="fa fa-pause space-right" aria-hidden="true"></i>暂停\n    </button>\n    <button authorization="DockerContainerUnpause" type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.resumeAction($ctrl.selectedItems)"\n      ng-disabled="$ctrl.selectedItemCount === 0 || $ctrl.noPausedItemsSelected">\n      <i class="fa fa-play space-right" aria-hidden="true"></i>恢复\n    </button>\n    <button authorization="DockerContainerDelete" type="button" class="btn btn-sm btn-danger"\n      ng-disabled="$ctrl.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.selectedItems)">\n      <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n    </button>\n  </div>\n  <button authorization="DockerContainerCreate" type="button" class="btn btn-sm btn-primary" ui-sref="docker.containers.new" ng-if="$ctrl.showAddAction">\n    <i class="fa fa-plus space-right" aria-hidden="true"></i>添加容器\n  </button>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0),n(1),n(6);angular.module("portainer.docker").controller("ContainersDatatableActionsController",["$state","ContainerService","ModalService","Notifications","HttpRequestHelper",function(e,t,n,a,r){function i(t,n,i,o){var s=t.length;angular.forEach(t,function(t){r.setPortainerAgentTargetHeader(t.NodeName),n(t.Id).then(function(){a.success(i,t.Names[0])}).catch(function(e){o=o+":"+t.Names[0],a.error("失败",e,o)}).finally(function(){0===--s&&e.reload()})})}this.startAction=function(e){i(e,t.startContainer,"已成功启动容器","无法启动容器")},this.stopAction=function(e){i(e,t.stopContainer,"已成功停止容器","无法停止容器")},this.restartAction=function(e){i(e,t.restartContainer,"已成功重启容器","无法重启容器")},this.killAction=function(e){i(e,t.killContainer,"已成功终止容器","无法终止容器")},this.pauseAction=function(e){i(e,t.pauseContainer,"已成功暂停容器","无法暂停容器")},this.resumeAction=function(e){i(e,t.resumeContainer,"已成功恢复容器","无法恢复容器")},this.removeAction=function(i){for(var o=!1,s=0;s<i.length;s++){if("running"===i[s].State){o=!0;break}}var l="您即将删除一个或多个容器。";o&&(l="您即将删除一个或多个正在运行的容器。"),n.confirmContainerDeletion(l,function(n){if(n){var o=!1;n[0]&&(o=!0),function(n,i){var o=n.length;angular.forEach(n,function(n){r.setPortainerAgentTargetHeader(n.NodeName),t.remove(n,i).then(function(){a.success("已成功删除容器",n.Names[0])}).catch(function(e){a.error("失败",e,"无法删除容器")}).finally(function(){0===--o&&e.reload()})})}(i,o)}})}}])},function(e,t,n){var a=n(551);angular.module("portainer.docker").component("containersDatatable",{templateUrl:a,controller:"ContainersDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",showAddAction:"<",offlineMode:"<"}})},function(e,t){var n="app/docker/components/datatables/containers-datatable/containersDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n        <div class="settings">\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.columnVisibility.state.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.columnVisibility.state.open">\n              <span uib-dropdown-toggle ><i class="fa fa-columns space-right" aria-hidden="true"></i>列</span>\n              <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n                <div class="tableMenu">\n                  <div class="menuHeader">\n                    显示/隐藏列\n                  </div>\n                  <div class="menuContent">\n                    <div class="md-checkbox" >\n                      <input id="col_vis_state" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.state.display"/>\n                      <label for="col_vis_state" ng-bind="$ctrl.columnVisibility.columns.state.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_actions" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.actions.display"/>\n                      <label for="col_vis_actions" ng-bind="$ctrl.columnVisibility.columns.actions.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_stack" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.stack.display"/>\n                      <label for="col_vis_stack" ng-bind="$ctrl.columnVisibility.columns.stack.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_image" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.image.display"/>\n                      <label for="col_vis_image" ng-bind="$ctrl.columnVisibility.columns.image.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_created" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.created.display"/>\n                      <label for="col_vis_created" ng-bind="$ctrl.columnVisibility.columns.created.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_ip" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ip.display"/>\n                      <label for="col_vis_ip" ng-bind="$ctrl.columnVisibility.columns.ip.label"></label>\n                    </div>\n                    <div class="md-checkbox" ng-if="$ctrl.showHostColumn">\n                      <input id="col_vis_host" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.host.display"/>\n                      <label for="col_vis_host" ng-bind="$ctrl.columnVisibility.columns.host.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_ports" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ports.display"/>\n                      <label for="col_vis_ports" ng-bind="$ctrl.columnVisibility.columns.ports.label"></label>\n                    </div>\n                    <div class="md-checkbox">\n                      <input id="col_vis_ownership" ng-click="$ctrl.onColumnVisibilityChange()" type="checkbox" ng-model="$ctrl.columnVisibility.columns.ownership.display"/>\n                      <label for="col_vis_ownership" ng-bind="$ctrl.columnVisibility.columns.ownership.label"></label>\n                    </div>\n                  </div>\n                  <div>\n                    <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.columnVisibility.state.open = false;">关闭</a>\n                  </div>\n                </div>\n              </div>\n          </span>\n          <span class="setting" ng-class="{ \'setting-active\': $ctrl.settings.open }" uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.settings.open">\n            <span uib-dropdown-toggle><i class="fa fa-cog" aria-hidden="true"></i> 设置</span>\n            <div class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n              <div class="tableMenu">\n                <div class="menuHeader">\n                  表设置\n                </div>\n                <div class="menuContent">\n                  <div class="md-checkbox">\n                    <input id="setting_container_trunc" type="checkbox" ng-model="$ctrl.settings.truncateContainerName" ng-change="$ctrl.onSettingsContainerNameTruncateChange()"/>\n                    <label for="setting_container_trunc">截短容器名称</label>\n                  </div>\n                </div>\n                <div authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs, DockerContainerAttach">\n                  <div class="menuHeader">\n                    快速操作\n                  </div>\n                  <div class="menuContent">\n                    <div class="md-checkbox" authorization="DockerContainerStats">\n                      <input id="setting_show_stats" type="checkbox" ng-model="$ctrl.settings.showQuickActionStats" ng-change="$ctrl.onSettingsQuickActionChange()"/>\n                      <label for="setting_show_stats">状态</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerLogs">\n                      <input id="setting_show_logs" type="checkbox" ng-model="$ctrl.settings.showQuickActionLogs" ng-change="$ctrl.onSettingsQuickActionChange()"/>\n                      <label for="setting_show_logs">日志</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerExecStart">\n                      <input id="setting_show_console" type="checkbox" ng-model="$ctrl.settings.showQuickActionExec" ng-change="$ctrl.onSettingsQuickActionChange()"/>\n                      <label for="setting_show_console">控制台</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerInspect">\n                      <input id="setting_show_inspect" type="checkbox" ng-model="$ctrl.settings.showQuickActionInspect" ng-change="$ctrl.onSettingsQuickActionChange()"/>\n                      <label for="setting_show_inspect">查看</label>\n                    </div>\n                    <div class="md-checkbox" authorization="DockerContainerAttach">\n                        <input id="setting_show_attach" type="checkbox" ng-model="$ctrl.settings.showQuickActionAttach" ng-change="$ctrl.onSettingsQuickActionChange()"/>\n                        <label for="setting_show_attach">连接</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.settings.open = false;">关闭</a>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n      <containers-datatable-actions ng-if="!$ctrl.offlineMode"\n        selected-items="$ctrl.state.selectedItems"\n        selected-item-count="$ctrl.state.selectedItemCount"\n        no-stopped-items-selected="$ctrl.state.noStoppedItemsSelected"\n        no-running-items-selected="$ctrl.state.noRunningItemsSelected"\n        no-paused-items-selected="$ctrl.state.noPausedItemsSelected"\n        show-add-action="$ctrl.showAddAction"\n      ></containers-datatable-actions>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Names\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Names\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Names\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open" ng-show="$ctrl.columnVisibility.columns.state.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">过滤器 <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">过滤器 <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      按状态过滤\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                        <input id="filter_state_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()"/>\n                        <label for="filter_state_{{ $index }}">{{ filter.label }}</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">关闭</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th ng-if="$ctrl.settings.showQuickActionStats || $ctrl.settings.showQuickActionLogs || $ctrl.settings.showQuickActionExec || $ctrl.settings.showQuickActionAttach|| $ctrl.settings.showQuickActionInspect" ng-show="$ctrl.columnVisibility.columns.actions.display" authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs, DockerContainerAttach">\n                快速操作\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.stack.display">\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  堆栈\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.image.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Image\')">\n                  镜像\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.created.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                    <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                    <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                  创建时间\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.ip.display">\n                <a ng-click="$ctrl.changeOrderBy(\'IP\')">\n                  IP地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn" ng-show="$ctrl.columnVisibility.columns.host.display">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  主机\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-show="$ctrl.columnVisibility.columns.ports.display">\n                <a ng-click="$ctrl.changeOrderBy(\'Ports\')">\n                  暴露端口\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn" ng-show="$ctrl.columnVisibility.columns.ownership.display">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerContainerStart, DockerContainerStop, DockerContainerKill, DockerContainerRestart, DockerContainerPause, DockerContainerUnpause, DockerContainerDelete, DockerContainerCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.containers.container({ id: item.Id, nodeName: item.NodeName })" title="{{ item | containername }}">{{ item | containername | truncate: $ctrl.settings.containerNameTruncateSize }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item | containername | truncate: $ctrl.settings.containerNameTruncateSize }}</span>\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.state.display">\n                <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(item.Status) !== -1" class="label label-{{ item.Status|containerstatusbadge }} interactive" uib-tooltip="此容器设置了健康检查">{{ item.Status }}</span>\n                <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(item.Status) === -1" class="label label-{{ item.Status|containerstatusbadge }}">{{ item.Status }}</span>\n              </td>\n              <td ng-if="!$ctrl.offlineMode && ($ctrl.settings.showQuickActionStats || $ctrl.settings.showQuickActionLogs || $ctrl.settings.showQuickActionExec || $ctrl.settings.showQuickActionAttach || $ctrl.settings.showQuickActionInspect)" ng-show="$ctrl.columnVisibility.columns.actions.display" authorization="DockerContainerStats, DockerContainerLogs, DockerExecStart, DockerContainerInspect, DockerTaskInspect, DockerTaskLogs">\n                <container-quick-actions container-id="item.Id" node-name="item.NodeName" status="item.Status" state="$ctrl.settings"></container-quick-actions>\n              </td>\n              <td ng-if="$ctrl.offlineMode">\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.stack.display">{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td ng-show="$ctrl.columnVisibility.columns.image.display">\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.images.image({ id: item.Image })">{{ item.Image | trimshasum }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Image | trimshasum }}</span>\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.created.display">\n                  {{item.Created | getisodatefromtimestamp}}\n              </td>\n              <td ng-show="$ctrl.columnVisibility.columns.ip.display">{{ item.IP ? item.IP : \'-\' }}</td>\n              <td ng-if="$ctrl.showHostColumn" ng-show="$ctrl.columnVisibility.columns.host.display">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n              <td ng-show="$ctrl.columnVisibility.columns.ports.display">\n                <a ng-if="item.Ports.length > 0" ng-repeat="p in item.Ports" class="image-tag" ng-href="http://{{ $ctrl.state.publicURL || p.host }}:{{p.public}}" target="_blank">\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> {{ p.public }}:{{ p.private }}\n                </a>\n                <span ng-if="item.Ports.length == 0" >-</span>\n              </td>\n              <td ng-if="$ctrl.showOwnershipColumn" ng-show="$ctrl.columnVisibility.columns.ownership.display">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="9" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="9" class="text-center text-muted">没有可用的容器。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(1),n(19),n(5);var a=n(4),r=n(48);angular.module("portainer.docker").controller("ContainersDatatableController",["PaginationService","DatatableService","EndpointProvider",function(e,t,n){var i=this;this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[],noStoppedItemsSelected:!0,noRunningItemsSelected:!0,noPausedItemsSelected:!0,publicURL:n.endpointPublicURL()},this.settings={open:!1,truncateContainerName:!0,containerNameTruncateSize:32,showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionExec:!0,showQuickActionInspect:!0,showQuickActionAttach:!1},this.filters={state:{open:!1,enabled:!1,values:[]}},this.columnVisibility={state:{open:!1},columns:{state:{label:"状态",display:!0},actions:{label:"快速操作",display:!0},stack:{label:"堆栈",display:!0},image:{label:"镜像",display:!0},created:{label:"创建时间",display:!0},ip:{label:"IP地址",display:!0},host:{label:"主机",display:!0},ports:{label:"暴露端口",display:!0},ownership:{label:"所有权",display:!0}}},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.onColumnVisibilityChange=function(){t.setColumnVisibilitySettings(this.tableKey,this.columnVisibility)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.toggleItemSelection=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectItem=function(e){this.toggleItemSelection(e),this.updateSelectionState()},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.toggleItemSelection(t))}this.updateSelectionState()},this.updateSelectionState=function(){this.state.noStoppedItemsSelected=!0,this.state.noRunningItemsSelected=!0,this.state.noPausedItemsSelected=!0;for(var e=0;e<this.dataset.length;e++){var t=this.dataset[e];t.Checked&&this.updateSelectionStateBasedOnItemStatus(t)}},this.updateSelectionStateBasedOnItemStatus=function(e){"paused"===e.Status?this.state.noPausedItemsSelected=!1:-1!==["stopped","created"].indexOf(e.Status)?this.state.noStoppedItemsSelected=!1:-1!==["running","healthy","unhealthy","starting"].indexOf(e.Status)&&(this.state.noRunningItemsSelected=!1)},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.applyFilters=function(e){for(var t=e,n=i.filters,a=0;a<n.state.values.length;a++){var r=n.state.values[a];if(t.Status===r.label&&r.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,n=!1,a=0;a<e.length;a++){e[a].display||(n=!0)}this.filters.state.enabled=n,t.setDataTableFilters(this.tableKey,this.filters)},this.onSettingsContainerNameTruncateChange=function(){this.settings.truncateContainerName?this.settings.containerNameTruncateSize=32:this.settings.containerNameTruncateSize=256,t.setDataTableSettings(this.tableKey,this.settings)},this.onSettingsQuickActionChange=function(){t.setDataTableSettings(this.tableKey,this.settings)},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status,display:!0})}this.filters.state.values=Object(r.a)(e,"label")},this.updateStoredFilters=function(e){for(var t=this.filters.state.values,n=0;n<t.length;n++){var r=t[n],i=Object(a.a)(e,["label",r.label]);i&&!i.display&&(r.display=i.display,this.filters.state.enabled=!0)}},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder,this.prepareTableFromDataset();var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableFilters(this.tableKey);null!==a&&this.updateStoredFilters(a.state.values),this.filters.state.open=!1;var r=t.getDataTableSettings(this.tableKey);null!==r&&(this.settings=r),this.settings.open=!1;var i=t.getColumnVisibilitySettings(this.tableKey);null!==i&&(this.columnVisibility=i),this.columnVisibility.state.open=!1;var o=t.getDataTableTextFilters(this.tableKey);null!==o&&(this.state.textFilter=o)}}])},function(e,t,n){var a=n(554);angular.module("portainer.docker").component("eventsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/events-datatable/eventsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Time\')">\n                  日期\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  类别\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Details\')">\n                  详情\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Details\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Details\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>{{ item.Time | getisodatefromtimestamp }}</td>\n              <td>{{ item.Type }}</td>\n              <td>{{ item.Details }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有事件可用。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(556);angular.module("portainer.docker").component("jobsDatatable",{templateUrl:a,controller:"JobsDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/host-jobs-datatable/jobsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <div class="datatable">\n      <rd-widget>\n        <rd-widget-body classes="no-padding">\n          <div class="toolBar">\n            <div class="toolBarTitle">\n              <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i>\n              {{ $ctrl.titleText }}\n            </div>\n          </div>\n          <div class="actionBar">\n            <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.purgeAction()">\n              <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除历史任务\n            </button>\n          </div>\n          <div class="searchBar">\n            <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n            <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n          </div>\n          <div class="table-responsive">\n            <table class="table table-hover table-filters nowrap-cells">\n              <thead>\n                <tr>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                      任务Id号\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open">\n                    <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                      状态\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                    <div>\n                      <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled"> 过滤器\n                        <i class="fa fa-filter" aria-hidden="true"></i></span>\n                      <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">过滤器\n                        <i class="fa fa-check" aria-hidden="true"></i></span>\n                    </div>\n                    <div class="dropdown-menu" uib-dropdown-menu>\n                      <div class="tableMenu">\n                        <div class="menuHeader">\n                          根据状态筛选\n                        </div>\n                        <div class="menuContent">\n                          <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                            <input id="filter_state_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()" />\n                            <label for="filter_state_{{ $index }}">{{ filter.label }}</label>\n                          </div>\n                        </div>\n                        <div>\n                          <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">关闭</a>\n                        </div>\n                      </div>\n                    </div>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                      已创建\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))">\n                  <td>\n                    <a ui-sref="docker.containers.container.logs({ id: item.Id, nodeName: item.NodeName })" title="{{ item.Id }}">\n                      {{ item | containername }}</a>\n                  </td>\n                  <td>\n                    <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(item.Status) !== -1" class="label label-{{ item.Status|containerstatusbadge }} interactive"\n                      uib-tooltip="This container has a health check">{{ item.Status }}</span>\n                    <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(item.Status) === -1" class="label label-{{ item.Status|containerstatusbadge }}">\n                      {{ item.Status }}</span>\n                  </td>\n                  <td>\n                    {{item.Created | getisodatefromtimestamp}}\n                  </td>\n                </tr>\n                <tr ng-if="!$ctrl.dataset">\n                  <td colspan="9" class="text-center text-muted">载入中...</td>\n                </tr>\n                <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n                  <td colspan="9" class="text-center text-muted">没有可用的任务。</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class="footer" ng-if="$ctrl.dataset">\n            <div class="paginationControls">\n              <form class="form-inline">\n                <span class="limitSelector">\n                  <span style="margin-right: 5px;">\n                    每页项目\n                  </span>\n                  <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                    <option value="0">全部</option>\n                    <option value="10">10</option>\n                    <option value="25">25</option>\n                    <option value="50">50</option>\n                    <option value="100">100</option>\n                  </select>\n                </span>\n                <dir-pagination-controls max-size="5"></dir-pagination-controls>\n              </form>\n            </div>\n          </div>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(1),n(19);var a=n(4),r=n(48);angular.module("portainer.docker").controller("JobsDatatableController",["$q","$state","PaginationService","DatatableService","ContainerService","ModalService","Notifications",function(e,t,n,i,o,s,l){var c=this;this.state={orderBy:this.orderBy,paginatedItemLimit:n.getPaginationLimit(this.tableKey),displayTextFilter:!1},this.filters={state:{open:!1,enabled:!1,values:[]}},this.onTextFilterChange=function(){i.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,i.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.changePaginationLimit=function(){n.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.applyFilters=function(e){for(var t=e,n=c.filters,a=0;a<n.state.values.length;a++){var r=n.state.values[a];if(t.Status===r.label&&r.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,t=!1,n=0;n<e.length;n++){e[n].display||(t=!0)}this.filters.state.enabled=t,i.setDataTableFilters(this.tableKey,this.filters)},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status,display:!0})}this.filters.state.values=Object(r.a)(e,"label")},this.updateStoredFilters=function(e){for(var t=this.filters.state.values,n=0;n<t.length;n++){var r=t[n],i=Object(a.a)(e,["label",r.label]);i&&!i.display&&(r.display=i.display,this.filters.state.enabled=!0)}},this.purgeAction=function(){var n;(n=e.defer(),s.confirm({title:"您确定吗？",message:"清除历史任务将删除所有已停止任务的容器。",buttons:{confirm:{label:"清除",className:"btn-danger"}},callback:function(e){n.resolve(e)}}),n.promise).then(function(n){if(!n)return e.when();o.prune({label:["io.portainer.job.endpoint"]}).then(function(){l.success("成功","已删除历史任务"),t.reload()}).catch(function(e){l.error("失败",e.message,"无法删除历史任务")})})},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder,this.prepareTableFromDataset();var t=i.getDataTableOrder(this.tableKey);null!==t&&(this.state.reverseOrder=t.reverse,this.state.orderBy=t.orderBy);var n=i.getDataTableFilters(this.tableKey);null!==n&&this.updateStoredFilters(n.state.values),this.filters.state.open=!1;var a=i.getDataTableTextFilters(this.tableKey);null!==a&&(this.state.textFilter=a)}}])},function(e,t,n){var a=n(559);angular.module("portainer.docker").component("imagesDatatable",{templateUrl:a,controller:"ImagesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showHostColumn:"<",removeAction:"<",downloadAction:"<",forceRemoveAction:"<",exportInProgress:"<",offlineMode:"<"}})},function(e,t){var n="app/docker/components/datatables/images-datatable/imagesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerImageDelete, DockerImageBuild, DockerImageLoad, DockerImageGet">\n        <div class="btn-group" authorization="DockerImageDelete">\n          <button type="button" class="btn btn-sm btn-danger"\n            ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems, false)">\n            <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n          </button>\n          <button type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" ng-disabled="$ctrl.state.selectedItemCount === 0">\n            <span class="caret"></span>\n            <span class="sr-only">切换下拉菜单</span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="$ctrl.forceRemoveAction($ctrl.state.selectedItems, true)" ng-disabled="$ctrl.state.selectedItemCount === 0">强制删除</a></li>\n          </ul>\n        </div>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.images.build" authorization="DockerImageBuild">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>构建一个新镜像\n        </button>\n        <div class="btn-group">\n          <button type="button" class="btn btn-sm btn-primary" ng-disabled="$ctrl.exportInProgress" ui-sref="docker.images.import" authorization="DockerImageLoad">\n              <i class="fa fa-upload space-right" aria-hidden="true"></i>导入\n          </button>\n          <button type="button" class="btn btn-sm btn-primary" ng-disabled="$ctrl.state.selectedItemCount === 0 || $ctrl.exportInProgress"\n            ng-click="$ctrl.downloadAction($ctrl.state.selectedItems)" button-spinner="$ctrl.exportInProgress" authorization="DockerImageGet">\n              <i class="fa fa-download space-right" aria-hidden="true"></i>\n              <span ng-hide="$ctrl.exportInProgress">导出</span>\n              <span ng-show="$ctrl.exportInProgress">正在导出...</span>\n          </button>\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" popover-placement="bottom-left" is-open="$ctrl.filters.usage.open">\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.usage.enabled">过滤器 <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.usage.enabled">过滤器 <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      按使用情况过滤\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox">\n                        <input id="filter_usage_usedImages" type="checkbox" ng-model="$ctrl.filters.usage.showUsedImages" ng-change="$ctrl.onUsageFilterChange()"/>\n                        <label for="filter_usage_usedImages">使用的镜像</label>\n                      </div>\n                      <div class="md-checkbox">\n                        <input id="filter_usage_unusedImages" type="checkbox" ng-model="$ctrl.filters.usage.showUnusedImages" ng-change="$ctrl.onUsageFilterChange()"/>\n                        <label for="filter_usage_unusedImages">未使用的镜像</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.usage.open = false;">关闭</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'RepoTags\')">\n                  Tags标签\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RepoTags\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RepoTags\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'VirtualSize\')">\n                  大小\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'VirtualSize\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'VirtualSize\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                  创建于\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  主机\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.images.image({ id: item.Id, nodeName: item.NodeName })" class="monospaced" title="{{ item.Id }}">{{ item.Id | truncate:40 }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Id | truncate:40 }}</span>\n                <span style="margin-left: 10px;" class="label label-warning image-tag" ng-if="::item.ContainerCount === 0">未使用</span>\n              </td>\n              <td>\n                <span class="label label-primary image-tag" ng-repeat="tag in (item | repotags) track by $index">{{ tag }}</span>\n              </td>\n              <td>{{ item.VirtualSize | humansize }}</td>\n              <td>{{ item.Created | getisodatefromtimestamp }}</td>\n              <td ng-if="$ctrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">没有可用的镜像。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.docker").controller("ImagesDatatableController",["PaginationService","DatatableService",function(e,t){var n=this;this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.filters={usage:{open:!1,enabled:!1,showUsedImages:!0,showUnusedImages:!0}},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.applyFilters=function(e){var t=e,a=n.filters;return!!(0===t.ContainerCount&&a.usage.showUnusedImages||0!==t.ContainerCount&&a.usage.showUsedImages)},this.onUsageFilterChange=function(){var e=this.filters.usage,n=!1;e.showUsedImages&&e.showUnusedImages||(n=!0),this.filters.usage.enabled=n,t.setDataTableFilters(this.tableKey,this.filters)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters.usage.open=!1;var r=t.getDataTableTextFilters(this.tableKey);null!==r&&(this.state.textFilter=r)}}])},function(e,t,n){var a=n(562);angular.module("portainer.docker").component("macvlanNodesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showIpAddressColumn:"<",accessToNodeDetails:"<",state:"="}})},function(e,t){var n="app/docker/components/datatables/macvlan-nodes-datatable/macvlanNodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Hostname\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'EngineVersion\')">\n                  引擎\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showIpAddressColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Addr\')">\n                  IP地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.nodes.node({id: item.Id})" ng-if="$ctrl.accessToNodeDetails">{{ item.Hostname }}</a>\n                <span ng-if="!$ctrl.accessToNodeDetails">{{ item.Hostname }}</span>\n              </td>\n              <td>{{ item.Role }}</td>\n              <td>{{ item.EngineVersion }}</td>\n              <td ng-if="$ctrl.showIpAddressColumn">{{ item.Addr }}</td>\n              <td>\n                <span class="label label-{{ item.Status | nodestatusbadge }}">{{ item.Status }}</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="7" class="text-center text-muted">没有可用节点。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(564);angular.module("portainer.docker").component("networksDatatable",{templateUrl:a,controller:"NetworksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",removeAction:"<",offlineMode:"<"}})},function(e,t){var n="app/docker/components/datatables/networks-datatable/networksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerNetworkDelete, DockerNetworkCreate">\n        <button type="button" class="btn btn-sm btn-danger" authorization="DockerNetworkDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.networks.new" authorization="DockerNetworkCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加网络\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  堆栈\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Scope\')">\n                  范围\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Scope\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Scope\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Driver\')">\n                  驱动\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Attachable\')">\n                  可附加\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Attachable\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Attachable\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Internal\')">\n                  内部\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Internal\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Internal\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.Driver\')">\n                  IPAM驱动\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.Config[0].Subnet\')">\n                  IPAM子网\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Config[0].Subnet\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Config[0].Subnet\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IPAM.Config[0].Gateway\')">\n                  IPAM网关\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Config[0].Gateway\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IPAM.Config[0].Gateway\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  主机\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" ng-disabled="$ctrl.disableRemove(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.networks.network({ id: item.Id, nodeName: item.NodeName })" title="{{ item.Name }}">{{ item.Name | truncate:40 }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Name | truncate:40 }}</span>\n              </td>\n              <td>{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td>{{ item.Scope }}</td>\n              <td>{{ item.Driver }}</td>\n              <td>{{ item.Attachable }}</td>\n              <td>{{ item.Internal }}</td>\n              <td>{{ item.IPAM.Driver }}</td>\n              <td>{{ item.IPAM.Config[0].Subnet ? item.IPAM.Config[0].Subnet : \'-\' }}</td>\n              <td>{{ item.IPAM.Config[0].Gateway ? item.IPAM.Config[0].Gateway : \'-\' }}</td>\n              <td ng-if="$ctrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="9" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="9" class="text-center text-muted">没有可用的网络。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(157),n(158);angular.module("portainer.docker").controller("NetworksDatatableController",["$scope","$controller","PREDEFINED_NETWORKS",function(e,t,n){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.disableRemove=function(e){return n.includes(e.Name)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];this.disableRemove(t)||t.Checked===this.state.selectAll||(t.Checked=this.state.selectAll,this.selectItem(t))}}}])},,,function(e,t,n){var a=n(569);angular.module("portainer.docker").component("nodeTasksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/docker/components/datatables/node-tasks-datatable/nodeTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n                  序列\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Spec.ContainerSpec.Image\')">\n                  镜像\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Spec.ContainerSpec.Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Spec.ContainerSpec.Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n                  最后更新\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td><a ui-sref="docker.tasks.task({id: item.Id})" class="monospaced">{{ item.Id }}</a></td>\n              <td><span class="label label-{{ item.Status.State | taskstatusbadge }}">{{ item.Status.State }}</span></td>\n              <td>{{ item.Slot ? item.Slot : \'-\' }}</td>\n              <td>{{ item.Spec.ContainerSpec.Image | hideshasum }}</td>\n              <td>{{ item.Updated | getisodate }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">没有可用的任务。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(571);angular.module("portainer.docker").component("nodesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showIpAddressColumn:"<",accessToNodeDetails:"<"}})},function(e,t){var n="app/docker/components/datatables/nodes-datatable/nodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Hostname\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Hostname\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CPUs\')">\n                  CPU\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CPUs\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CPUs\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Memory\')">\n                  内存\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Memory\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Memory\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'EngineVersion\')">\n                  引擎\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'EngineVersion\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showIpAddressColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Addr\')">\n                  IP地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Addr\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Availability\')">\n                  可用性\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Availability\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Availability\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <a ui-sref="docker.nodes.node({id: item.Id})" ng-if="$ctrl.accessToNodeDetails">{{ item.Name || item.Hostname }}</a>\n                <span ng-if="!$ctrl.accessToNodeDetails">{{ item.Name || item.Hostname }}</span>\n              </td>\n              <td>{{ item.Role }}</td>\n              <td>{{ item.CPUs / 1000000000 }}</td>\n              <td>{{ item.Memory | humansize }}</td>\n              <td>{{ item.EngineVersion }}</td>\n              <td ng-if="$ctrl.showIpAddressColumn">{{ item.Addr }}</td>\n              <td><span class="label label-{{ item.Status | nodestatusbadge }}">{{ item.Status }}</span></td>\n              <td><span class="label label-{{ item.Availability | dockerNodeAvailabilityBadge }}">{{ item.Availability }}</span></td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="7" class="text-center text-muted">没有可用的节点。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(573);angular.module("portainer.docker").component("secretsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<"}})},function(e,t){var n="app/docker/components/datatables/secrets-datatable/secretsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" authorization="DockerSecretDelete, DockerSecretCreate">\n        <button type="button" class="btn btn-sm btn-danger" authorization="DockerSecretDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.secrets.new" authorization="DockerSecretCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加密钥\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" authorization="DockerSecretDelete, DockerSecretCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  创建日期\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" authorization="DockerSecretDelete, DockerSecretCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.secrets.secret({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的密钥。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(575);angular.module("portainer.docker").component("serviceTasksDatatable",{templateUrl:a,controller:"ServiceTasksDatatableController",bindings:{dataset:"<",serviceId:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",agentProxy:"<",textFilter:"=",showTaskLogsButton:"<"}})},function(e,t){var n="app/docker/components/datatables/service-tasks-datatable/serviceTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div style="background-color: #d5e8f3; padding: 2px">\n  <table class="table table-condensed table-hover nowrap-cells">\n    <thead style="background-color: #e7f6ff">\n      <tr>\n        <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.state.open" style="width: 10%;">\n          <a ng-click="$ctrl.changeOrderBy(\'Status.State\')">\n            状态\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status.State\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status.State\' && $ctrl.state.reverseOrder"></i>\n          </a>\n          <span class="space-left">\n            <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.state.enabled">过滤器 <i class="fa fa-filter" aria-hidden="true"></i></span>\n            <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.state.enabled">过滤器 <i class="fa fa-check" aria-hidden="true"></i></span>\n          </span>\n          <div class="dropdown-menu" uib-dropdown-menu>\n            <div class="tableMenu">\n              <div class="menuHeader">\n                按状态过滤\n              </div>\n              <div class="menuContent">\n                <div class="md-checkbox" ng-repeat="filter in $ctrl.filters.state.values track by $index">\n                  <input id="filter_state_{{ $ctrl.serviceId }}_{{ $index }}" type="checkbox" ng-model="filter.display" ng-change="$ctrl.onStateFilterChange()"/>\n                  <label for="filter_state_{{ $ctrl.serviceId }}_{{ $index }}">{{ filter.label }}</label>\n                </div>\n              </div>\n              <div>\n                <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.state.open = false;">关闭</a>\n              </div>\n            </div>\n          </div>\n        </th>\n        <th style="width: 22%;">任务</th>\n        <th>操作</th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n            序列\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'NodeId\')">\n            节点\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n            最后更新\n            <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n            <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n          </a>\n        </th>\n      </tr>\n    </thead>\n    <tbody style="background-color: #f1f9fd;">\n      <tr ng-repeat="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder))">\n        <td class="text-center">\n          <span class="label label-{{ item.Status.State | taskstatusbadge }} space-right">{{ item.Status.State }}</span>\n        </td>\n        <td>\n          <a ng-if="!$ctrl.agentProxy || !item.Container" ui-sref="docker.tasks.task({id: item.Id})" class="monospaced">{{ item.Id }}</a>\n          <a ng-if="$ctrl.agentProxy && item.Container" ui-sref="docker.containers.container({ id: item.Container.Id, nodeName: item.Container.NodeName })" class="monospaced">{{ item.Id }}</a>\n        </td>\n        <td>\n          <container-quick-actions ng-if="!$ctrl.agentProxy || !item.Container" container-id="item.ContainerId" task-id="item.Id" status="item.Status.State" state="$ctrl.state"></container-quick-actions>\n          <container-quick-actions ng-if="$ctrl.agentProxy && item.Container" container-id="item.Container.Id" node-name="item.Container.NodeName" status="item.Status.State" state="$ctrl.state"></container-quick-actions>\n        </td>\n        <td>{{ item.Slot ? item.Slot : \'-\' }}</td>\n        <td>{{ item.NodeId | tasknodename: $ctrl.nodes }}</td>\n        <td>{{ item.Updated | getisodate }}</td>\n      </tr>\n      <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n        <td colspan="5" class="text-center text-muted">没有匹配过滤器的任务。</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(1),n(19);var a=n(48);angular.module("portainer.docker").controller("ServiceTasksDatatableController",["DatatableService",function(e){var t=this;this.state={orderBy:this.orderBy,showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionExec:!0,showQuickActionInspect:!0,showQuickActionAttach:!1},this.filters={state:{open:!1,enabled:!1,values:[]}},this.applyFilters=function(e){for(var n=t.filters,a=0;a<n.state.values.length;a++){var r=n.state.values[a];if(e.Status.State===r.label&&r.display)return!0}return!1},this.onStateFilterChange=function(){for(var e=this.filters.state.values,t=!1,n=0;n<e.length;n++){e[n].display||(t=!0)}this.filters.state.enabled=t},this.changeOrderBy=function(t){this.state.reverseOrder=this.state.orderBy===t&&!this.state.reverseOrder,this.state.orderBy=t,e.setDataTableOrder(this.tableKey,t,this.state.reverseOrder)},this.prepareTableFromDataset=function(){for(var e=[],t=0;t<this.dataset.length;t++){var n=this.dataset[t];e.push({label:n.Status.State,display:!0})}this.filters.state.values=Object(a.a)(e,"label")},this.$onInit=function(){var t;(t=this).state.reverseOrder=!!t.reverseOrder&&t.reverseOrder,this.prepareTableFromDataset();var n=e.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy)}}])},function(e,t,n){var a=n(578);angular.module("portainer.docker").component("servicesDatatableActions",{templateUrl:a,controller:"ServicesDatatableActionsController",bindings:{selectedItems:"=",selectedItemCount:"=",showUpdateAction:"<",showAddAction:"<"}})},function(e,t){var n="app/docker/components/datatables/services-datatable/actions/servicesDatatableActions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="actionBar" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n  <div class="btn-group" role="group" aria-label="...">\n    <button ng-if="$ctrl.showUpdateAction" type="button" class="btn btn-sm btn-primary" authorization="DockerServiceUpdate"\n      ng-disabled="$ctrl.selectedItemCount === 0" ng-click="$ctrl.updateAction($ctrl.selectedItems)">\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>更新\n    </button>\n    <button type="button" class="btn btn-sm btn-danger" authorization="DockerServiceDelete"\n      ng-disabled="$ctrl.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.selectedItems)">\n      <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n    </button>\n  </div>\n  <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.services.new" ng-if="$ctrl.showAddAction" authorization="DockerServiceCreate">\n    <i class="fa fa-plus space-right" aria-hidden="true"></i>添加服务\n  </button>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0),n(1),n(6);angular.module("portainer.docker").controller("ServicesDatatableActionsController",["$q","$state","ServiceService","ServiceHelper","Notifications","ModalService","ImageHelper","WebhookService","EndpointProvider",function(e,t,n,a,r,i,o,s,l){this.scaleAction=function(e){var i=a.serviceToConfig(e.Model);i.Mode.Replicated.Replicas=e.Replicas,n.update(e,i).then(function(){r.success("已成功缩放服务","新的副本数量："+e.Replicas),t.reload()}).catch(function(t){r.error("失败",t,"无法缩放服务"),e.Scale=!1,e.Replicas=e.ReplicaCount})},this.removeAction=function(a){i.confirmDeletion("您想删除选定的服务吗？与选定服务相关联的所有容器也将被删除。",function(i){var o,c;i&&(c=(o=a).length,angular.forEach(o,function(a){n.remove(a).then(function(){return s.webhooks(a.Id,l.endpointID())}).then(function(t){return e.when(0!==t.length&&s.deleteWebhook(t[0].Id))}).then(function(){r.success("已成功删除服务",a.Name)}).catch(function(e){r.error("失败",e,"无法删除服务")}).finally(function(){0==--c&&t.reload()})}))})},this.updateAction=function(e){i.confirmServiceForceUpdate("你想强制更新所选服务吗？与所选服务相关的所有任务将被重新创建。",function(i){if(i){var s=!1;i[0]&&(s=!0),function(e,i){var s=e.length;angular.forEach(e,function(e){var l=a.serviceToConfig(e.Model);i&&(l.TaskTemplate.ContainerSpec.Image=o.removeDigestFromRepository(l.TaskTemplate.ContainerSpec.Image)),l.TaskTemplate.ForceUpdate++,n.update(e,l).then(function(){r.success("已成功更新服务",e.Name)}).catch(function(t){r.error("失败",t,"无法强制更新服务",e.Name)}).finally(function(){0===--s&&t.reload()})})}(e,s)}})}}])},function(e,t,n){var a=n(581);angular.module("portainer.docker").component("servicesDatatable",{templateUrl:a,controller:"ServicesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",agentProxy:"<",showOwnershipColumn:"<",showUpdateAction:"<",showAddAction:"<",showStackColumn:"<",showTaskLogsButton:"<"}})},function(e,t){var n="app/docker/components/datatables/services-datatable/servicesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <services-datatable-actions\n        selected-items="$ctrl.state.selectedItems"\n        selected-item-count="$ctrl.state.selectedItemCount"\n        show-add-action="$ctrl.showAddAction"\n        show-update-action="$ctrl.showUpdateAction"\n      ></services-datatable-actions>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th style="width:55px;">\n                <span class="md-checkbox" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.expandAll()">\n                  <i ng-class="{ \'fas fa-angle-down\': $ctrl.state.expandAll, \'fas fa-angle-right\': !$ctrl.state.expandAll }" aria-hidden="true"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showStackColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  堆栈\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Image\')">\n                  镜像\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Image\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Mode\')">\n                  调度模式\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mode\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mode\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Ports\')">\n                  暴露端口\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Ports\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'UpdatedAt\')">\n                  最后更新\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'UpdatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'UpdatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-click="$ctrl.expandItem(item, !item.Expanded)" dir-paginate-start="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}" class="interactive">\n              <td>\n                <span class="md-checkbox" authorization="DockerServiceUpdate, DockerServiceDelete, DockerServiceCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a><i ng-class="{ \'fas fa-angle-down\': item.Expanded, \'fas fa-angle-right\': !item.Expanded }" class="space-right" aria-hidden="true"></i></a>\n              </td>\n              <td>\n                <a ui-sref="docker.services.service({id: item.Id})" ng-click="$event.stopPropagation()">{{ item.Name }}</a>\n              </td>\n              <td ng-if="$ctrl.showStackColumn">{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td>{{ item.Image | hideshasum }}</td>\n              <td ng-controller="ServicesDatatableActionsController as actionCtrl">\n                {{ item.Mode }}\n                <code>{{ item.Tasks | runningtaskscount }}</code> / <code>{{ item.Mode === \'replicated\' ? item.Replicas : ($ctrl.nodes | availablenodecount:item) }}</code>\n                <span ng-if="item.Mode === \'replicated\' && !item.Scale" authorization="DockerServiceUpdate">\n                  <a class="interactive" ng-click="item.Scale = true; item.ReplicaCount = item.Replicas; $event.stopPropagation();">\n                    <i class="fa fa-arrows-alt-v" aria-hidden="true"></i> 规模\n                  </a>\n                </span>\n                <span ng-if="item.Mode === \'replicated\' && item.Scale">\n                  <input class="input-sm" type="number" ng-model="item.Replicas" on-enter-key="actionCtrl.scaleAction(item)" auto-focus ng-click="$event.stopPropagation();"/>\n                  <a class="interactive" ng-click="item.Scale = false; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="actionCtrl.scaleAction(item); $event.stopPropagation();"><i class="fa fa-check-square"></i></a>\n                </span>\n              </td>\n              <td>\n                <a ng-if="item.Ports && item.Ports.length > 0 && p.PublishedPort" ng-repeat="p in item.Ports" class="image-tag" ng-href="http://{{ $ctrl.state.publicURL }}:{{ p.PublishedPort }}" target="_blank" ng-click="$event.stopPropagation();">\n                  <i class="fa fa-external-link-alt" aria-hidden="true"></i> {{ p.PublishedPort }}:{{ p.TargetPort }}\n                </a>\n                <span ng-if="!item.Ports || item.Ports.length === 0">-</span>\n              </td>\n              <td>{{ item.UpdatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr dir-paginate-end ng-show="item.Expanded">\n              <td></td>\n              <td colspan="8">\n                <service-tasks-datatable\n                  dataset="item.Tasks"\n                  service-id="item.Id"\n                  table-key="service-tasks"\n                  order-by="Status.State"\n                  nodes="$ctrl.nodes"\n                  agent-proxy="$ctrl.agentProxy"\n                  show-task-logs-button="$ctrl.showTaskLogsButton"\n                  text-filter="$ctrl.state.textFilter"\n                ><service-tasks-datatable>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="8" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="8" class="text-center text-muted">没有可用的服务。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);var a=n(4);angular.module("portainer.docker").controller("ServicesDatatableController",["PaginationService","DatatableService","EndpointProvider",function(e,t,n){var r=this;function i(e,t){Object(a.a)(t,function(t){return e.Id===t})&&r.expandItem(e,!0)}this.state={selectAll:!1,expandAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[],expandedItems:[],publicURL:n.endpointPublicURL()},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.expandAll=function(){this.state.expandAll=!this.state.expandAll;for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];this.expandItem(t,this.state.expandAll)}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.expandItem=function(e,n){if(e.Expanded=n,e.Expanded)-1===this.state.expandedItems.indexOf(e.Id)&&this.state.expandedItems.push(e.Id);else{var a=this.state.expandedItems.indexOf(e.Id);a>-1&&this.state.expandedItems.splice(a,1)}t.setDataTableExpandedItems(this.tableKey,this.state.expandedItems)},this.expandItems=function(e){var t=0;this.state.expandedItems=e;for(var n=0;n<this.dataset.length;n++){var a=this.dataset[n];i(a,e),a.Expanded&&++t}t===this.dataset.length&&(this.state.expandAll=!0)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableExpandedItems(this.tableKey);null!==a&&this.expandItems(a);var r=t.getDataTableTextFilters(this.tableKey);null!==r&&(this.state.textFilter=r)}}])},function(e,t,n){var a=n(584);angular.module("portainer.docker").component("tasksDatatable",{templateUrl:a,controller:"TasksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",nodes:"<",showSlotColumn:"<",showLogsButton:"<",agentProxy:"<"}})},function(e,t){var n="app/docker/components/datatables/tasks-datatable/tasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>操作</th>\n              <th ng-if="$ctrl.showSlotColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'Slot\')">\n                  序列\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Slot\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'NodeId\')">\n                  节点\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeId\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Updated\')">\n                  最后更新\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Updated\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td><span class="label label-{{ item.Status.State | taskstatusbadge }}">{{ item.Status.State }}</span></td>\n              <td>\n                <a ng-if="!$ctrl.agentProxy || !item.Container" ui-sref="docker.tasks.task({id: item.Id})" class="monospaced">{{ item.ServiceName }}{{ item.Slot ? \'.\' + item.Slot : \'\' }}{{ \'.\' + item.Id }}</a>\n                <a ng-if="$ctrl.agentProxy && item.Container" ui-sref="docker.containers.container({ id: item.Container.Id, nodeName: item.Container.NodeName })" class="monospaced">{{ item.ServiceName }}{{ item.Slot ? \'.\' + item.Slot : \'\' }}{{ \'.\' + item.Id }}</a>\n              </td>\n              <td>\n                <container-quick-actions ng-if="!$ctrl.agentProxy || !item.Container" container-id="item.ContainerId" task-id="item.Id" status="item.Status.State" state="$ctrl.state"></container-quick-actions>\n                <container-quick-actions ng-if="$ctrl.agentProxy && item.Container" container-id="item.Container.Id" node-name="item.Container.NodeName" status="item.Status.State" state="$ctrl.state"></container-quick-actions>\n              </td>\n              <td ng-if="$ctrl.showSlotColumn">{{ item.Slot ? item.Slot : \'-\' }}</td>\n              <td>{{ item.NodeId | tasknodename: $ctrl.nodes }}</td>\n              <td>{{ item.Updated | getisodate }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="6" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="6" class="text-center text-muted">没有可用的任务。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.docker").controller("TasksDatatableController",["PaginationService","DatatableService",function(e,t){this.state={showQuickActionStats:!0,showQuickActionLogs:!0,showQuickActionExec:!0,showQuickActionInspect:!0,showQuickActionAttach:!1,selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableTextFilters(this.tableKey);null!==a&&(this.state.textFilter=a)}}])},function(e,t,n){var a=n(587);angular.module("portainer.docker").component("volumesDatatable",{templateUrl:a,controller:"VolumesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",showHostColumn:"<",removeAction:"<",showBrowseAction:"<",offlineMode:"<"}})},function(e,t){var n="app/docker/components/datatables/volumes-datatable/volumesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n        <button type="button" class="btn btn-sm btn-danger" authorization="DockerVolumeDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="docker.volumes.new" authorization="DockerVolumeCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加存储卷\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th uib-dropdown dropdown-append-to-body auto-close="disabled" is-open="$ctrl.filters.usage.open">\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n                <div>\n                  <span uib-dropdown-toggle class="table-filter" ng-if="!$ctrl.filters.usage.enabled">过滤器 <i class="fa fa-filter" aria-hidden="true"></i></span>\n                  <span uib-dropdown-toggle class="table-filter filter-active" ng-if="$ctrl.filters.usage.enabled">过滤器 <i class="fa fa-check" aria-hidden="true"></i></span>\n                </div>\n                <div class="dropdown-menu" uib-dropdown-menu>\n                  <div class="tableMenu">\n                    <div class="menuHeader">\n                      按使用情况过滤\n                    </div>\n                    <div class="menuContent">\n                      <div class="md-checkbox">\n                        <input id="filter_usage_usedImages" type="checkbox" ng-model="$ctrl.filters.usage.showUsedVolumes" ng-change="$ctrl.onUsageFilterChange()"/>\n                        <label for="filter_usage_usedImages">已使用的存储卷</label>\n                      </div>\n                      <div class="md-checkbox">\n                        <input id="filter_usage_unusedImages" type="checkbox" ng-model="$ctrl.filters.usage.showUnusedVolumes" ng-change="$ctrl.onUsageFilterChange()"/>\n                        <label for="filter_usage_unusedImages">未使用的存储卷</label>\n                      </div>\n                    </div>\n                    <div>\n                      <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.filters.usage.open = false;">关闭</a>\n                    </div>\n                  </div>\n                </div>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'StackName\')">\n                  堆栈\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'StackName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Driver\')">\n                  驱动\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Driver\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Mountpoint\')">\n                  挂载点\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mountpoint\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Mountpoint\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CreatedAt\')">\n                  已创建\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CreatedAt\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showHostColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'NodeName\')">\n                  主机\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'NodeName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="DockerVolumeDelete, DockerVolumeCreate">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="docker.volumes.volume({ id: item.Id, nodeName: item.NodeName })" class="monospaced" title="{{ item.Id }}">{{ item.Id | truncate:40 }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Id | truncate:40 }}</span>\n                <a authorization="DockerAgentBrowseList" ui-sref="docker.volumes.volume.browse({ id: item.Id, nodeName: item.NodeName })" class="btn btn-xs btn-primary space-left" ng-if="$ctrl.showBrowseAction && !$ctrl.offlineMode">\n                  <i class="fa fa-search"></i> 浏览</a>\n                </a>\n                <span style="margin-left: 10px;" class="label label-warning image-tag space-left" ng-if="item.dangling">未使用</span>\n              </td>\n              <td>{{ item.StackName ? item.StackName : \'-\' }}</td>\n              <td>{{ item.Driver }}</td>\n              <td>{{ item.Mountpoint | truncatelr }}</td>\n              <td>{{ item.CreatedAt | getisodate }}</td>\n              <td ng-if="$ctrl.showHostColumn">{{ item.NodeName ? item.NodeName : \'-\' }}</td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="6" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="6" class="text-center text-muted">没有可用的存储卷。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.docker").controller("VolumesDatatableController",["PaginationService","DatatableService",function(e,t){var n=this;this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.filters={usage:{open:!1,enabled:!1,showUsedVolumes:!0,showUnusedVolumes:!0}},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.applyFilters=function(e){var t=e,a=n.filters;return!!(t.dangling&&a.usage.showUnusedVolumes||!t.dangling&&a.usage.showUsedVolumes)},this.onUsageFilterChange=function(){var e=this.filters.usage,n=!1;e.showUsedVolumes&&e.showUnusedVolumes||(n=!0),this.filters.usage.enabled=n,t.setDataTableFilters(this.tableKey,this.filters)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableFilters(this.tableKey);null!==a&&(this.filters=a),this.filters.usage.open=!1;var r=t.getDataTableTextFilters(this.tableKey);null!==r&&(this.state.textFilter=r)}}])},function(e,t,n){var a=n(590);angular.module("portainer.docker").component("dockerSidebarContent",{templateUrl:a,bindings:{endpointApiVersion:"<",swarmManagement:"<",standaloneManagement:"<",adminAccess:"<",offlineMode:"<"}})},function(e,t){var n="app/docker/components/dockerSidebarContent/dockerSidebarContent.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<li class="sidebar-list">\n  <a ui-sref="docker.dashboard" ui-sref-active="active">仪表盘 <span class="menu-icon fa fa-tachometer-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="!$ctrl.offlineMode" authorization="DockerContainerCreate, PortainerStackCreate">\n  <a ui-sref="portainer.templates" ui-sref-active="active">应用市场 <span class="menu-icon fa fa-rocket fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="portainer.stacks" ui-sref-active="active">堆栈 <span class="menu-icon fa fa-th-list fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.swarmManagement">\n  <a ui-sref="docker.services" ui-sref-active="active">服务 <span class="menu-icon fa fa-list-alt fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.containers" ui-sref-active="active">容器 <span class="menu-icon fa fa-server fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.images" ui-sref-active="active">镜像 <span class="menu-icon fa fa-clone fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.networks" ui-sref-active="active">网络 <span class="menu-icon fa fa-sitemap fa-fw"></span></a>\n</li>\n<li class="sidebar-list">\n  <a ui-sref="docker.volumes" ui-sref-active="active">存储卷 <span class="menu-icon fa fa-cubes fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.endpointApiVersion >= 1.30 && $ctrl.swarmManagement">\n  <a ui-sref="docker.configs" ui-sref-active="active">配置 <span class="menu-icon fa fa-file-code fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.endpointApiVersion >= 1.25 && $ctrl.swarmManagement">\n  <a ui-sref="docker.secrets" ui-sref-active="active">密钥 <span class="menu-icon fa fa-user-secret fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.standaloneManagement && $ctrl.adminAccess && !$ctrl.offlineMode">\n  <a ui-sref="docker.events" ui-sref-active="active">事件 <span class="menu-icon fa fa-history fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.swarmManagement">\n  <a ui-sref="docker.swarm" ui-sref-active="active">集群 <span class="menu-icon fa fa-object-group fa-fw"></span></a>\n</li>\n<li class="sidebar-list" ng-if="$ctrl.standaloneManagement">\n  <a ui-sref="docker.host" ui-sref-active="active">主机 <span class="menu-icon fa fa-th fa-fw"></span></a>\n</li>\n')}]),e.exports=n},function(e,t,n){var a=n(592);angular.module("portainer.docker").component("hostOverview",{templateUrl:a,bindings:{hostDetails:"<",engineDetails:"<",devices:"<",disks:"<",isAgent:"<",offlineMode:"<",agentApiVersion:"<",refreshUrl:"@",browseUrl:"@",jobUrl:"@",isJobEnabled:"<",hostFeaturesEnabled:"<",jobs:"<"},transclude:!0})},function(e,t){var n="app/docker/components/host-overview/host-overview.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主机概览">\n    <a data-toggle="tooltip" title="刷新" ui-sref="{{$ctrl.refreshUrl}}"\n      ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>Docker</rd-header-content>\n</rd-header>\n\n<information-panel-offline ng-if="$ctrl.offlineMode"></information-panel-offline>\n\n<host-details-panel\n  host="$ctrl.hostDetails"\n  is-browse-enabled="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  browse-url="{{$ctrl.browseUrl}}"\n  is-job-enabled="$ctrl.isJobEnabled && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  job-url="{{$ctrl.jobUrl}}"\n></host-details-panel>\n\n<engine-details-panel engine="$ctrl.engineDetails"></engine-details-panel>\n\n<jobs-datatable\n  ng-if="$ctrl.isJobEnabled && $ctrl.jobs && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled"\n  title-text="任务" title-icon="fa-tasks"\n  dataset="$ctrl.jobs"\n  table-key="jobs"\n  order-by="Created" reverse-order="true"\n></jobs-datatable>\n\n<devices-panel ng-if="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled" devices="$ctrl.devices"></devices-panel>\n<disks-panel ng-if="$ctrl.isAgent && $ctrl.agentApiVersion > 1 && !$ctrl.offlineMode && $ctrl.hostFeaturesEnabled" disks="$ctrl.disks"></disks-panel>\n\n<ng-transclude></ng-transclude>')}]),e.exports=n},function(e,t,n){var a=n(594);angular.module("portainer.docker").component("devicesPanel",{templateUrl:a,bindings:{devices:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/devices-panel/devices-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="PCI设备"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>名称</th>\n              <th>供应商</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="$ctrl.devices && $ctrl.devices.length" ng-repeat="device in $ctrl.devices">\n              <td>{{device.Name}}</td>\n              <td>{{device.Vendor}}</td>\n            </tr>\n            <tr ng-if="!$ctrl.devices">\n              <td colspan="2" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.devices.length === 0">\n              <td colspan="2" class="text-center text-muted">\n                没有可用设备。\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(596);angular.module("portainer.docker").component("disksPanel",{templateUrl:a,bindings:{disks:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/disks-panel/disks-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="物理磁盘"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>供应商</th>\n              <th>大小</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="$ctrl.disks" ng-repeat="disk in $ctrl.disks">\n              <td>{{disk.Vendor}}</td>\n              <td>{{disk.Size | humansize}}</td>\n            </tr>\n            <tr ng-if="!$ctrl.disks">\n              <td colspan="2" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.disks.length === 0">\n              <td colspan="2" class="text-center text-muted">\n                没有可用的磁盘。\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(598);angular.module("portainer.docker").component("engineDetailsPanel",{templateUrl:a,bindings:{engine:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/engine-details-panel/engine-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="引擎详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>版本</td>\n              <td>{{ $ctrl.engine.releaseVersion }} <span ng-if="$ctrl.engine.apiVersion">(API: {{ $ctrl.engine.apiVersion }})</span></td>\n            </tr>\n            <tr ng-if="$ctrl.engine.rootDirectory">\n              <td>根目录</td>\n              <td>{{ $ctrl.engine.rootDirectory }}</td>\n            </tr>\n            <tr ng-if="$ctrl.engine.storageDriver">\n              <td>存储驱动</td>\n              <td>{{ $ctrl.engine.storageDriver }}</td>\n            </tr>\n            <tr ng-if="$ctrl.engine.loggingDriver">\n              <td>日志驱动</td>\n              <td>{{ $ctrl.engine.loggingDriver }}</td>\n            </tr>\n            <tr>\n              <td>存储卷插件</td>\n              <td>{{ $ctrl.engine.volumePlugins | arraytostr: \', \' }}</td>\n            </tr>\n            <tr>\n              <td>网络插件</td>\n              <td>{{ $ctrl.engine.networkPlugins | arraytostr: \', \' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(600);angular.module("portainer.docker").component("hostDetailsPanel",{templateUrl:a,bindings:{host:"<",isJobEnabled:"<",isBrowseEnabled:"<",browseUrl:"@",jobUrl:"@"}})},function(e,t){var n="app/docker/components/host-view-panels/host-details-panel/host-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="主机详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>主机名</td>\n              <td>{{ $ctrl.host.name }}</td>\n            </tr>\n            <tr ng-if="$ctrl.host.os">\n              <td>系统信息</td>\n              <td>{{ $ctrl.host.os.type }} {{$ctrl.host.os.arch}}\n                {{$ctrl.host.os.name}}</td>\n            </tr>\n            <tr ng-if="$ctrl.host.kernelVersion">\n              <td>内核版本</td>\n              <td>{{ $ctrl.host.kernelVersion }}</td>\n            </tr>\n            <tr>\n              <td>CPU数量</td>\n              <td>{{ $ctrl.host.totalCPU }}</td>\n            </tr>\n            <tr>\n              <td>内存大小</td>\n              <td>{{ $ctrl.host.totalMemory | humansize }}</td>\n            </tr>\n            <tr ng-if="$ctrl.isBrowseEnabled || $ctrl.isJobEnabled">\n              <td colspan="2">\n                <button class="btn btn-primary btn-sm" title="浏览" ng-if="$ctrl.isBrowseEnabled" ui-sref="{{$ctrl.browseUrl}}">\n                  浏览\n                </button>\n                <button class="btn btn-primary btn-sm" title="执行任务" ng-if="$ctrl.isJobEnabled" ui-sref="{{$ctrl.jobUrl}}">\n                  执行任务\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeAvailabilitySelectController",[function(){this.onChange=function(){this.onSave({availability:this.availability})}}])},function(e,t,n){var a=n(603);angular.module("portainer.docker").component("nodeAvailabilitySelect",{templateUrl:a,controller:"NodeAvailabilitySelectController",bindings:{availability:"<",originalValue:"<",onSave:"&"}})},function(e,t){var n="app/docker/components/host-view-panels/node-availability-select/node-availability-select.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="input-group input-group-sm">\n  <select name="nodeAvailability" class="selectpicker form-control" ng-model="$ctrl.availability"\n    ng-change="$ctrl.onChange()">\n    <option value="active">激活</option>\n    <option value="pause">暂停</option>\n    <option value="drain">排除</option>\n  </select>\n</div>')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeLabelsTableController",[function(){var e=this;e.removeLabel=function(t){null!==e.labels.splice(t,1)&&e.onChangedLabels({labels:e.labels})},e.updateLabel=function(t){t.value===t.originalValue&&t.key===t.originalKey||e.onChangedLabels({labels:e.labels})}}])},function(e,t,n){var a=n(606);angular.module("portainer.docker").component("nodeLabelsTable",{templateUrl:a,controller:"NodeLabelsTableController",bindings:{labels:"<",onChangedLabels:"&"}})},function(e,t){var n="app/docker/components/host-view-panels/node-labels-table/node-labels-table.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="!$ctrl.labels.length">\n  此节点没有标签。\n</div>\n\n<table class="table" ng-if="$ctrl.labels.length">\n  <thead>\n    <tr>\n      <th>标签</th>\n      <th>参数值</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="label in $ctrl.labels">\n      <td>\n        <div class="input-group input-group-sm">\n          <span class="input-group-addon fit-text-size">名称</span>\n          <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo"\n            ng-change="$ctrl.updateLabel(label)">\n        </div>\n      </td>\n      <td>\n        <div class="input-group input-group-sm">\n          <span class="input-group-addon fit-text-size">参数值</span>\n          <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar"\n            ng-change="$ctrl.updateLabel(label)">\n          <span class="input-group-btn">\n            <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n              <i class="fa fa-trash" aria-hidden="true"></i>\n            </button>\n          </span>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(608),n(18),n(3);angular.module("portainer.docker").controller("SwarmNodeDetailsPanelController",["NodeService","LabelHelper","Notifications","$state",function(e,t,n,a){var r=this;r.state={managerAddress:"",hasChanges:!1},r.$onChanges=function(){if(!r.details)return;r.details.role===i&&(r.state.managerAddress="("+r.details.managerAddress+")")},r.addLabel=function(){r.details.nodeLabels.push({key:"",value:"",originalValue:"",originalKey:""})},r.updateNodeLabels=function(e){r.details.nodeLabels=e,r.state.hasChanges=!0},r.updateNodeAvailability=function(e){r.details.availability=e,r.state.hasChanges=!0},r.saveChanges=function(){var i=r.originalNode,o={Name:i.Name,Availability:r.details.availability,Role:i.Role,Labels:t.fromKeyValueToLabelHash(r.details.nodeLabels),Id:i.Id,Version:i.Version};e.updateNode(o).then(function(){n.success("已成功更新节点","节点已更新"),a.go("docker.nodes.node",{id:i.Id},{reload:!0})}).catch(function(e){n.error("失败",e,"无法更新节点")})},r.cancelChanges=function(){r.details.nodeLabels=r.details.nodeLabels.filter(function(e){return e.originalValue||e.originalKey}).map(function(e){return Object.assign(e,{value:e.originalValue,key:e.originalKey})}),r.details.availability=r.originalNode.Availability,r.state.hasChanges=!1};var i="manager"}])},,,function(e,t,n){var a=n(611);angular.module("portainer.docker").component("swarmNodeDetailsPanel",{templateUrl:a,controller:"SwarmNodeDetailsPanelController",bindings:{details:"<",originalNode:"<"}})},function(e,t){var n="app/docker/components/host-view-panels/swarm-node-details-panel/swarm-node-details-panel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title-text="节点详情"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-if="$ctrl.details.name">\n              <td>节点名称</td>\n              <td>{{ $ctrl.details.name }}</td>\n            </tr>\n            <tr>\n              <td>角色</td>\n              <td>{{ $ctrl.details.role }} {{ $ctrl.state.managerAddress }}</td>\n            </tr>\n            <tr>\n              <td>可用性</td>\n              <td>\n                <node-availability-select on-save="$ctrl.updateNodeAvailability(availability)"\n                  availability="$ctrl.details.availability" original-value="$ctrl.details.availability">\n                </node-availability-select>\n              </td>\n            </tr>\n            <tr>\n              <td>状态</td>\n              <td><span class="label label-{{ $ctrl.details.status | nodestatusbadge }}">{{\n                  $ctrl.details.status }}</span></td>\n            </tr>\n            <tr ng-if=" $ctrl.details.engineLabels.length">\n              <td>引擎标签</td>\n              <td>{{ $ctrl.details.engineLabels | labelsToStr:\', \' }}</td>\n            </tr>\n            <tr>\n              <td>\n                <div class="nopadding">\n                  <a class="btn btn-default btn-sm pull-right" ng-click="$ctrl.addLabel(node)">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> 标签\n                  </a>\n                </div>\n                节点标签\n              </td>\n              <td></td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <node-labels-table labels="$ctrl.details.nodeLabels"\n                  on-changed-labels="$ctrl.updateNodeLabels(labels)"></node-labels-table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class="btn-toolbar" role="toolbar">\n                  <div class="btn-group" role="group">\n                    <button type="button" class="btn btn-primary btn-sm"\n                      ng-disabled="!$ctrl.state.hasChanges" ng-click="$ctrl.saveChanges()">\n                      应用更改\n                    </button>\n                    <button type="button" class="btn btn-default btn-sm dropdown-toggle"\n                      data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                      <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                      <li><a ng-click="$ctrl.cancelChanges()">还原更改</a></li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(613);angular.module("portainer.docker").component("porImageRegistry",{templateUrl:a,controller:"porImageRegistryController",bindings:{image:"=",registry:"=",autoComplete:"<",labelClass:"@",inputClass:"@"},require:{form:"^form"}})},function(e,t){var n="app/docker/components/imageRegistry/porImageRegistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="form-group">\n  <label for="image_name" ng-class="$ctrl.labelClass" class="control-label text-left">镜像</label>\n  <div ng-class="$ctrl.inputClass">\n    <input type="text" class="form-control" uib-typeahead="image for image in $ctrl.availableImages | filter:$viewValue | limitTo:5"\n      ng-model="$ctrl.image" name="image_name" placeholder="例如 myImage:myTag" required>\n  </div>\n  <label for="image_registry" class="margin-sm-top control-label text-right" ng-class="$ctrl.labelClass">\n    仓库\n  </label>\n  <div ng-class="$ctrl.inputClass" class="margin-sm-top">\n    <select ng-options="registry as registry.Name for registry in $ctrl.availableRegistries" ng-model="$ctrl.registry" id="image_registry"\n      class="form-control"></select>\n  </div>\n</div>\n<div class="form-group" ng-show="$ctrl.form.image_name.$invalid">\n  <div class="col-sm-12 small text-warning">\n    <div ng-messages="$ctrl.form.image_name.$error">\n      <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 镜像名称是必需的。</p>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(4);angular.module("portainer.docker").controller("porImageRegistryController",["$q","RegistryService","DockerHubService","ImageService","Notifications",function(e,t,n,r,i){var o=this;e.all({registries:t.registries(),dockerhub:n.dockerhub(),availableImages:o.autoComplete?r.images():[]}).then(function(e){var t=e.dockerhub,n=e.registries;o.availableImages=r.getUniqueTagListFromImages(e.availableImages),o.availableRegistries=[t].concat(n),o.registry.Id?o.registry=Object(a.a)(o.availableRegistries,{Id:o.registry.Id}):o.registry=t}).catch(function(e){i.error("失败",e,"无法检索仓库")})}])},function(e,t,n){var a=n(616);angular.module("portainer.docker").component("logViewer",{templateUrl:a,controller:"LogViewerController",bindings:{data:"=",displayTimestamps:"=",logCollectionChange:"<",sinceTimestamp:"=",lineCount:"="}})},function(e,t){var n="app/docker/components/log-viewer/logViewer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-file-alt" title-text="日志查看器设置"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                自动刷新日志\n                <portainer-tooltip position="bottom" message="禁用此选项可以让您暂停日志的收集进程和自动滚动显示。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="$ctrl.state.logCollection" ng-change="$ctrl.state.autoScroll = $ctrl.state.logCollection; $ctrl.logCollectionChange($ctrl.state.logCollection)"><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                折叠行\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="$ctrl.state.wrapLines"><i></i>\n              </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                显示时间戳\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n               <input type="checkbox" ng-model="$ctrl.displayTimestamps"><i></i>\n               </label>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="logs_since" class="col-sm-1 control-label text-left">\n              获取\n            </label>\n            <div class="col-sm-2">\n              <select class="form-control" ng-model="$ctrl.sinceTimestamp" id="logs_since">\n                <option selected value="">全部日志</option>\n                <option ng-repeat="dt in $ctrl.state.availableSinceDatetime" ng-value="dt.value" title="{{ dt.value }}">{{ dt.desc }}</option>\n              </select>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="logs_search" class="col-sm-1 control-label text-left">\n              搜索\n            </label>\n            <div class="col-sm-11">\n              <input class="form-control" type="text" name="logs_search" ng-model="$ctrl.state.search" ng-change="$ctrl.state.selectedLines.length = 0;" placeholder="过滤器...">\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="lines_count" class="col-sm-1 control-label text-left">\n              显示行数\n            </label>\n            <div class="col-sm-11">\n              <input class="form-control" type="number" name="lines_count" ng-model="$ctrl.lineCount" placeholder="输入指定的显示行数...">\n            </div>\n          </div>\n          <div class="form-group" ng-if="$ctrl.state.copySupported">\n            <label class="col-sm-1 control-label text-left">\n              操作\n            </label>\n            <div class="col-sm-11">\n              <button class="btn btn-primary btn-sm" ng-click="$ctrl.copy()" ng-disabled="($ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]) || !$ctrl.state.filteredLogs.length"><i class="fa fa-copy space-right" aria-hidden="true"></i>复制</button>\n              <button class="btn btn-primary btn-sm" ng-click="$ctrl.copySelection()" ng-disabled="($ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]) || !$ctrl.state.filteredLogs.length || !$ctrl.state.selectedLines.length"><i class="fa fa-copy space-right" aria-hidden="true"></i>复制选择的行</button>\n              <button class="btn btn-primary btn-sm" ng-click="$ctrl.clearSelection()" ng-disabled="$ctrl.state.selectedLines.length === 0"><i class="fa fa-times space-right" aria-hidden="true"></i>取消选择</button>\n              <span>\n                <i id="refreshRateChange" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" style="height:54%;">\n  <div class="col-sm-12" style="height:100%;">\n    <pre ng-class="{ \'wrap_lines\': $ctrl.state.wrapLines }" class="log_viewer" scroll-glue="$ctrl.state.autoScroll" force-glue>\n      <div ng-repeat="line in $ctrl.state.filteredLogs = ($ctrl.data | filter:$ctrl.state.search) track by $index" class="line" ng-if="line"><p class="inner_line" ng-click="$ctrl.selectLine(line)" ng-class="{ \'line_selected\': $ctrl.state.selectedLines.indexOf(line) > -1 }">{{ line }}</p></div>\n      <div ng-if="!$ctrl.state.filteredLogs.length" class="line"><p class="inner_line">没有与过滤器 \'{{ $ctrl.state.search }}\' 匹配的日志行</p></div>\n      <div ng-if="$ctrl.state.filteredLogs.length === 1 && !$ctrl.state.filteredLogs[0]" class="line"><p class="inner_line">没有可用的日志</p></div>\n    </pre>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t),function(e){n(5);var t=n(2),a=n.n(t);angular.module("portainer.docker").controller("LogViewerController",["clipboard",function(t){this.state={availableSinceDatetime:[{desc:"Last day",value:a()().subtract(1,"days").format()},{desc:"Last 4 hours",value:a()().subtract(4,"hours").format()},{desc:"Last hour",value:a()().subtract(1,"hours").format()},{desc:"Last 10 minutes",value:a()().subtract(10,"minutes").format()}],copySupported:t.supported,logCollection:!0,autoScroll:!0,wrapLines:!0,search:"",filteredLogs:[],selectedLines:[]},this.copy=function(){t.copyText(this.state.filteredLogs),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(2e3)},this.copySelection=function(){t.copyText(this.state.selectedLines),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(2e3)},this.clearSelection=function(){this.state.selectedLines=[]},this.selectLine=function(e){var t=this.state.selectedLines.indexOf(e);-1===t?this.state.selectedLines.push(e):this.state.selectedLines.splice(t,1)}}])}.call(this,n(30))},function(e,t,n){var a=n(619);angular.module("portainer.docker").component("networkMacvlanForm",{templateUrl:a,controller:"NetworkMacvlanFormController",bindings:{data:"=",applicationState:"<"}})},function(e,t){var n="app/docker/components/network-macvlan-form/networkMacvlanForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    Macvlan配置\n  </div>\n  \x3c!-- selector --\x3e\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      要创建Macvlan网络，您需要先创建一个配置，然后再从此配置创建网络。\n    </span>\n  </div>\n  <div class="col-sm-12">\n    <div class="form-group" style="margin-bottom: 0">\n      <div class="boxselector_wrapper">\n        <div>\n          <input type="radio" id="network_config" ng-model="$ctrl.data.Scope" value="local">\n          <label for="network_config">\n            <div class="boxselector_header">\n              <i class="fa fa-cog" aria-hidden="true" style="margin-right: 2px;"></i>\n              配置\n            </div>\n            <p>在部署之前配置一个网络</p>\n          </label>\n        </div>\n        <div>\n          <input type="radio" id="network_deploy" ng-model="$ctrl.data.Scope" value="swarm" ng-disabled="$ctrl.availableNetworks.length === 0">\n          <label for="network_deploy" ng-class="$ctrl.availableNetworks.length === 0 ? \'boxselector_disabled\' : \'\'">\n            <div class="boxselector_header">\n              <i class="fa fa-sitemap" aria-hidden="true" style="margin-right: 2px;"></i>\n              创建\n            </div>\n            <p>从已有的配置创建一个网络</p>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !selector --\x3e\n\n  <ng-form name="macvlanConfigurationForm">\n    \x3c!-- configuration-inputs --\x3e\n    <div ng-show="$ctrl.data.Scope === \'local\'">\n      \x3c!-- network-card-input --\x3e\n      <div class="form-group">\n        <label for="network_card" class="col-sm-3 col-lg-2 control-label text-left">父级网卡</label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="network_card" ng-model="$ctrl.data.ParentNetworkCard" placeholder="例如 eth0 或 ens160 ..."\n            ng-required="$ctrl.data.Scope === \'local\' && !$ctrl.data.ParentNetworkCard">\n        </div>\n      </div>\n      <div class="form-group" ng-show="macvlanConfigurationForm.network_card.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="macvlanConfigurationForm.network_card.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 必须指定父级网卡。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- network-card-input --\x3e\n      \x3c!-- nodes-selector --\x3e\n      <div ng-if="$ctrl.applicationState.endpoint.mode.agentProxy && $ctrl.applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n        <div class="form-group">\n          <div class="col-sm-12">\n            <macvlan-nodes-datatable title-text="选择要部署本地配置的节点" title-icon="fa-hdd"\n              dataset="$ctrl.nodes" table-key="nodes" state="$ctrl.data.DatatableState" order-by="Hostname" show-ip-address-column="$ctrl.applicationState.endpoint.apiVersion >= 1.25"\n              access-to-node-details="!$ctrl.applicationState.application.authentication || $ctrl.isAdmin" name="node_selector"\n              ng-model="tmp" ng-required="$ctrl.requiredNodeSelection()"></macvlan-nodes-datatable>\n          </div>\n        </div>\n        <div class="form-group" ng-show="macvlanConfigurationForm.node_selector.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="macvlanConfigurationForm.node_selector.$error">\n              <p ng-message="required">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 必须至少选择一个节点。</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !nodes-selector --\x3e\n    </div>\n    \x3c!-- configuration-inputs --\x3e\n    \x3c!-- deploy-inputs --\x3e\n    <div ng-show="$ctrl.data.Scope === \'swarm\'">\n      \x3c!-- configuration-selector --\x3e\n      \x3c!-- network-input --\x3e\n      <div class="form-group">\n        <label for="config_network" class="col-sm-2 col-lg-1 control-label text-left">配置</label>\n        <div class="col-sm-9">\n          <select class="form-control" ng-options="net.Name for net in $ctrl.availableNetworks" ng-model="$ctrl.data.SelectedNetworkConfig"\n            name="config_network" ng-required="$ctrl.requiredConfigSelection()">\n            <option selected disabled hidden value="">选择一个网络</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !network-input --\x3e\n      <div class="form-group" ng-show="macvlanConfigurationForm.config_network.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="macvlanConfigurationForm.config_network.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 选择一个网络配置。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !configuration-selector --\x3e\n    </div>\n    \x3c!-- deploy-inputs --\x3e\n  </ng-form>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(18);angular.module("portainer.docker").controller("NetworkMacvlanFormController",["$q","NodeService","NetworkService","Notifications","StateManager","Authentication",function(e,t,n,a,r,i){var o=this;o.requiredNodeSelection=function(){return"local"===o.data.Scope&&void 0!==o.data.DatatableState&&0===o.data.DatatableState.selectedItemCount},o.requiredConfigSelection=function(){return"swarm"===o.data.Scope&&!o.data.SelectedNetworkConfig},function(){if(r.getState().application.authentication){var s=i.isAdmin();o.isAdmin=s}var l=o.applicationState.endpoint.mode.provider,c=o.applicationState.endpoint.apiVersion;e.all({nodes:"DOCKER_SWARM_MODE"!==l||t.nodes(),networks:n.networks("DOCKER_STANDALONE"===l||"DOCKER_SWARM_MODE"===l,!1,"DOCKER_SWARM_MODE"===l&&c>=1.25)}).then(function(e){!0!==e.nodes&&(o.nodes=e.nodes),o.availableNetworks=e.networks.filter(function(e){return!0===e.ConfigOnly})}).catch(function(e){a.error("失败",e,"无法检索macvlan的信息")})}()}])},function(e,t,n){var a=n(622);angular.module("portainer.docker").component("volumesNfsForm",{templateUrl:a,bindings:{data:"="}})},function(e,t){var n="app/docker/components/volumesNFSForm/volumesnfsForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="form-group col-md-12">\n    <label for="useNFS" class="control-label text-left">\n      使用NFS存储卷\n    </label>\n    <label class="switch" style="margin-left: 20px;">\n      <input type="checkbox" name="useNFS" ng-model="$ctrl.data.useNFS">\n      <i></i>\n    </label>\n  </div>\n  \x3c!-- NFS-settings --\x3e\n  <div ng-show="$ctrl.data.useNFS">\n    <ng-form class="form-horizontal" name="nfsInformationForm">\n      <div class="col-sm-12 form-section-title">\n        NFS设置\n      </div>\n      \x3c!-- address-input --\x3e\n      <div class="form-group col-md-12">\n        <label for="nfs_address" class="col-sm-2 col-md-1 control-label text-left">地址</label>\n        <div class="col-sm-10 col-md-11">\n          <input type="text" class="form-control" ng-model="$ctrl.data.serverAddress" name="nfs_address" placeholder="例如 my.nfs-server.com 或 xxx.xxx.xxx.xxx"\n            required>\n        </div>\n      </div>\n      <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_address.$invalid">\n        <div class="small text-warning">\n          <div ng-messages="nfsInformationForm.nfs_address.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !address-input --\x3e\n      \x3c!-- version-input --\x3e\n      <div class="form-group col-md-12">\n        <label for="nfs_version" class="col-sm-2 col-md-1 control-label text-left">NFS版本</label>\n        <div class="col-sm-10 col-md-11">\n          <select class="form-control" ng-model="$ctrl.data.version" name="nfs_version" ng-options="version for version in $ctrl.data.versions"\n            required></select>\n        </div>\n      </div>\n      <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_version.$invalid">\n        <div class="small text-warning">\n          <div ng-messages="nfsInformationForm.nfs_version.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !version-input --\x3e\n      \x3c!-- mount-point-input --\x3e\n      <div class="form-group col-md-12">\n        <label for="nfs_mountpoint" class="col-sm-2 col-md-1 control-label text-left">挂载点</label>\n        <div class="col-sm-10 col-md-11">\n          <input type="text" class="form-control" ng-model="$ctrl.data.mountPoint" name="nfs_mountpoint" placeholder="例如 /export/share 或 :/export/share"\n            required>\n        </div>\n      </div>\n      <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_mountpoint.$invalid">\n        <div class="small text-warning">\n          <div ng-messages="nfsInformationForm.nfs_mountpoint.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !mount-point-input --\x3e\n      \x3c!-- options-input --\x3e\n      <div class="form-group col-md-12">\n        <label for="nfs_options" class="col-sm-2 col-md-1 control-label text-left">选项\n          <portainer-tooltip position="bottom" message="使用逗号分隔的选项列表"></portainer-tooltip>\n        </label>\n        <div class="col-sm-10 col-md-11">\n          <input type="text" class="form-control" ng-model="$ctrl.data.options" name="nfs_options" placeholder="例如 rw,noatime,tcp ..."\n            required>\n        </div>\n      </div>\n      <div class="form-group col-md-12" ng-show="nfsInformationForm.nfs_options.$invalid">\n        <div class="small text-warning">\n          <div ng-messages="nfsInformationForm.nfs_options.$error">\n            <p ng-message="required">\n              <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !options-input --\x3e\n    </ng-form>\n  </div>\n  \x3c!-- !NFS-settings --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(20),n(42),n(18),n(224),n(225),n(5),n(625);var a=n(4),r=n(50),i=n(28);function o(e,t){return t.some(function(t){return-1!==e.indexOf(t)})}angular.module("portainer.docker").filter("visualizerTask",function(){return function(e){var t=Object(i.a)(e);return o(t,["new","allocated","assigned","accepted","complete","preparing"])?"info":o(t,["pending"])?"warning":o(t,["shutdown","failed","rejected"])?"stopped":"running"}}).filter("visualizerTaskBorderColor",function(){return function(e){return function(e){for(var t="#",n=0;n<3;)t+=("00"+(e>>8*n++&255).toString(16)).slice(-2);return t}(function(e){for(var t=0,n=0;n<e.length;n++)t=e.charCodeAt(n)+((t<<5)-t);return t}(e))}}).filter("taskstatusbadge",function(){return function(e){var t=Object(i.a)(e),n="default";return o(t,["new","allocated","assigned","accepted","preparing","ready","starting","remove"])?n="info":o(t,["pending"])?n="warning":o(t,["shutdown","failed","rejected","orphaned"])?n="danger":o(t,["complete"])?n="primary":o(t,["running"])&&(n="success"),n}}).filter("taskhaslogs",function(){return function(e){return["running","complete","failed","shutdown"].indexOf(e)>-1}}).filter("containerstatusbadge",function(){return function(e){var t=Object(i.a)(e);return o(t,["paused","starting","unhealthy"])?"warning":o(t,["created"])?"info":o(t,["stopped","dead","exited"])?"danger":"success"}}).filter("nodestatusbadge",function(){return function(e){return"down"===e||"Unhealthy"===e?"danger":"success"}}).filter("dockerNodeAvailabilityBadge",function(){return function(e){return"pause"===e?"warning":"drain"===e?"danger":"success"}}).filter("trimcontainername",function(){return function(e){return e?0===e.indexOf("/")?e.replace("/",""):e:""}}).filter("getstatetext",function(){return function(e){return void 0===e?"":e.Dead?"终止":e.Ghost&&e.Running?"僵死":e.Running&&e.Paused?"运行 (已暂停)":e.Running?"运行":"created"===e.Status?"创建":"停止"}}).filter("getstatelabel",function(){return function(e){return void 0===e?"label-default":e.Ghost&&e.Running?"label-important":e.Running?"label-success":"label-default"}}).filter("containername",function(){return function(e){var t=e.Names[0];return t.substring(1,t.length)}}).filter("swarmversion",function(){return function(e){return Object(r.a)(e,"/")[1]}}).filter("swarmhostname",function(){return function(e){return Object(r.a)(e.Names[0],"/")[1]}}).filter("repotags",function(){return function(e){return e.RepoTags&&e.RepoTags.length>0?"<none>:<none>"===e.RepoTags[0]?[]:e.RepoTags:[]}}).filter("command",function(){return function(e){if(e)return e.join(" ")}}).filter("hideshasum",function(){return function(e){return e?e.split("@sha")[0]:""}}).filter("availablenodecount",["ConstraintsHelper",function(e){return function(t,n){for(var a=0,r=0;r<t.length;r++){var i=t[r];"active"===i.Availability&&"ready"===i.Status&&e.matchesServiceConstraints(n,i)&&a++}return a}}]).filter("runningtaskscount",function(){return function(e){for(var t=0,n=0;n<e.length;n++){var a=e[n];"running"===a.Status.State&&"running"===a.DesiredState&&t++}return t}}).filter("runningcontainers",function(){return function(e){return e.filter(function(e){return"running"===e.State}).length}}).filter("stoppedcontainers",function(){return function(e){return e.filter(function(e){return"exited"===e.State}).length}}).filter("imagestotalsize",function(){return function(e){for(var t=0,n=0;n<e.length;n++){t+=e[n].VirtualSize}return t}}).filter("tasknodename",function(){return function(e,t){var n=Object(a.a)(t,{Id:e});return n?n.Hostname:""}}).filter("imagelayercommand",function(){return function(e){return e.replace("/bin/sh -c #(nop) ","").replace("/bin/sh -c ","RUN ")}}).filter("trimshasum",function(){return function(e){return 0===e.indexOf("sha256:")?e.substring(7,19):Object(r.a)(e,"@sha256")[0]}})},,,function(e,t){angular.module("portainer.docker").factory("ConfigHelper",[function(){"use strict";return{flattenConfig:function(e){return e?{Id:e.ConfigID,Name:e.ConfigName,FileName:e.File.Name,Uid:e.File.UID,Gid:e.File.GID,Mode:e.File.Mode}:{}},configConfig:function(e){return e?{ConfigID:e.Id,ConfigName:e.Name,File:{Name:e.FileName||e.Name,UID:e.Uid||"0",GID:e.Gid||"0",Mode:e.Mode||292}}:{}}}}])},function(e,t,n){"use strict";n.r(t);n(157),n(158),n(42),n(20),n(226);var a=n(4);function r(e,t,n){this.op=e,this.value=n,this.key=t}var i={id:{nodeId:"node.id",nodeHostname:"node.hostname",nodeRole:"node.role",nodeLabels:"node.labels.",engineLabels:"engine.labels."},op:{eq:"==",neq:"!="}};function o(e,t){return!t||t.op===i.op.eq&&e===t.value||t.op===i.op.neq&&e!==t.value}function s(e,t){return!t||void 0!==Object(a.a)(e,function(e){return e.key===t.key&&e.value===t.value})}function l(e,t){return e.split(t).pop().trim()}function c(e,t,n){return e.split(t).shift().trim().replace(n,"")}angular.module("portainer.docker").factory("ConstraintsHelper",[function(){return{transformConstraints:function(e){for(var t={},n=0;n<e.length;n++){var a,o=e[n];o.includes(i.op.eq)?a=i.op.eq:o.includes(i.op.neq)&&(a=i.op.neq);var s=l(o,a),d="";switch(!0){case o.includes(i.id.nodeId):t.nodeId=new r(a,d,s);break;case o.includes(i.id.nodeHostname):t.nodeHostname=new r(a,d,s);break;case o.includes(i.id.nodeRole):t.nodeRole=new r(a,d,s);break;case o.includes(i.id.nodeLabels):d=c(o,a,i.id.nodeLabels),t.nodeLabels=new r(a,d,s);break;case o.includes(i.id.engineLabels):d=c(o,a,i.id.engineLabels),t.engineLabels=new r(a,d,s)}}return t},matchesServiceConstraints:function(e,t){if(void 0===e.Constraints||0===e.Constraints.length)return!0;var n=this.transformConstraints(angular.copy(e.Constraints));return!!(o(t.Id,n.nodeId)&&o(t.Hostname,n.nodeHostname)&&o(t.Role,n.nodeRole)&&s(t.Labels,n.nodeLabels)&&s(t.EngineLabels,n.engineLabels))}}}])},function(e,t,n){"use strict";n.r(t);n(5),n(42),n(3);var a=n(328),r=n.n(a);angular.module("portainer.docker").factory("ContainerHelper",[function(){var e={commandStringToArray:function(e){return r()(e)},commandArrayToString:function(e){return e.map(function(e){return"'"+e+"'"}).join(" ")},configFromContainer:function(e){var t=e.Config;t.HostConfig=e.HostConfig,t.name=e.Name.replace(/^\//g,"");var n=t.HostConfig.NetworkMode;t.NetworkingConfig={EndpointsConfig:{}},t.NetworkingConfig.EndpointsConfig=e.NetworkSettings.Networks,-1!==n.indexOf("container:")&&(delete t.Hostname,delete t.ExposedPorts);var a=[],r={};for(var i in e.Mounts)if({}.hasOwnProperty.call(e.Mounts,i)){var o=e.Mounts[i],s=o.Name||o.Source,l=o.Destination;if(s&&l){var c=s+":"+l;r[l]={},!1===o.RW&&(c+=":ro"),a.push(c)}}return t.HostConfig.Binds=a,t.Volumes=r,t}};return e}])},function(e,t,n){"use strict";n.r(t);n(20),n(3),n(5);var a=n(262);angular.module("portainer.docker").factory("ImageHelper",[function(){var e={};function t(e,t){var n=e.split(":"),a=n[0],r=n[1]?n[1]:"latest";return t&&(a=t+"/"+n[0]),{image:a,tag:r}}return e.extractImageAndRegistryFromRepository=function(e){var t=null,n=e;return Object(a.a)(e)["/"]>=1&&(t=e.substr(0,e.indexOf("/")),Object(a.a)(t)["."]>0?n=e.substr(e.indexOf("/")+1):t=null),{registry:t,image:n}},e.getImagesNamesForDownload=function(e){return{names:e.map(function(e){return"<none>:<none>"!==e.RepoTags[0]?e.RepoTags[0]:e.Id})}},e.createImageConfigForCommit=function(e,n){var a=t(e,n);return{repo:a.image,tag:a.tag}},e.createImageConfigForContainer=function(e,n){var a=t(e,n);return{fromImage:a.image,tag:a.tag}},e.removeDigestFromRepository=function(e){return e.split("@sha")[0]},e}])},function(e,t,n){"use strict";n.r(t);var a=n(76);angular.module("portainer.docker").factory("InfoHelper",[function(){var e={determineEndpointMode:function(e,t){var n={provider:"",role:"",agentProxy:!1};return 2===t&&(n.agentProxy=!0),!e.Swarm||Object(a.a)(e.Swarm.NodeID)?"vSphere Integrated Containers"===e.ID?n.provider="VMWARE_VIC":n.provider="DOCKER_STANDALONE":(n.provider="DOCKER_SWARM_MODE",e.Swarm.ControlAvailable?n.role="MANAGER":n.role="WORKER"),n}};return e}])},function(e,t,n){"use strict";n.r(t);n(6),n(1),n(19),n(34),n(3);angular.module("portainer.docker").factory("LabelHelper",[function(){return{fromLabelHashToKeyValue:function(e){return e?Object.keys(e).map(function(t){return{key:t,value:e[t],originalKey:t,originalValue:e[t],added:!0}}):[]},fromKeyValueToLabelHash:function(e){var t={};return e&&e.forEach(function(e){e.key&&(t[e.key]=e.value)}),t}}}])},function(e,t,n){"use strict";n.r(t);n(20),n(42);angular.module("portainer.docker").factory("LogHelper",[function(){var e={formatLogs:function(e,t){return e=e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),t&&(e=(e=e.substring(8)).replace(/\n(.{8})/g,"\n\r")),e.split("\n")}};return e}])},function(e,t){angular.module("portainer.docker").factory("NodeHelper",[function(){"use strict";return{nodeToConfig:function(e){return{Name:e.Spec.Name,Role:e.Spec.Role,Labels:e.Spec.Labels,Availability:e.Spec.Availability}}}}])},function(e,t){angular.module("portainer.docker").factory("SecretHelper",[function(){"use strict";return{flattenSecret:function(e){return e?{Id:e.SecretID,Name:e.SecretName,FileName:e.File.Name,Uid:e.File.UID,Gid:e.File.GID,Mode:e.File.Mode}:{}},secretConfig:function(e){return e?{SecretID:e.Id,SecretName:e.Name,File:{Name:e.FileName,UID:e.Uid||"0",GID:e.Gid||"0",Mode:e.Mode||444}}:{}}}}])},function(e,t,n){"use strict";n.r(t);n(20),n(19),n(34),n(227),n(5),n(1),n(6);var a=n(2),r=n.n(a);angular.module("portainer.docker").factory("ServiceHelper",[function(){var e={associateTasksToService:function(e,t){e.Tasks=[];for(var n=[],a=0;a<t.length;a++){var r=t[a];r.ServiceId===e.Id?(e.Tasks.push(r),r.ServiceName=e.Name):n.push(r)}t=n},serviceToConfig:function(e){return{Name:e.Spec.Name,Labels:e.Spec.Labels,TaskTemplate:e.Spec.TaskTemplate,Mode:e.Spec.Mode,UpdateConfig:e.Spec.UpdateConfig,Networks:e.Spec.Networks,EndpointSpec:e.Spec.EndpointSpec}},translateKeyValueToPlacementPreferences:function(e){if(e){var t=[];return e.forEach(function(e){if(e.strategy&&""!==e.strategy&&e.value&&""!==e.value)switch(e.strategy.toLowerCase()){case"spread":t.push({Spread:{SpreadDescriptor:e.value}})}}),t}return[]},translateKeyValueToPlacementConstraints:function(e){if(e){var t=[];return e.forEach(function(e){e.key&&""!==e.key&&e.value&&""!==e.value&&t.push(e.key+e.operator+e.value)}),t}return[]},translateEnvironmentVariables:function(e){if(e){var t=[];return e.forEach(function(e){var n=e.indexOf("="),a=[e.slice(0,n),e.slice(n+1)],r=a.length>1?a[1]:"";t.push({key:a[0],value:r,originalKey:a[0],originalValue:r,added:!0})}),t}return[]},translateEnvironmentVariablesToEnv:function(e){if(e){var t=[];return e.forEach(function(e){e.key&&""!==e.key&&t.push(e.key+"="+e.value)}),t}return[]},translatePreferencesToKeyValue:function(e){if(e){var t=[];return e.forEach(function(e){e.Spread&&t.push({strategy:"Spread",value:e.Spread.SpreadDescriptor})}),t}return[]},translateConstraintsToKeyValue:function(e){if(e){var t=[];return e.forEach(function(e){var n=function(e){var t=e.indexOf("==");return t>=0?[t,"=="]:[e.indexOf("!="),"!="]}(e),a=e.slice(0,n[0]),r=n[1],i=e.slice(n[0]+2);t.push({key:a,value:i,operator:r,originalKey:a,originalValue:i})}),t}},translateHumanDurationToNanos:function(e){var t,n=e.match(/^([0-9]+)(h|m|s|ms|us|ns)$/i);if(null!==n&&3===n.length){var a=parseInt(n[1],10),i=n[2];switch(i){case"ns":t=a;break;case"us":t=1e3*a;break;default:t=1e6*r.a.duration(a,i).asMilliseconds()}}return t},translateNanosToHumanDuration:function(e){var t="0s",n={ns:1};return n.us=1e3*n.ns,n.ms=1e3*n.us,n.s=1e3*n.ms,n.m=60*n.s,n.h=60*n.m,Object.keys(n).forEach(function(a){e%n[a]==0&&e/n[a]>0&&(t=e/n[a]+a)}),t},translateLogDriverOptsToKeyValue:function(e){var t=[];return e&&Object.keys(e).forEach(function(n){t.push({key:n,value:e[n],originalKey:n,originalValue:e[n],added:!0})}),t},translateKeyValueToLogDriverOpts:function(e){var t={};return e&&e.forEach(function(e){e.key&&""!==e.key&&e.value&&""!==e.value&&(t[e.key]=e.value)}),t},translateHostsEntriesToHostnameIP:function(e){var t=[];return e&&e.forEach(function(e){if(e.indexOf(" ")&&2===e.split(" ").length){var n=e.split(" ");t.push({hostname:n[1],ip:n[0]})}}),t},translateHostnameIPToHostsEntries:function(e){var t=[];return e&&e.forEach(function(e){e.ip&&e.hostname&&t.push(e.ip+" "+e.hostname)}),t}};return e}])},function(e,t){angular.module("portainer.docker").factory("TaskHelper",[function(){"use strict";var e={associateContainerToTask:function(e,t){for(var n=0;n<t.length;n++){var a=t[n];if(e.ContainerId===a.Id){e.Container=a;break}}}};return e}])},function(e,t,n){"use strict";n.r(t);n(11),n(1),n(6);angular.module("portainer.docker").factory("VolumeHelper",[function(){var e={createDriverOptions:function(e){var t={};return e.forEach(function(e){t[e.name]=e.value}),t},isVolumeUsedByAService:function(e,t){for(var n=0;n<t.length;n++)for(var a=t[n].Mounts,r=0;r<a.length;r++){if(a[r].Source===e.Id)return!0}return!1}};return e}])},function(e,t){angular.module("portainer.app").factory("ContainersInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Containers;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("ImagesInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Images;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("InfoInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Info;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("NetworksInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Networks;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("VersionInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Version;if(void 0!==r)return r}}return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("VolumesInterceptor",["$q","EndpointProvider",function(e,t){"use strict";var n={};return n.responseError=function(n){if(502===n.status||503===n.status||-1===n.status){var a=t.currentEndpoint();if(void 0!==a){var r=a.Snapshots[0].SnapshotRaw.Volumes;if(void 0!==r)return r}}return e.reject(n)},n}])},,,function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Build",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/build",{endpointId:n.endpointID},{buildImage:{method:"POST",ignoreLoadingBar:!0,transformResponse:a.jsonObjectsToArrayHandler,isArray:!0,headers:{"Content-Type":"application/x-tar"}},buildImageOverride:{method:"POST",ignoreLoadingBar:!0,transformResponse:a.jsonObjectsToArrayHandler,isArray:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Commit",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/commit",{endpointId:n.endpointID},{commitContainer:{method:"POST",params:{container:"@id",repo:"@repo",tag:"@tag"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Config",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/configs/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Container",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","ContainersInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/containers/:id/:action",{name:"@name",endpointId:n.endpointID},{query:{method:"GET",params:{all:0,action:"json",filters:"@filters"},isArray:!0,interceptor:r,timeout:1e4},get:{method:"GET",params:{action:"json"}},stop:{method:"POST",params:{id:"@id",action:"stop"}},restart:{method:"POST",params:{id:"@id",action:"restart"}},kill:{method:"POST",params:{id:"@id",action:"kill"}},pause:{method:"POST",params:{id:"@id",action:"pause"}},unpause:{method:"POST",params:{id:"@id",action:"unpause"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler},stats:{method:"GET",params:{id:"@id",stream:!1,action:"stats"},timeout:4500,ignoreLoadingBar:!0},top:{method:"GET",params:{id:"@id",action:"top"},timeout:4500,ignoreLoadingBar:!0},start:{method:"POST",params:{id:"@id",action:"start"},transformResponse:a.genericHandler},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",v:"@v",force:"@force"},transformResponse:a.genericHandler},rename:{method:"POST",params:{id:"@id",action:"rename",name:"@name"},transformResponse:a.genericHandler},exec:{method:"POST",params:{id:"@id",action:"exec"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},inspect:{method:"GET",params:{id:"@id",action:"json"}},update:{method:"POST",params:{id:"@id",action:"update"}},prune:{method:"POST",params:{action:"prune",filters:"@filters"}},resize:{method:"POST",params:{id:"@id",action:"resize",h:"@height",w:"@width"},transformResponse:a.genericHandler,ignoreLoadingBar:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Exec",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/exec/:id/:action",{endpointId:n.endpointID},{resize:{method:"POST",params:{id:"@id",action:"resize",h:"@height",w:"@width"},transformResponse:a.genericHandler,ignoreLoadingBar:!0}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9),r=n(249);angular.module("portainer.docker").factory("Image",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper","ImagesInterceptor",function(e,t,n,i,o){return e(t+"/:endpointId/docker/images/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",params:{all:0,action:"json"},isArray:!0,interceptor:o,timeout:1e4},get:{method:"GET",params:{action:"json"}},search:{method:"GET",params:{action:"search"}},history:{method:"GET",params:{action:"history"},isArray:!0},insert:{method:"POST",params:{id:"@id",action:"insert"}},tag:{method:"POST",params:{id:"@id",action:"tag",force:0,repo:"@repo",tag:"@tag"},ignoreLoadingBar:!0},inspect:{method:"GET",params:{id:"@id",action:"json"}},push:{method:"POST",params:{action:"push",id:"@tag"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":i.registryAuthenticationHeader},ignoreLoadingBar:!0},create:{method:"POST",params:{action:"create",fromImage:"@fromImage",tag:"@tag"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":i.registryAuthenticationHeader},ignoreLoadingBar:!0},download:{method:"GET",params:{action:"get",names:"@names"},transformResponse:r.imageGetResponse,responseType:"blob",ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",force:"@force"},isArray:!0,transformResponse:a.deleteImageHandler}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Network",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","NetworksInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/networks/:id/:action",{id:"@id",endpointId:n.endpointID},{query:{method:"GET",isArray:!0,interceptor:r,timeout:1e4},get:{method:"GET"},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},remove:{method:"DELETE",transformResponse:a.genericHandler},connect:{method:"POST",params:{action:"connect"}},disconnect:{method:"POST",params:{action:"disconnect"}}})}])},function(e,t){angular.module("portainer.docker").factory("Node",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/nodes/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"POST",params:{id:"@id",action:"update",version:"@version"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.docker").factory("Plugin",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/plugins/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",isArray:!0}})}])},function(e,t){angular.module("portainer.docker").factory("Secret",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/secrets/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Service",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper",function(e,t,n,r){return e(t+"/:endpointId/docker/services/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0,params:{filters:"@filters"}},create:{method:"POST",params:{action:"create"},headers:{"X-Registry-Auth":r.registryAuthenticationHeader,version:"1.29"},ignoreLoadingBar:!0},update:{method:"POST",params:{id:"@id",action:"update",version:"@version"},headers:{version:"1.29"}},remove:{method:"DELETE",params:{id:"@id"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler}})}])},function(e,t){angular.module("portainer.docker").factory("Swarm",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/docker/swarm",{endpointId:n.endpointID},{get:{method:"GET"}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("System",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","InfoInterceptor","VersionInterceptor",function(e,t,n,r,i){return e(t+"/:endpointId/docker/:action/:subAction",{name:"@name",endpointId:n.endpointID},{info:{method:"GET",params:{action:"info"},timeout:1e4,interceptor:r},version:{method:"GET",params:{action:"version"},timeout:4500,interceptor:i},events:{method:"GET",params:{action:"events",since:"@since",until:"@until"},isArray:!0,transformResponse:a.jsonObjectsToArrayHandler},auth:{method:"POST",params:{action:"auth"}},dataUsage:{method:"GET",params:{action:"system",subAction:"df"}}})}])},function(e,t){angular.module("portainer.docker").factory("SystemEndpoint",["$resource","API_ENDPOINT_ENDPOINTS",function(e,t){"use strict";return e(t+"/:endpointId/docker/:action/:subAction",{name:"@name"},{ping:{method:"GET",params:{action:"_ping",endpointId:"@endpointId"},timeout:1e4}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Task",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){return e(t+"/:endpointId/docker/tasks/:id/:action",{endpointId:n.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0,params:{filters:"@filters"}},logs:{method:"GET",params:{id:"@id",action:"logs"},timeout:4500,ignoreLoadingBar:!0,transformResponse:a.logsHandler}})}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.docker").factory("Volume",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","VolumesInterceptor",function(e,t,n,r){return e(t+"/:endpointId/docker/volumes/:id/:action",{endpointId:n.endpointID},{query:{method:"GET",interceptor:r,timeout:1e4},get:{method:"GET",params:{id:"@id"}},create:{method:"POST",params:{action:"create"},transformResponse:a.genericHandler,ignoreLoadingBar:!0},remove:{method:"DELETE",transformResponse:a.genericHandler,params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(88);angular.module("portainer.docker").factory("BuildService",["$q","Build","FileUploadService",function(e,t,n){var r={buildImageFromUpload:function(t,r,i){var o=e.defer();return n.buildImage(t,r,i).then(function(e){var t=new a.ImageBuildModel(e.data);o.resolve(t)}).catch(function(e){o.reject(e)}),o.promise},buildImageFromURL:function(n,r,i){var o={t:n,remote:r,dockerfile:i},s=e.defer();return t.buildImage(o,{}).$promise.then(function(e){var t=new a.ImageBuildModel(e);s.resolve(t)}).catch(function(e){s.reject(e)}),s.promise},buildImageFromDockerfileContent:function(n,r){var i={t:n},o={content:r},s=e.defer();return t.buildImageOverride(i,o).$promise.then(function(e){var t=new a.ImageBuildModel(e);s.resolve(t)}).catch(function(e){s.reject(e)}),s.promise}};return r}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(179);angular.module("portainer.docker").factory("ConfigService",["$q","Config",function(e,t){var n={config:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.ConfigViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索配置详细信息",err:e})}),r.promise},configs:function(){var n=e.defer();return t.query({}).$promise.then(function(e){var t=e.map(function(e){return new a.ConfigViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索配置",err:e})}),n.promise},remove:function(n){var a=e.defer();return t.remove({id:n}).$promise.then(function(e){e.message?a.reject({msg:e.message}):a.resolve()}).catch(function(e){a.reject({msg:"无法删除配置",err:e})}),a.promise},create:function(e){return t.create(e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(61);angular.module("portainer.docker").factory("ContainerService",["$q","Container","ResourceControlService","LogHelper","$timeout",function(e,t,n,r,i){var o={};return o.container=function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.ContainerDetailsViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索容器信息",err:e})}),r.promise},o.containers=function(n,r){var i=e.defer();return t.query({all:n,filters:r}).$promise.then(function(e){var t=e.map(function(e){return new a.ContainerViewModel(e)});i.resolve(t)}).catch(function(e){i.reject({msg:"无法检索容器",err:e})}),i.promise},o.resizeTTY=function(n,a,r,o){var s=e.defer();return i(function(){t.resize({},{id:n,height:r,width:a}).$promise.then(function(e){e.message?s.reject({msg:"无法调整容器的tty大小 "+n,err:e.message}):s.resolve(e)}).catch(function(e){s.reject({msg:"无法调整容器的tty大小 "+n,err:e})})},o),s.promise},o.startContainer=function(e){return t.start({id:e},{}).$promise},o.stopContainer=function(e){return t.stop({id:e},{}).$promise},o.restartContainer=function(e){return t.restart({id:e},{}).$promise},o.killContainer=function(e){return t.kill({id:e},{}).$promise},o.pauseContainer=function(e){return t.pause({id:e},{}).$promise},o.resumeContainer=function(e){return t.unpause({id:e},{}).$promise},o.renameContainer=function(e,n){return t.rename({id:e,name:n},{}).$promise},o.updateRestartPolicy=function(e,n,a){return t.update({id:e},{RestartPolicy:{Name:n,MaximumRetryCount:a}}).$promise},o.createContainer=function(n){var a=e.defer();return t.create(n).$promise.then(function(e){a.resolve(e)}).catch(function(e){a.reject({msg:"无法创建容器",err:e})}),a.promise},o.createAndStartContainer=function(t){var n,a=e.defer();return o.createContainer(t).then(function(e){return n=e.Id,o.startContainer(n)}).then(function(){a.resolve({Id:n})}).catch(function(e){a.reject(e)}),a.promise},o.remove=function(a,r){var i=e.defer();return t.remove({id:a.Id,v:r?1:0,force:!0}).$promise.then(function(e){if(e.message&&i.reject({msg:e.message,err:e.message}),a.ResourceControl&&1===a.ResourceControl.Type)return n.deleteResourceControl(a.ResourceControl.Id)}).then(function(){i.resolve()}).catch(function(e){i.reject({msg:"无法删除容器",err:e})}),i.promise},o.createExec=function(n){var a=e.defer();return t.exec({},n).$promise.then(function(e){e.message?a.reject({msg:e.message,err:e.message}):a.resolve(e)}).catch(function(e){a.reject(e)}),a.promise},o.logs=function(n,a,i,o,s,l,c){var d=e.defer(),p={id:n,stdout:a||0,stderr:i||0,timestamps:o||0,since:s||0,tail:l||"all"};return t.logs(p).$promise.then(function(e){var t=r.formatLogs(e.logs,c);d.resolve(t)}).catch(function(e){d.reject(e)}),d.promise},o.containerStats=function(n){var r=e.defer();return t.stats({id:n}).$promise.then(function(e){var t=new a.ContainerStatsViewModel(e);r.resolve(t)}).catch(function(e){r.reject(e)}),r.promise},o.containerTop=function(e){return t.top({id:e}).$promise},o.inspect=function(e){return t.inspect({id:e}).$promise},o.prune=function(e){return t.prune({filters:e}).$promise},o}])},function(e,t){angular.module("portainer.docker").factory("ExecService",["$q","$timeout","Exec",function(e,t,n){"use strict";var a={resizeTTY:function(a,r,i,o){var s=e.defer();return t(function(){n.resize({},{id:a,height:i,width:r}).$promise.then(function(e){e.message?s.reject({msg:"无法在容器执行时调整tty大小",err:e.message}):s.resolve(e)}).catch(function(e){s.reject({msg:"无法在容器执行时调整tty大小",err:e})})},o),s.promise}};return a}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6),n(3);var a=n(189),r=n(188),i=n(90),o=n(111),s=n(329),l=n(88),c=n(245),d=n(246);angular.module("portainer.docker").factory("ImageService",["$q","Image","ImageHelper","RegistryService","HttpRequestHelper","ContainerService","FileUploadService",function(e,t,n,p,u,m,g){var f={};return f.image=function(n){var a=e.defer();return t.get({id:n}).$promise.then(function(e){if(e.message)a.reject({msg:e.message});else{var t=new c.ImageDetailsViewModel(e);a.resolve(t)}}).catch(function(e){a.reject({msg:"无法检索镜像详细信息",err:e})}),a.promise},f.images=function(n){var a=e.defer();return e.all({containers:n?m.containers(1):[],images:t.query({}).$promise}).then(function(e){var t=e.containers,n=e.images.map(function(e){e.ContainerCount=0;for(var n=0;n<t.length;n++){t[n].ImageID===e.Id&&e.ContainerCount++}return new l.ImageViewModel(e)});a.resolve(n)}).catch(function(e){a.reject({msg:"无法检索镜像",err:e})}),a.promise},f.history=function(n){var a=e.defer();return t.history({id:n}).$promise.then(function(e){if(e.message)a.reject({msg:e.message});else{var t=[],n=e.length;angular.forEach(e,function(e){t.push(new d.ImageLayerViewModel(n,e)),n--}),a.resolve(t)}}).catch(function(e){a.reject({msg:"无法检索镜像详细信息",err:e})}),a.promise},f.pushImage=function(n,a){var r=e.defer(),i=a.Authentication?p.encodedCredentials(a):"";return u.setRegistryAuthenticationHeader(i),t.push({tag:n}).$promise.then(function(e){e[e.length-1].error?r.reject({msg:e[e.length-1].error}):r.resolve()}).catch(function(e){r.reject({msg:"无法推送镜像TAG标签",err:e})}),r.promise},f.pullImage=function(a,r,i){var o=n.extractImageAndRegistryFromRepository(a),s=n.createImageConfigForContainer(o.image,r.URL),l=r.Authentication?p.encodedCredentials(r):"";return u.setRegistryAuthenticationHeader(l),i?function(n){var a=e.defer();return t.create({},n).$promise.finally(function(){a.resolve()}),a.promise}(s):function(n){var a=e.defer();return t.create({},n).$promise.then(function(e){if(e.length>0&&e[e.length-1].hasOwnProperty("message")){var t=e[e.length-1];a.reject({msg:t.message})}else a.resolve(e)}).catch(function(e){a.reject({msg:"无法拉取镜像",err:e})}),a.promise}(s)},f.tagImage=function(e,a,r){var i=n.createImageConfigForCommit(a,r);return t.tag({id:e,tag:i.tag,repo:i.repo}).$promise},f.downloadImages=function(e){var a=n.getImagesNamesForDownload(e);return t.download(a).$promise},f.uploadImage=function(e){return g.loadImages(e)},f.deleteImage=function(n,a){var r=e.defer();return t.remove({id:n,force:a}).$promise.then(function(e){e[0].message?r.reject({msg:e[0].message}):r.resolve()}).catch(function(e){r.reject({msg:"无法删除镜像",err:e})}),r.promise},f.getUniqueTagListFromImages=function(e){return Object(s.a)(Object(o.a)(e,function(e){return Object(i.a)(e.RepoTags,function(e){return-1!==e.indexOf("<none>")}),e.RepoTags?Object(r.a)(e.RepoTags,a.a):[]}))},f}])},function(e,t,n){"use strict";n.r(t);n(18),n(3);var a=n(180);angular.module("portainer.docker").factory("NetworkService",["$q","Network",function(e,t){var n={create:function(n){var a=e.defer();return t.create(n).$promise.then(function(e){a.resolve(e)}).catch(function(e){a.reject({msg:"无法创建网络",err:e})}),a.promise},network:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.NetworkViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索网络详细信息",err:e})}),r.promise},networks:function(n,r,i,o){var s=e.defer();return t.query({filters:o}).$promise.then(function(e){var t=e.filter(function(e){return n&&"local"===e.Scope?e:r&&"swarm"===e.Scope?e:i&&"swarm"===e.Scope&&!0===e.Attachable?e:void 0}).map(function(e){return new a.NetworkViewModel(e)});s.resolve(t)}).catch(function(e){s.reject({msg:"无法检索网络",err:e})}),s.promise},remove:function(e){return t.remove({id:e}).$promise},disconnectContainer:function(e,n,a){return t.disconnect({id:e},{Container:n,Force:a}).$promise},connectContainer:function(e,n){return t.connect({id:e},{Container:n}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(181);angular.module("portainer.docker").factory("NodeService",["$q","Node",function(e,t){var n={};return n.nodes=function(){var n=e.defer();return t.query({}).$promise.then(function(e){var t=e.map(function(e){return new a.NodeViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索节点",err:e})}),n.promise},n.node=function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.NodeViewModel(e);return r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索节点",err:e})}),r.promise},n.updateNode=function(e){return t.update({id:e.Id,version:e.Version},e).$promise},n.getActiveManager=function(){var t=e.defer();return n.nodes().then(function(e){for(var n=0;n<e.length;++n){var a=e[n];if("manager"===a.Role&&"active"===a.Availability&&"ready"===a.Status&&"0.0.0.0"!==a.Addr){t.resolve(a);break}}}).catch(function(e){t.reject({msg:"无法检索节点",err:e})}),t.promise},n}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(13),r=n(247);angular.module("portainer.docker").factory("PluginService",["$q","Plugin","SystemService",function(e,t,n){var i={};function o(t,r,o){var s=e.defer();return e.all({system:n.plugins(),plugins:t?[]:i.plugins()}).then(function(e){var t=[],n=e.system,i=e.plugins;n[r]&&(t=t.concat(n[r]));for(var l=0;l<i.length;l++){var c=i[l];c.Enabled&&Object(a.a)(c.Config.Interface.Types,o)&&t.push(c.Name)}s.resolve(t)}).catch(function(e){s.reject({msg:e.msg,err:e})}),s.promise}return i.plugins=function(){var n=e.defer(),a=[];return t.query({}).$promise.then(function(e){for(var t=0;t<e.length;t++){var n=new r.PluginViewModel(e[t]);a.push(n)}}).finally(function(){n.resolve(a)}),n.promise},i.volumePlugins=function(e){return o(e,"Volume","docker.volumedriver/1.0")},i.networkPlugins=function(e){return o(e,"Network","docker.networkdriver/1.0")},i.loggingPlugins=function(e){return o(e,"Log","docker.logdriver/1.0")},i}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(182);angular.module("portainer.docker").factory("SecretService",["$q","Secret",function(e,t){var n={secret:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.SecretViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索密钥详细信息",err:e})}),r.promise},secrets:function(){var n=e.defer();return t.query({}).$promise.then(function(e){var t=e.map(function(e){return new a.SecretViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索密钥",err:e})}),n.promise},remove:function(n){var a=e.defer();return t.remove({id:n}).$promise.then(function(e){e.message?a.reject({msg:e.message}):a.resolve()}).catch(function(e){a.reject({msg:"无法删除密钥",err:e})}),a.promise},create:function(e){return t.create(e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(183);angular.module("portainer.docker").factory("ServiceService",["$q","Service","ServiceHelper","TaskService","ResourceControlService","LogHelper",function(e,t,n,r,i,o){var s={services:function(n){var r=e.defer();return t.query({filters:n||{}}).$promise.then(function(e){var t=e.map(function(e){return new a.ServiceViewModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索服务",err:e})}),r.promise},service:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.ServiceViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索服务详细信息",err:e})}),r.promise},remove:function(n){var a=e.defer();return t.remove({id:n.Id}).$promise.then(function(){if(n.ResourceControl&&2===n.ResourceControl.Type)return i.deleteResourceControl(n.ResourceControl.Id)}).then(function(){a.resolve()}).catch(function(e){a.reject({msg:"无法删除服务",err:e})}),a.promise},update:function(e,n){return t.update({id:e.Id,version:e.Version},n).$promise},logs:function(n,a,r,i,s,l){var c=e.defer(),d={id:n,stdout:a||0,stderr:r||0,timestamps:i||0,since:s||0,tail:l||"all"};return t.logs(d).$promise.then(function(e){var t=o.formatLogs(e.logs,!0);c.resolve(t)}).catch(function(e){c.reject(e)}),c.promise}};return s}])},function(e,t,n){"use strict";n.r(t);var a=n(248);angular.module("portainer.docker").factory("SwarmService",["$q","Swarm",function(e,t){var n={swarm:function(){var n=e.defer();return t.get().$promise.then(function(e){var t=new a.SwarmViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索Swarm集群详细信息",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(244);angular.module("portainer.docker").factory("SystemService",["$q","System","SystemEndpoint",function(e,t,n){var r={plugins:function(){var n=e.defer();return t.info({}).$promise.then(function(e){var t=e.Plugins;n.resolve(t)}).catch(function(e){n.reject({msg:"无法从系统检索插件信息",err:e})}),n.promise},info:function(){return t.info({}).$promise},ping:function(e){return n.ping({endpointId:e}).$promise},version:function(){return t.version({}).$promise},events:function(n,r){var i=e.defer();return t.events({since:n,until:r}).$promise.then(function(e){var t=e.map(function(e){return new a.EventViewModel(e)});i.resolve(t)}).catch(function(e){i.reject({msg:"无法检索引擎事件",err:e})}),i.promise},dataUsage:function(){return t.dataUsage().$promise}};return r}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(184);angular.module("portainer.docker").factory("TaskService",["$q","Task","LogHelper",function(e,t,n){var r={task:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.TaskViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索任务详细信息",err:e})}),r.promise},tasks:function(n){var r=e.defer();return t.query({filters:n||{}}).$promise.then(function(e){var t=e.map(function(e){return new a.TaskViewModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索任务",err:e})}),r.promise},logs:function(a,r,i,o,s,l){var c=e.defer(),d={id:a,stdout:r||0,stderr:i||0,timestamps:o||0,since:s||0,tail:l||"all"};return t.logs(d).$promise.then(function(e){var t=n.formatLogs(e.logs,!0);c.resolve(t)}).catch(function(e){c.reject(e)}),c.promise}};return r}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(140);angular.module("portainer.docker").factory("VolumeService",["$q","Volume","VolumeHelper","ResourceControlService",function(e,t,n,r){var i={volumes:function(n){var r=e.defer();return t.query(n).$promise.then(function(e){var t=e.Volumes||[];t=t.map(function(e){return new a.VolumeViewModel(e)}),r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索存储卷",err:e})}),r.promise},volume:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.VolumeViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索存储卷详细信息",err:e})}),r.promise},getVolumes:function(){return t.query({}).$promise},remove:function(n){var a=e.defer();return t.remove({id:n.Id}).$promise.then(function(e){if(e.message&&a.reject({msg:e.message,err:e.message}),n.ResourceControl&&3===n.ResourceControl.Type)return r.deleteResourceControl(n.ResourceControl.Id)}).then(function(){a.resolve()}).catch(function(e){a.reject({msg:"无法删除存储卷",err:e})}),a.promise},createVolumeConfiguration:function(e,t,a){return{Name:e,Driver:t,DriverOpts:n.createDriverOptions(a)}},createVolume:function(n){var r=e.defer();return t.create(n).$promise.then(function(e){if(e.message)r.reject({msg:e.message});else{var t=new a.VolumeViewModel(e);r.resolve(t)}}).catch(function(e){r.reject({msg:"无法创建存储卷",err:e})}),r.promise},createVolumes:function(t){var n=t.map(function(e){return i.createVolume(e)});return e.all(n)},createXAutoGeneratedLocalVolumes:function(t){for(var n=[],a=0;a<t;a++)n.push(i.createVolume({Driver:"local"}));return e.all(n)}};return i}])},function(e,t,n){"use strict";n.r(t);n(44),n(95),n(5),n(129),n(130),n(1),n(45),n(70);var a=n(16),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e){return function(){var t=this,n=arguments;return new Promise(function(a,r){var o=e.apply(t,n);function s(e){i(o,a,r,s,l,"next",e)}function l(e){i(o,a,r,s,l,"throw",e)}s(void 0)})}}function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(t,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.ConfigService=n,this.Notifications=a,this.removeAction=this.removeAction.bind(this)}var t,n,a,r,i;return e.$inject=["$state","ConfigService","Notifications"],t=e,(n=[{key:"$onInit",value:(i=o(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.configs=[],e.prev=1,e.next=4,this.ConfigService.configs();case 4:this.configs=e.sent,e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),this.Notifications.error("失败",e.t0,"无法检索配置");case 10:case"end":return e.stop()}},e,this,[[1,7]])})),function(){return i.apply(this,arguments)})},{key:"removeAction",value:(r=o(regeneratorRuntime.mark(function e(t){var n,a,r,i,o,s,l,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=t.length,a=!0,r=!1,i=void 0,e.prev=4,o=t[Symbol.iterator]();case 6:if(a=(s=o.next()).done){e.next=26;break}return l=s.value,e.prev=8,e.next=11,this.ConfigService.remove(l.Id);case 11:this.Notifications.success("已成功删除配置",l.Name),c=this.configs.indexOf(l),this.configs.splice(c,1),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(8),this.Notifications.error("失败",e.t0,"无法删除配置");case 19:return e.prev=19,0===--n&&this.$state.reload(),e.finish(19);case 23:a=!0,e.next=6;break;case 26:e.next=32;break;case 28:e.prev=28,e.t1=e.catch(4),r=!0,i=e.t1;case 32:e.prev=32,e.prev=33,a||null==o.return||o.return();case 35:if(e.prev=35,!r){e.next=38;break}throw i;case 38:return e.finish(35);case 39:return e.finish(32);case 40:case"end":return e.stop()}},e,this,[[4,28,32,40],[8,16,19,23],[33,,35,39]])})),function(e){return r.apply(this,arguments)})}])&&s(t.prototype,n),a&&s(t,a),e}();t.default=l,r.a.module("portainer.docker").controller("ConfigsController",l)},,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);n(44),n(95),n(45),n(11),n(1),n(6),n(70);var a=n(22),r=n(24),i=n(16),o=n.n(i);function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e){return function(){var t=this,n=arguments;return new Promise(function(a,r){var i=e.apply(t,n);function o(e){s(i,a,r,o,l,"next",e)}function l(e){s(i,a,r,o,l,"throw",e)}o(void 0)})}}function c(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(t,n,a,i,o,s,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.$transition$=n,this.Notifications=a,this.ConfigService=i,this.Authentication=o,this.FormValidator=s,this.ResourceControlService=l,this.formValues={Name:"",Labels:[],AccessControlData:new r.AccessControlFormData,ConfigContent:""},this.state={formValidationError:""},this.editorUpdate=this.editorUpdate.bind(this)}var t,n,i,o,s;return e.$inject=["$state","$transition$","Notifications","ConfigService","Authentication","FormValidator","ResourceControlService"],t=e,(n=[{key:"addLabel",value:function(){this.formValues.Labels.push({name:"",value:""})}},{key:"removeLabel",value:function(e){this.formValues.Labels.splice(e,1)}},{key:"prepareLabelsConfig",value:function(e){var t={};this.formValues.Labels.forEach(function(e){e.name&&e.value&&(t[e.name]=e.value)}),e.Labels=t}},{key:"prepareConfigData",value:function(e){var t=this.formValues.ConfigContent;e.Data=btoa(unescape(encodeURIComponent(t)))}},{key:"prepareConfiguration",value:function(){var e={};return e.Name=this.formValues.Name,this.prepareConfigData(e),this.prepareLabelsConfig(e),e}},{key:"validateForm",value:function(e,t){this.state.formValidationError="";var n;return!(n=this.FormValidator.validateAccessControl(e,t))||(this.state.formValidationError=n,!1)}},{key:"create",value:(s=l(regeneratorRuntime.mark(function e(){var t,n,a,r,i,o,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.formValues.AccessControlData,n=this.Authentication.getUserDetails(),a=this.Authentication.isAdmin(),""!==this.formValues.ConfigContent){e.next=6;break}return this.state.formValidationError="配置内容不能为空",e.abrupt("return");case 6:if(this.validateForm(t,a)){e.next=8;break}return e.abrupt("return");case 8:return r=this.prepareConfiguration(),e.prev=9,e.next=12,this.ConfigService.create(r);case 12:return i=e.sent,o=i.ID,s=n.ID,e.next=17,this.ResourceControlService.applyResourceControl("config",o,s,t,[]);case 17:this.Notifications.success("已成功创建配置"),this.$state.go("docker.configs",{},{reload:!0}),e.next=24;break;case 21:e.prev=21,e.t0=e.catch(9),this.Notifications.error("失败",e.t0,"无法创建配置");case 24:case"end":return e.stop()}},e,this,[[9,21]])})),function(){return s.apply(this,arguments)})},{key:"editorUpdate",value:function(e){this.formValues.ConfigContent=e.getValue()}},{key:"$onInit",value:(o=l(regeneratorRuntime.mark(function e(){var t,n,r,i,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.$transition$.params().id){e.next=3;break}return this.formValues.displayCodeEditor=!0,e.abrupt("return");case 3:return e.prev=3,e.next=6,this.ConfigService.config(this.$transition$.params().id);case 6:for(t=e.sent,this.formValues.Name=t.Name+"_copy",this.formValues.Data=t.Data,n=Object(a.a)(t.Labels),r=0;r<n.length;r++)i=n[r],o=t.Labels[i],this.formValues.Labels.push({name:i,value:o});this.formValues.displayCodeEditor=!0,e.next=18;break;case 14:e.prev=14,e.t0=e.catch(3),this.formValues.displayCodeEditor=!0,this.Notifications.error("失败",e.t0,"无法克隆配置");case 18:case"end":return e.stop()}},e,this,[[3,14]])})),function(){return o.apply(this,arguments)})}])&&c(t.prototype,n),i&&c(t,i),e}();t.default=d,o.a.module("portainer.docker").controller("CreateConfigController",d)},function(e,t){angular.module("portainer.docker").controller("ConfigController",["$scope","$transition$","$state","ConfigService","Notifications",function(e,t,n,a,r){e.removeConfig=function(e){a.remove(e).then(function(){r.success("已成功删除配置"),n.go("docker.configs",{})}).catch(function(e){r.error("失败",e,"无法删除配置")})},a.config(t.params().id).then(function(t){e.config=t}).catch(function(e){r.error("失败",e,"无法检索配置的详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(18),n(42),n(5),n(70),n(1),n(19),n(34),n(3),n(20),n(295);var a=n(175);angular.module("portainer.docker").controller("ContainerConsoleController",["$scope","$transition$","ContainerService","ImageService","EndpointProvider","Notifications","ContainerHelper","ExecService","HttpRequestHelper","LocalStorage","CONSOLE_COMMANDS_LABEL_PREFIX",function(e,t,n,r,i,o,s,l,c,d,p){var u,m,g=Object.freeze({disconnected:0,connecting:1,connected:2});function f(n,r){var i=function(e,t){t=t||0,m.fit();var n=m.cols;m.resize(n,30),e(n+t,30+t,1)}.bind(this,r);t.params().nodeName&&(n+="&nodeName="+t.params().nodeName),n=n.indexOf("https")>-1?n.replace("https://","wss://"):n.replace("http://","ws://"),(u=new WebSocket(n)).onopen=function(){e.state=g.connected,(m=new a.Terminal).on("data",function(e){u.send(e)});var t=document.getElementById("terminal-container");m.open(t),m.focus(),m.setOption("cursorBlink",!0),window.onresize=function(){i(),e.$apply()},e.$watch("toggle",function(){setTimeout(i,400)}),u.onmessage=function(e){m.write(e.data)},u.onerror=function(t){e.disconnect(),e.$apply(),o.error("失败",t,"连接错误")},u.onclose=function(){e.disconnect(),e.$apply()},i(1),e.$apply()}}e.loaded=!1,e.states=g,e.state=g.disconnected,e.formValues={},e.containerCommands=[],e.$on("$stateChangeStart",function(){e.disconnect()}),e.connectAttach=function(){var a=this;if(!(e.state>g.disconnected)){e.state=g.connecting;var r=t.params().id;n.container(r).then(function(t){if(!t.State.Running)return o.error("失败",t,"容器 "+r+" 没有运行！"),void e.disconnect();var s={token:d.getJWT(),endpointId:i.endpointID(),id:r};f(window.location.href.split("#")[0]+"api/websocket/attach?"+Object.keys(s).map(function(e){return e+"="+s[e]}).join("&"),n.resizeTTY.bind(a,r))}).catch(function(t){o.error("失败",t,"无法检索容器详细信息"),e.disconnect()})}},e.connectExec=function(){if(!(e.state>g.disconnected)){e.state=g.connecting;var a=e.formValues.isCustomCommand?e.formValues.customCommand:e.formValues.command,r={id:t.params().id,AttachStdin:!0,AttachStdout:!0,AttachStderr:!0,Tty:!0,User:e.formValues.user,Cmd:s.commandStringToArray(a)};n.createExec(r).then(function(e){var t={token:d.getJWT(),endpointId:i.endpointID(),id:e.Id};f(window.location.href.split("#")[0]+"api/websocket/exec?"+Object.keys(t).map(function(e){return e+"="+t[e]}).join("&"),l.resizeTTY.bind(this,t.id))}).catch(function(t){o.error("失败",t,"无法在容器内执行"),e.disconnect()})}},e.disconnect=function(){u&&u.close(),e.state>g.disconnected&&(e.state=g.disconnected,m&&(m.write("\n\r(connection closed)"),m.dispose()))},e.autoconnectAttachView=function(){return e.initView().then(function(){e.container.State.Running&&e.connectAttach()})},e.initView=function(){return c.setPortainerAgentTargetHeader(t.params().nodeName),n.container(t.params().id).then(function(t){var n=t;return e.container=n,r.image(n.Image)}).then(function(t){var n=t,a=e.container.Config.Labels;e.imageOS=n.Os,e.formValues.command="windows"===n.Os?"powershell":"bash",e.containerCommands=Object.keys(a).filter(function(e){return 0===e.indexOf(p)}).map(function(e){return{title:e.replace(p,""),command:a[e]}}),e.loaded=!0}).catch(function(e){o.error("失败",e,"无法检索容器详细信息")})}}])},function(e,t){angular.module("portainer.docker").controller("ContainersController",["$scope","ContainerService","Notifications","EndpointProvider",function(e,t,n,a){e.offlineMode=!1,t.containers(1).then(function(t){e.containers=t,e.offlineMode=a.offlineMode()}).catch(function(t){n.error("失败",t,"无法检索容器"),e.containers=[]})}])},function(e,t,n){"use strict";n.r(t);n(129),n(130),n(0),n(289),n(3),n(18),n(19),n(34),n(11),n(20),n(5),n(1),n(6);var a=n(111),r=n(4),i=n(119),o=n(24),s=n(61);function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}angular.module("portainer.docker").controller("CreateContainerController",["$q","$scope","$state","$timeout","$transition$","$filter","Container","ContainerHelper","Image","ImageHelper","Volume","NetworkService","ResourceControlService","Authentication","Notifications","ContainerService","ImageService","FormValidator","ModalService","RegistryService","SystemService","SettingsService","PluginService","HttpRequestHelper",function(e,t,n,c,d,p,u,m,g,f,v,h,b,x,y,w,k,$,S,C,I,P,T,A){function D(){u.get({id:d.params().from}).$promise.then(function(e){var n,o,l=new s.ContainerDetailsViewModel(e);l.ResourceControl&&l.ResourceControl.Public&&(t.formValues.AccessControlData.AccessControlEnabled=!1),t.fromContainer=l,t.config=m.configFromContainer(l.Model),t.config.Cmd?t.config.Cmd=m.commandArrayToString(t.config.Cmd):t.config.Cmd="",n=e.HostConfig.LogConfig,t.formValues.LogDriverName=n.Type,t.formValues.LogDriverOpts=Object(a.a)(n.Config,function(e,t){return{name:t,value:e}}),function(){var e=[];for(var n in t.config.HostConfig.PortBindings)if({}.hasOwnProperty.call(t.config.HostConfig.PortBindings,n)){var a="";t.config.HostConfig.PortBindings[n][0].HostIp&&(a=t.config.HostConfig.PortBindings[n][0].HostIp+":");var r={hostPort:a+=t.config.HostConfig.PortBindings[n][0].HostPort,containerPort:n.split("/")[0],protocol:n.split("/")[1]};e.push(r)}t.config.HostConfig.PortBindings=e}(),function(e){for(var n in e.Mounts)if({}.hasOwnProperty.call(e.Mounts,n)){var a=e.Mounts[n],r={type:a.Type,name:a.Name||a.Source,containerPath:a.Destination,readOnly:!1===a.RW};t.formValues.Volumes.push(r)}}(e),function(e){if(t.config.NetworkingConfig={EndpointsConfig:{}},"default"===e.HostConfig.NetworkMode&&(t.config.HostConfig.NetworkMode="bridge",Object(r.a)(t.availableNetworks,{Name:"bridge"})||(t.config.HostConfig.NetworkMode="nat")),0===t.config.HostConfig.NetworkMode.indexOf("container:")){var n=t.config.HostConfig.NetworkMode.split(/^container:/)[1];for(var a in t.config.HostConfig.NetworkMode="container",t.runningContainers)t.runningContainers[a].Names&&t.runningContainers[a].Names[0]==="/"+n&&(t.formValues.NetworkContainer=t.runningContainers[a])}if(t.fromContainerMultipleNetworks=Object.keys(e.NetworkSettings.Networks).length>=2,e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode]&&e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig&&(e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address&&(t.formValues.IPv4=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address),e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address&&(t.formValues.IPv6=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address)),t.config.NetworkingConfig.EndpointsConfig[t.config.HostConfig.NetworkMode]=e.NetworkSettings.Networks[t.config.HostConfig.NetworkMode],Object.keys(e.NetworkSettings.Networks).length){var i=e.NetworkSettings.Networks[Object.keys(e.NetworkSettings.Networks)[0]];t.formValues.MacAddress=i.MacAddress,t.config.NetworkingConfig.EndpointsConfig[t.config.HostConfig.NetworkMode]=i,t.extraNetworks=angular.copy(e.NetworkSettings.Networks),delete t.extraNetworks[Object.keys(e.NetworkSettings.Networks)[0]]}else t.formValues.MacAddress="";if(t.config.HostConfig.ExtraHosts){for(var o=t.config.HostConfig.ExtraHosts,s=0;s<o.length;s++){var l=o[s];t.formValues.ExtraHosts.push({value:l})}t.config.HostConfig.ExtraHosts=[]}}(e),function(){var e=[];for(var n in t.config.Env)if({}.hasOwnProperty.call(t.config.Env,n)){var a=t.config.Env[n].split(/\=(.+)/);e.push({name:a[0],value:a[1]})}t.config.Env=e}(),function(){for(var e in t.config.Labels)({}).hasOwnProperty.call(t.config.Labels,e)&&t.formValues.Labels.push({name:e,value:t.config.Labels[e]})}(),t.config.OpenStdin&&t.config.Tty?t.formValues.Console="both":!t.config.OpenStdin&&t.config.Tty?t.formValues.Console="tty":t.config.OpenStdin&&!t.config.Tty?t.formValues.Console="interactive":t.config.OpenStdin||t.config.Tty||(t.formValues.Console="none"),function(){var e=[];for(var n in t.config.HostConfig.Devices)if({}.hasOwnProperty.call(t.config.HostConfig.Devices,n)){var a=t.config.HostConfig.Devices[n];e.push({pathOnHost:a.PathOnHost,pathInContainer:a.PathInContainer})}t.config.HostConfig.Devices=e}(),o=f.extractImageAndRegistryFromRepository(t.config.Image),C.retrieveRegistryFromRepository(t.config.Image).then(function(e){e&&(t.config.Image=o.image,t.formValues.Registry=e)}).catch(function(e){y.error("失败",e,"无法检索仓库")}),function(e){e.HostConfig.NanoCpus&&(t.formValues.CpuLimit=e.HostConfig.NanoCpus/1e9),e.HostConfig.Memory&&(t.formValues.MemoryLimit=e.HostConfig.Memory/1024/1024),e.HostConfig.MemoryReservation&&(t.formValues.MemoryReservation=e.HostConfig.MemoryReservation/1024/1024)}(e),function(e){function n(e){return e.capability===s.capability}e.HostConfig.CapAdd&&e.HostConfig.CapAdd.forEach(function(e){t.formValues.capabilities.push(new i.ContainerCapability(e,!0))}),e.HostConfig.CapDrop&&e.HostConfig.CapDrop.forEach(function(e){t.formValues.capabilities.push(new i.ContainerCapability(e,!1))});for(var a=new i.ContainerCapabilities,o=0;o<a.length;o++){var s=a[o];Object(r.a)(t.formValues.capabilities,n)||t.formValues.capabilities.push(s)}t.formValues.capabilities.sort(function(e,t){return e.capability<t.capability?-1:1})}(e)}).catch(function(e){y.error("失败",e,"无法检索容器")})}t.create=function(){var a=null;return A.setPortainerAgentTargetHeader(t.formValues.NodeName),r().then(function(e){return a=e,e}).then(function(t){return t?(n=e.defer(),S.confirm({title:"您确定吗？",message:"已存在具有相同名称的容器，系统将自动删除并重新创建一个。您想替换它吗？",buttons:{confirm:{label:"重建",className:"btn-danger"}},callback:function(e){n.resolve(e)}}),n.promise):e.when(!0);var n}).then(function(n){return n&&function(e,n){t.state.formValidationError="";var a="";return!(a=$.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(t.formValues.AccessControlData,t.isAdmin)?(t.state.actionInProgress=!0,e.when(t.formValues.alwaysPull&&k.pullImage(t.config.Image,t.formValues.Registry,!0)).then(s).then(d).then(g).then(v).then(C).then(I).catch(i)):e.when()}).catch(function(e){y.error("失败",e,"无法创建容器")}).finally(function(){t.state.actionInProgress=!1});function r(){return u.query({all:1,filters:{name:["^/"+t.config.name+"$"]}}).$promise.then(function(e){if(e.length)return e[0]}).catch(function(e){y.error("失败",e,"无法检索容器")})}function i(t){var n=e.defer();return r().then(function(e){if(e&&(!a||e.Id!==a.Id))return w.remove(e,!0)}).then(o).then(function(){n.reject(t)}).catch(function(e){n.reject(e)}),n.promise}function o(){if(a)return w.renameContainer(a.Id,a.Names[0].substring(1))}function s(){return a?function(t){if("running"!==t.State)return e.when();return w.stopContainer(t.Id)}(a).then(c):e.when()}function c(){return w.renameContainer(a.Id,a.Names[0].substring(1)+"-old")}function d(){var e=function(){var e=angular.copy(t.config);return e.Cmd=m.commandStringToArray(e.Cmd),function(e){var n=e.HostConfig.NetworkMode,a=t.formValues.NetworkContainer,r=a;a&&"object"===l(a)&&(r=p("trimcontainername")(a.Names[0]));var i=n;r&&(i+=":"+r,e.Hostname=""),e.HostConfig.NetworkMode=i,e.MacAddress=t.formValues.MacAddress,e.NetworkingConfig.EndpointsConfig[i]={IPAMConfig:{IPv4Address:t.formValues.IPv4,IPv6Address:t.formValues.IPv6}},t.formValues.ExtraHosts.forEach(function(t){t.value&&e.HostConfig.ExtraHosts.push(t.value)})}(e),function(e){var n=e.Image,a=t.formValues.Registry,r=f.createImageConfigForContainer(n,a.URL);e.Image=r.fromImage+":"+r.tag,t.imageConfig=r}(e),function(e){var t={};e.HostConfig.PortBindings.forEach(function(n){if(n.containerPort){var a=n.containerPort+"/"+n.protocol,r={};if(n.hostPort&&n.hostPort.indexOf(":")>-1){var i=n.hostPort.split(":");r.HostIp=i[0],r.HostPort=i[1]}else r.HostPort=n.hostPort;t[a]=[r],e.ExposedPorts[a]={}}}),e.HostConfig.PortBindings=t}(e),function(e){var n=t.formValues.Console,a=!0,r=!0;"tty"===n?a=!1:"interactive"===n?r=!1:"none"===n&&(a=!1,r=!1),e.OpenStdin=a,e.Tty=r}(e),function(e){var t=[];e.Env.forEach(function(e){e.name&&e.value&&t.push(e.name+"="+e.value)}),e.Env=t}(e),function(e){var n=[],a={};t.formValues.Volumes.forEach(function(e){var t=e.name,r=e.containerPath;if(t&&r){var i=t+":"+r;a[r]={},e.readOnly&&(i+=":ro"),n.push(i)}}),e.HostConfig.Binds=n,e.Volumes=a}(e),function(e){var n={};t.formValues.Labels.forEach(function(e){e.name&&e.value&&(n[e.name]=e.value)}),e.Labels=n}(e),function(e){var t=[];e.HostConfig.Devices.forEach(function(e){e.pathOnHost&&(""===e.pathInContainer&&(e.pathInContainer=e.pathOnHost),t.push({PathOnHost:e.pathOnHost,PathInContainer:e.pathInContainer,CgroupPermissions:"rwm"}))}),e.HostConfig.Devices=t}(e),function(e){var n=(Math.round(8*t.formValues.MemoryLimit)/8).toFixed(3);(n*=1048576)>0&&(e.HostConfig.Memory=n);var a=(Math.round(8*t.formValues.MemoryReservation)/8).toFixed(3);(a*=1048576)>0&&(e.HostConfig.MemoryReservation=a),t.formValues.CpuLimit>0&&(e.HostConfig.NanoCpus=1e9*t.formValues.CpuLimit)}(e),function(e){var n={};t.formValues.LogDriverName&&(e.HostConfig.LogConfig={Type:t.formValues.LogDriverName},"none"!==t.formValues.LogDriverName&&(t.formValues.LogDriverOpts.forEach(function(e){e.name&&(n[e.name]=e.value)}),0!==Object.keys(n).length&&n.constructor===Object&&(e.HostConfig.LogConfig.Config=n)))}(e),function(e){var n=t.formValues.capabilities.filter(function(e){return!0===e.allowed}),a=t.formValues.capabilities.filter(function(e){return!1===e.allowed}),r=function(e){return e.capability};e.HostConfig.CapAdd=n.map(r),e.HostConfig.CapDrop=a.map(r)}(e),e}();return w.createAndStartContainer(e)}function g(n){var a=n.Id,r=x.getUserDetails().ID;return e.when(b.applyResourceControl("container",a,r,t.formValues.AccessControlData,[])).then(function(){return a})}function v(n){if(!t.extraNetworks)return e.when();var a=Object.keys(t.extraNetworks).map(function(e){return h.connectContainer(e,n)});return e.all(a)}function C(){var t=e.defer();if(a)return w.remove(a,!0).then(function(){y.success("已删除容器",a.Id),t.resolve()}).catch(function(e){t.reject({msg:"无法删除容器",err:e})}),t.promise;t.resolve()}function I(){y.success("已成功创建容器"),n.go("docker.containers",{},{reload:!0})}},t.formValues={alwaysPull:!0,Console:"none",Volumes:[],NetworkContainer:"",Labels:[],ExtraHosts:[],MacAddress:"",IPv4:"",IPv6:"",AccessControlData:new o.AccessControlFormData,CpuLimit:0,MemoryLimit:0,MemoryReservation:0,NodeName:null,capabilities:[],LogDriverName:"",LogDriverOpts:[]},t.extraNetworks={},t.state={formValidationError:"",actionInProgress:!1},t.refreshSlider=function(){c(function(){t.$broadcast("rzSliderForceRender")})},t.config={Image:"",Env:[],Cmd:"",MacAddress:"",ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:[],PublishAllPorts:!1,Binds:[],AutoRemove:!1,NetworkMode:"bridge",Privileged:!1,Runtime:"",ExtraHosts:[],Devices:[],CapAdd:[],CapDrop:[]},NetworkingConfig:{EndpointsConfig:{}},Labels:{}},t.addVolume=function(){t.formValues.Volumes.push({name:"",containerPath:"",readOnly:!1,type:"volume"})},t.removeVolume=function(e){t.formValues.Volumes.splice(e,1)},t.addEnvironmentVariable=function(){t.config.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.config.Env.splice(e,1)},t.addPortBinding=function(){t.config.HostConfig.PortBindings.push({hostPort:"",containerPort:"",protocol:"tcp"})},t.removePortBinding=function(e){t.config.HostConfig.PortBindings.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({name:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.addExtraHost=function(){t.formValues.ExtraHosts.push({value:""})},t.removeExtraHost=function(e){t.formValues.ExtraHosts.splice(e,1)},t.addDevice=function(){t.config.HostConfig.Devices.push({pathOnHost:"",pathInContainer:""})},t.removeDevice=function(e){t.config.HostConfig.Devices.splice(e,1)},t.addLogDriverOpt=function(){t.formValues.LogDriverOpts.push({name:"",value:""})},t.removeLogDriverOpt=function(e){t.formValues.LogDriverOpts.splice(e,1)},t.fromContainerMultipleNetworks=!1,t.resetNetworkConfig=function(){t.config.NetworkingConfig={EndpointsConfig:{}}},function(){var e=d.params().nodeName;t.formValues.NodeName=e,A.setPortainerAgentTargetHeader(e),v.query({},function(e){t.availableVolumes=e.Volumes},function(e){y.error("失败",e,"无法检索存储卷")});var n=t.applicationState.endpoint.mode.provider,a=t.applicationState.endpoint.apiVersion;h.networks("DOCKER_STANDALONE"===n||"DOCKER_SWARM_MODE"===n,!1,"DOCKER_SWARM_MODE"===n&&a>=1.25).then(function(e){var n=e;n.push({Name:"container"}),t.availableNetworks=n,Object(r.a)(n,{Name:"nat"})&&(t.config.HostConfig.NetworkMode="nat")}).catch(function(e){y.error("失败",e,"无法检索网络")}),u.query({},function(e){var n=e;t.runningContainers=n,d.params().from?D():(t.fromContainer={},t.formValues.Registry={},t.formValues.capabilities=new i.ContainerCapabilities)},function(e){y.error("失败",e,"无法检索正在运行的容器")}),I.info().then(function(e){t.availableRuntimes=Object.keys(e.Runtimes),t.config.HostConfig.Runtime="",t.state.sliderMaxCpu=32,e.NCPU&&(t.state.sliderMaxCpu=e.NCPU),t.state.sliderMaxMemory=32768,e.MemTotal&&(t.state.sliderMaxMemory=Math.floor(e.MemTotal/1e3/1e3))}).catch(function(e){y.error("失败",e,"无法检索引擎的详细信息")}),P.publicSettings().then(function(e){t.allowBindMounts=e.AllowBindMountsForRegularUsers,t.allowPrivilegedMode=e.AllowPrivilegedModeForRegularUsers}).catch(function(e){y.error("失败",e,"无法检索应用程序设置")}),T.loggingPlugins(a<1.25).then(function(e){t.availableLoggingDrivers=e}),t.isAdmin=x.isAdmin()}()}])},function(e,t,n){"use strict";n.r(t);n(3),n(0),n(19),n(34),n(1),n(6);var a=n(2),r=n.n(a);angular.module("portainer.docker").controller("ContainerController",["$q","$scope","$state","$transition$","$filter","Commit","ContainerHelper","ContainerService","ImageHelper","NetworkService","Notifications","ModalService","ResourceControlService","RegistryService","ImageService","HttpRequestHelper",function(e,t,n,a,i,o,s,l,c,d,p,u,m,g,f,v){t.activityTime=0,t.portBindings=[],t.config={Image:"",Registry:""},t.state={recreateContainerInProgress:!1,joinNetworkInProgress:!1,leaveNetworkInProgress:!1},t.updateRestartPolicy=function(n,a){return a="on-failure"===n?a:void 0,l.updateRestartPolicy(t.container.Id,n,a).then(function(){t.container.HostConfig.RestartPolicy={Name:n,MaximumRetryCount:a},p.success("重启策略已更新")}).catch(function(t){return p.error("失败",t,"无法更新重启策略"),e.reject(t)})};var h=function(){var e=a.params().nodeName;v.setPortainerAgentTargetHeader(e),t.nodeName=e,l.container(a.params().id).then(function(e){var n=e;t.container=n,t.container.edit=!1,t.container.newContainerName=i("trimcontainername")(n.Name),n.State.Running?t.activityTime=r.a.duration(r()(n.State.StartedAt).utc().diff(r()().utc())).humanize():"created"===n.State.Status?t.activityTime=r.a.duration(r()(n.Created).utc().diff(r()().utc())).humanize():t.activityTime=r.a.duration(r()().utc().diff(r()(n.State.FinishedAt).utc())).humanize(),t.portBindings=[],n.NetworkSettings.Ports&&angular.forEach(Object.keys(n.NetworkSettings.Ports),function(e){if(n.NetworkSettings.Ports[e]){var a={};a.container=e,a.host=n.NetworkSettings.Ports[e][0].HostIp+":"+n.NetworkSettings.Ports[e][0].HostPort,t.portBindings.push(a)}})}).catch(function(e){p.error("失败",e,"无法检索容器信息")})};function b(e,t,n,a){t(e).then(function(){p.success(n,e),h()}).catch(function(e){p.error("失败",e,a)})}function x(a){var r=t.container,i=s.configFromContainer(r.Model);t.state.recreateContainerInProgress=!0;var o=r.State.Running;return function(){if(!a)return e.when();return g.retrieveRegistryFromRepository(r.Config.Image).then(function(e){return f.pullImage(r.Config.Image,e,!0)})}().then(function(){if(!o)return e.when();return l.stopContainer(r.Id)}).then(function(){return l.renameContainer(r.Id,r.Name+"-old")}).then(function(){var t=i.NetworkingConfig.EndpointsConfig,n=Object.keys(t);n.length>1&&(i.NetworkingConfig.EndpointsConfig={},i.NetworkingConfig.EndpointsConfig[n[0]]=t[0]);return e.all([l.createContainer(i),t])}).then(function(t){var n=t[0],a=t[1],r=Object.keys(a).map(function(e){d.connectContainer(e,n.Id)});return e.all(r).then(function(){return n})}).then(function(t){if(!o)return e.when(t);return l.startContainer(t.Id).then(function(){return t})}).then(function(t){if(!r.ResourceControl)return e.when();var n=t.Id,a=r.ResourceControl,i=a.UserAccesses.map(function(e){return e.UserId}),o=a.TeamAccesses.map(function(e){return e.TeamId});return m.createResourceControl(a.Public,i,o,n,"container",[])}).then(function(e){return l.remove(r,!0).then(function(){return e})}).then(function(){p.success("已重新创建容器"),n.go("docker.containers",{},{reload:!0})}).catch(function(e){p.error("失败",e,"无法重新创建容器"),t.state.recreateContainerInProgress=!1})}t.start=function(){b(a.params().id,l.startContainer,"已成功启动容器","无法启动容器")},t.stop=function(){b(a.params().id,l.stopContainer,"已成功停止容器","无法停止容器")},t.kill=function(){b(a.params().id,l.killContainer,"已成功终止容器","无法终止容器")},t.pause=function(){b(a.params().id,l.pauseContainer,"已成功暂停容器","无法暂停容器")},t.unpause=function(){b(a.params().id,l.resumeContainer,"已成功恢复容器","无法恢复容器")},t.restart=function(){b(a.params().id,l.restartContainer,"已成功重启容器","无法重启容器")},t.renameContainer=function(){var e=t.container;l.renameContainer(a.params().id,e.newContainerName).then(function(){e.Name=e.newContainerName,p.success("已成功重命名容器",e.Name)}).catch(function(t){e.newContainerName=e.Name,p.error("失败",t,"无法重命名容器")}).finally(function(){t.container.edit=!1})},t.containerLeaveNetwork=function(e,a){t.state.leaveNetworkInProgress=!0,d.disconnectContainer(a,e.Id,!1).then(function(){p.success("容器",e.Id,"已离开网络"),n.reload()}).catch(function(e){p.error("失败",e,"无法从网络断开容器")}).finally(function(){t.state.leaveNetworkInProgress=!1})},t.containerJoinNetwork=function(e,a){t.state.joinNetworkInProgress=!0,d.connectContainer(a,e.Id).then(function(){p.success("容器",e.Id,"已加入网络"),n.reload()}).catch(function(e){p.error("失败",e,"无法从容器连接到网络")}).finally(function(){t.state.joinNetworkInProgress=!1})},t.commit=function(){var e=t.config.Image,n=t.config.Registry,r=c.createImageConfigForCommit(e,n.URL);o.commitContainer({id:a.params().id,tag:r.tag,repo:r.repo},function(){h(),p.success("已成功提交容器",a.params().id),t.config.Image=""},function(e){h(),p.error("Failure",e,"Unable to commit container")})},t.confirmRemove=function(){var e="您即将移除一个容器。";t.container.State.Running&&(e="您即将移除正在运行的容器。"),u.confirmContainerDeletion(e,function(e){if(e){var a=!1;e[0]&&(a=!0),function(e){l.remove(t.container,e).then(function(){p.success("已成功删除容器"),n.go("docker.containers",{},{reload:!0})}).catch(function(e){p.error("失败",e,"无法删除容器")})}(a)}})},t.recreate=function(){u.confirmContainerRecreation(function(e){if(e){var t=!1;e[0]&&(t=!0),x(t)}})};var y=t.applicationState.endpoint.mode.provider,w=t.applicationState.endpoint.apiVersion;d.networks("DOCKER_STANDALONE"===y||"DOCKER_SWARM_MODE"===y,!1,"DOCKER_SWARM_MODE"===y&&w>=1.25).then(function(e){var n=e;t.availableNetworks=n}).catch(function(e){p.error("失败",e,"无法检索网络")}),h()}])},function(e,t){angular.module("portainer.docker").controller("ContainerInspectController",["$scope","$transition$","Notifications","ContainerService","HttpRequestHelper",function(e,t,n,a,r){e.state={DisplayTextView:!1},e.containerInfo={},r.setPortainerAgentTargetHeader(t.params().nodeName),a.inspect(t.params().id).then(function(t){e.containerInfo=t}).catch(function(e){n.error("失败",e,"无法检查容器")})}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n.n(a);angular.module("portainer.docker").controller("ContainerLogsController",["$scope","$transition$","$interval","ContainerService","Notifications","HttpRequestHelper",function(e,t,n,a,i,o){function s(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function l(o){var l=e.state.refreshRate;e.repeater=n(function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount,o).then(function(t){e.logs=t}).catch(function(e){s(),i.error("失败",e,"无法检索容器日志")})},1e3*l)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(t){t?l(!e.container.Config.Tty):s()},e.$on("$destroy",function(){s()}),o.setPortainerAgentTargetHeader(t.params().nodeName),a.container(t.params().id).then(function(n){var o,c=n;e.container=c,o=!c.Config.Tty,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount,o).then(function(t){e.logs=t,l(o)}).catch(function(e){s(),i.error("失败",e,"无法检索容器日志")})}).catch(function(e){i.error("Failure",e,"无法检索容器信息")})}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(2),a=n.n(t);angular.module("portainer.docker").controller("ContainerStatsController",["$q","$scope","$transition$","$document","$interval","ContainerService","ChartService","Notifications","HttpRequestHelper",function(t,n,r,i,o,s,l,c,d){function p(){var e=n.repeater;angular.isDefined(e)&&(o.cancel(e),e=null)}function u(e,t){if(e.Networks.length>0){var n=e.Networks[0].rx_bytes,r=e.Networks[0].tx_bytes,i=a()(e.read).format("HH:mm:ss");l.UpdateNetworkChart(i,n,r,t)}}function m(e,t){var n=a()(e.read).format("HH:mm:ss");l.UpdateMemoryChart(n,e.MemoryUsage,e.MemoryCache,t)}function g(e,t){var n=a()(e.read).format("HH:mm:ss"),r=e.isWindows?function(e){var t=e.NumProcs*parseFloat(a()(e.read,"YYYY-MM-DDTHH:mm:ss.SSSSSSSSSZ").valueOf()-a()(e.preread,"YYYY-MM-DDTHH:mm:ss.SSSSSSSSSZ").valueOf()),n=0;t>0&&(n=parseFloat(e.CurrentCPUTotalUsage-e.PreviousCPUTotalUsage)/parseFloat(100*t));return n}(e):function(e){var t=0,n=e.CurrentCPUTotalUsage-e.PreviousCPUTotalUsage,a=e.CurrentCPUSystemUsage-e.PreviousCPUSystemUsage;a>0&&n>0&&(t=n/a*e.CPUCores*100);return t}(e);l.UpdateCPUChart(n,r,t)}function f(e,a,i){var l=n.state.refreshRate;n.repeater=o(function(){t.all({stats:s.containerStats(r.params().id),top:s.containerTop(r.params().id)}).then(function(t){var r=t.stats;n.processInfo=t.top,u(r,e),m(r,i),g(r,a)}).catch(function(e){p(),c.error("失败",e,"无法检索容器统计信息")})},1e3*l)}function v(){var a=e("#networkChart"),i=l.CreateNetworkChart(a);n.networkChart=i;var o=e("#cpuChart"),d=l.CreateCPUChart(o);n.cpuChart=d;var v=e("#memoryChart"),h=l.CreateMemoryChart(v);n.memoryChart=h,function(e,a,i){t.all({stats:s.containerStats(r.params().id),top:s.containerTop(r.params().id)}).then(function(t){var r=t.stats;n.processInfo=t.top,0===r.Networks.length&&(n.state.networkStatsUnavailable=!0),u(r,e),m(r,i),g(r,a),f(e,a,i)}).catch(function(e){p(),c.error("失败",e,"无法检索容器统计信息")})}(i,d,h)}n.state={refreshRate:"5",networkStatsUnavailable:!1},n.$on("$destroy",function(){p()}),n.changeUpdateRepeater=function(){var t=n.networkChart,a=n.cpuChart,r=n.memoryChart;p(),f(t,a,r),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(1500)},d.setPortainerAgentTargetHeader(r.params().nodeName),s.container(r.params().id).then(function(e){n.container=e}).catch(function(e){c.error("失败",e,"无法检索容器信息")}),i.ready(function(){v()})}])}.call(this,n(30))},function(e,t){angular.module("portainer.docker").controller("DashboardController",["$scope","$q","ContainerService","ImageService","NetworkService","VolumeService","SystemService","ServiceService","StackService","EndpointService","Notifications","EndpointProvider","StateManager",function(e,t,n,a,r,i,o,s,l,c,d,p,u){var m,g;e.dismissInformationPanel=function(e){u.dismissInformationPanel(e)},e.offlineMode=!1,m=e.applicationState.endpoint.mode,g=p.endpointID(),t.all({containers:n.containers(1),images:a.images(!1),volumes:i.volumes(),networks:r.networks(!0,!0,!0),services:"DOCKER_SWARM_MODE"===m.provider&&"MANAGER"===m.role?s.services():[],stacks:l.stacks(!0,"DOCKER_SWARM_MODE"===m.provider&&"MANAGER"===m.role,g),info:o.info(),endpoint:c.endpoint(g)}).then(function(t){e.containers=t.containers,e.images=t.images,e.volumeCount=t.volumes.length,e.networkCount=t.networks.length,e.serviceCount=t.services.length,e.stackCount=t.stacks.length,e.info=t.info,e.endpoint=t.endpoint,e.offlineMode=p.offlineMode()}).catch(function(e){d.error("失败",e,"无法加载仪表板数据")})}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n.n(a);angular.module("portainer.docker").controller("EventsController",["$scope","Notifications","SystemService",function(e,t,n){var a,i;a=r()().subtract(24,"hour").unix(),i=r()().unix(),n.events(a,i).then(function(t){e.events=t}).catch(function(e){t.error("失败",e,"无法加载事件")})}])},function(e,t){angular.module("portainer.docker").controller("HostBrowserViewController",["SystemService","Notifications",function(e,t){var n=this;n.$onInit=function(){e.info().then(function(e){n.host=e}).catch(function(e){t.error("无法检索主机信息",e)})}}])},function(e,t,n){var a=n(701);angular.module("portainer.docker").component("hostBrowserView",{templateUrl:a,controller:"HostBrowserViewController"})},function(e,t){var n="app/docker/views/host/host-browser-view/host-browser-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主机浏览器"></rd-header-title>\n  <rd-header-content>\n      主机 &gt; <a ui-sref="docker.host">{{ $ctrl.host.Name }}</a> &gt; 浏览\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <host-browser\n     ng-if="$ctrl.host"\n    ></host-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("HostJobController",["SystemService","Notifications",function(e,t){var n=this;n.$onInit=function(){e.info().then(function(e){n.host=e}).catch(function(e){t.error("无法检索主机信息",e)})}}])},function(e,t,n){var a=n(704);angular.module("portainer.docker").component("hostJobView",{templateUrl:a,controller:"HostJobController"})},function(e,t){var n="app/docker/views/host/host-job/host-job.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主机执行任务"></rd-header-title>\n  <rd-header-content>\n    主机 &gt; <a ui-sref="docker.host">{{ $ctrl.host.Name }}</a> &gt; 执行任务\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <execute-job-form></execute-job-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("HostViewController",["$q","SystemService","Notifications","StateManager","AgentService","ContainerService","Authentication","EndpointProvider",function(e,t,n,a,r,i,o,s){var l=this;this.$onInit=function(){var c=a.getState();l.state.isAgent=c.endpoint.mode.agentProxy,l.state.isAdmin=o.isAdmin();var d=c.endpoint.agentApiVersion;l.state.agentApiVersion=d,l.state.enableHostManagementFeatures=c.application.enableHostManagementFeatures,e.all({version:t.version(),info:t.info(),jobs:l.state.isAdmin?i.containers(!0,{label:["io.portainer.job.endpoint"]}):[]}).then(function(e){var t;if(l.engineDetails=function(e){var t=e.version,n=e.info;return{releaseVersion:t.Version,apiVersion:t.ApiVersion,rootDirectory:n.DockerRootDir,storageDriver:n.Driver,loggingDriver:n.LoggingDriver,volumePlugins:n.Plugins.Volume,networkPlugins:n.Plugins.Network}}(e),l.hostDetails={os:{arch:(t=e.info).Architecture,type:t.OSType,name:t.OperatingSystem},name:t.Name,kernelVersion:t.KernelVersion,totalCPU:t.NCPU,totalMemory:t.MemTotal},l.state.offlineMode=s.offlineMode(),l.jobs=e.jobs,l.state.isAgent&&d>1)return r.hostInfo(e.info.Hostname).then(function(e){l.devices=e.PCIDevices,l.disks=e.PhysicalDisks})}).catch(function(e){n.error("失败",e,"无法检索引擎详情")})},l.state={isAgent:!1,isAdmin:!1,offlineMode:!1},this.engineDetails={},this.hostDetails={},this.devices=null,this.disks=null}])},function(e,t,n){var a=n(707);angular.module("portainer.docker").component("hostView",{templateUrl:a,controller:"HostViewController"})},function(e,t){var n="app/docker/views/host/host-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<host-overview\n  engine-details="$ctrl.engineDetails"\n  host-details="$ctrl.hostDetails"\n  is-agent="$ctrl.state.isAgent"\n  agent-api-version="$ctrl.state.agentApiVersion"\n  disks="$ctrl.disks"\n  devices="$ctrl.devices"\n  refresh-url="docker.host"\n  browse-url="docker.host.browser"\n  offline-mode="$ctrl.state.offlineMode"\n  is-job-enabled="$ctrl.state.isAdmin && !$ctrl.state.offlineMode"\n  host-features-enabled="$ctrl.state.enableHostManagementFeatures"\n  job-url="docker.host.job"\n  jobs="$ctrl.jobs"\n></host-overview>')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0),n(18),n(3);angular.module("portainer.docker").controller("BuildImageController",["$scope","$state","BuildService","Notifications","HttpRequestHelper",function(e,t,n,a,r){e.state={BuildType:"editor",actionInProgress:!1,activeTab:0},e.formValues={ImageNames:[{Name:""}],UploadFile:null,DockerFileContent:"",URL:"",Path:"Dockerfile",NodeName:null},e.addImageName=function(){e.formValues.ImageNames.push({Name:""})},e.removeImageName=function(t){e.formValues.ImageNames.splice(t,1)},e.buildImage=function(){var t=e.state.BuildType;if("editor"!==t||""!==e.formValues.DockerFileContent){e.state.actionInProgress=!0;var i=e.formValues.ImageNames.filter(function(e){return e.Name}).map(function(e){return e.Name}),o=e.formValues.NodeName;r.setPortainerAgentTargetHeader(o),function(t,a){var r=e.state.BuildType,i=e.formValues.Path;if("upload"===r){var o=e.formValues.UploadFile;return n.buildImageFromUpload(a,o,i)}if("url"===r){var s=e.formValues.URL;return n.buildImageFromURL(a,s,i)}var l=e.formValues.DockerFileContent;return n.buildImageFromDockerfileContent(a,l)}(0,i).then(function(t){e.buildLogs=t.buildLogs,e.state.activeTab=1,t.hasError?a.error("构建期间发生错误",{msg:"请检查构建的输出日志"}):a.success("已成功构建镜像")}).catch(function(e){a.error("失败",e,"无法构建镜像")}).finally(function(){e.state.actionInProgress=!1})}else e.state.formValidationError="Dockerfile内容不能为空"},e.validImageNames=function(){for(var t=0;t<e.formValues.ImageNames.length;t++){if(""!==e.formValues.ImageNames[t].Name)return!0}return!1},e.editorUpdate=function(t){e.formValues.DockerFileContent=t.getValue()}}])},function(e,t,n){"use strict";n.r(t),function(e){n(0);var t=n(13);angular.module("portainer.docker").controller("ImageController",["$q","$scope","$transition$","$state","$timeout","ImageService","RegistryService","Notifications","HttpRequestHelper","ModalService","FileSaver","Blob",function(n,a,r,i,o,s,l,c,d,p,u,m){a.formValues={Image:"",Registry:""},a.state={exportInProgress:!1},a.sortType="Order",a.sortReverse=!1,a.order=function(e){a.sortReverse=a.sortType===e&&!a.sortReverse,a.sortType=e},a.toggleLayerCommand=function(t){e("#layer-command-expander"+t+" span").toggleClass("glyphicon-plus-sign glyphicon-minus-sign"),e("#layer-command-"+t+"-short").toggle(),e("#layer-command-"+t+"-full").toggle()},a.tagImage=function(){var e=a.formValues.Image,t=a.formValues.Registry;s.tagImage(r.params().id,e,t.URL).then(function(){c.success("已成功标记镜像TAG"),i.go("docker.images.image",{id:r.params().id},{reload:!0})}).catch(function(e){c.error("失败",e,"无法标记镜像TAG")})},a.pushTag=function(t){e("#uploadResourceHint").show(),l.retrieveRegistryFromRepository(t).then(function(e){var n=e;return s.pushImage(t,n)}).then(function(){c.success("已成功推送镜像",t)}).catch(function(e){c.error("失败",e,"无法将镜像推送到存储库")}).finally(function(){e("#uploadResourceHint").hide()})},a.pullTag=function(t){e("#downloadResourceHint").show(),l.retrieveRegistryFromRepository(t).then(function(e){var n=e;return s.pullImage(t,n,!1)}).then(function(){c.success("已成功拉取镜像",t)}).catch(function(e){c.error("失败",e,"无法拉取镜像")}).finally(function(){e("#downloadResourceHint").hide()})},a.removeTag=function(e){s.deleteImage(e,!1).then(function(){1===a.image.RepoTags.length?(c.success("已成功删除镜像",e),i.go("docker.images",{},{reload:!0})):(c.success("已删除TAG标签",e),i.go("docker.images.image",{id:r.params().id},{reload:!0}))}).catch(function(e){c.error("失败",e,"无法删除镜像")})},a.removeImage=function(e){s.deleteImage(e,!1).then(function(){c.success("已成功删除镜像",e),i.go("docker.images",{},{reload:!0})}).catch(function(e){c.error("失败",e,"无法删除镜像")})},a.exportImage=function(e){0===e.RepoTags.length||Object(t.a)(e.RepoTags,"<none>")?c.warning("","无法下载没有标签的图像"):p.confirmImageExport(function(t){t&&function(e){d.setPortainerAgentTargetHeader(e.NodeName),a.state.exportInProgress=!0,s.downloadImages([e]).then(function(e){var t=new m([e.file],{type:"application/x-tar"});u.saveAs(t,"images.tar"),c.success("已成功下载镜像")}).catch(function(e){c.error("失败",e,"无法下载镜像")}).finally(function(){a.state.exportInProgress=!1})}(e)})},function(){d.setPortainerAgentTargetHeader(r.params().nodeName);var e=a.applicationState.endpoint.mode.provider;n.all({image:s.image(r.params().id),history:"VMWARE_VIC"!==e?s.history(r.params().id):[]}).then(function(e){a.image=e.image,a.history=e.history}).catch(function(e){c.error("失败",e,"无法检索镜像详情"),i.go("docker.images")})}()}])}.call(this,n(30))},function(e,t,n){"use strict";n.r(t);n(1),n(6),n(5),n(0);var a=n(48),r=n(4);angular.module("portainer.docker").controller("ImagesController",["$scope","$state","ImageService","Notifications","ModalService","HttpRequestHelper","FileSaver","Blob","EndpointProvider",function(e,t,n,i,o,s,l,c,d){e.state={actionInProgress:!1,exportInProgress:!1},e.formValues={Image:"",Registry:"",NodeName:null},e.pullImage=function(){var a=e.formValues.Image,r=e.formValues.Registry,o=e.formValues.NodeName;s.setPortainerAgentTargetHeader(o),e.state.actionInProgress=!0,n.pullImage(a,r,!1).then(function(){i.success("已成功拉取镜像",a),t.reload()}).catch(function(e){i.error("失败",e,"无法拉取镜像")}).finally(function(){e.state.actionInProgress=!1})},e.confirmRemovalAction=function(t,n){o.confirmImageForceRemoval(function(a){a&&e.removeAction(t,n)})},e.downloadAction=function(t){(function(e){for(var t=0;t<e.length;t++){var n=e[t];if(Object(r.a)(n.RepoTags,function(e){return e.indexOf("<none>")>-1}))return i.warning("","无法下载没有标签的图像"),!1}return!(Object(a.a)(e,"NodeName").length>1&&(i.warning("","无法同时从不同的节点下载镜像"),1))})(t)&&o.confirmImageExport(function(a){var r;a&&(r=t,s.setPortainerAgentTargetHeader(r[0].NodeName),e.state.exportInProgress=!0,n.downloadImages(r).then(function(e){var t=new c([e.file],{type:"application/x-tar"});l.saveAs(t,"images.tar"),i.success("已成功下载镜像")}).catch(function(e){i.error("失败",e,"无法下载镜像")}).finally(function(){e.state.exportInProgress=!1}))})},e.removeAction=function(a,r){var o=a.length;angular.forEach(a,function(a){s.setPortainerAgentTargetHeader(a.NodeName),n.deleteImage(a.Id,r).then(function(){i.success("已成功删除镜像",a.Id);var t=e.images.indexOf(a);e.images.splice(t,1)}).catch(function(e){i.error("失败",e,"无法删除镜像")}).finally(function(){0===--o&&t.reload()})})},e.offlineMode=!1,n.images(!0).then(function(t){e.images=t,e.offlineMode=d.offlineMode()}).catch(function(t){i.error("失败",t,"无法检索镜像"),e.images=[]})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.docker").controller("ImportImageController",["$scope","$state","ImageService","Notifications","HttpRequestHelper",function(e,t,n,a,r){e.state={actionInProgress:!1},e.formValues={UploadFile:null,NodeName:null},e.uploadImage=function(){e.state.actionInProgress=!0;var t=e.formValues.NodeName;r.setPortainerAgentTargetHeader(t);var i=e.formValues.UploadFile;n.uploadImage(i).then(function(){a.success("已成功上传镜像")}).catch(function(e){a.error("失败",e.message,"无法上传镜像")}).finally(function(){e.state.actionInProgress=!1})}}])},function(e,t,n){"use strict";n.r(t);n(0),n(11),n(1),n(6);var a=n(24),r=n(242);angular.module("portainer.docker").controller("CreateNetworkController",["$q","$scope","$state","PluginService","Notifications","NetworkService","LabelHelper","Authentication","ResourceControlService","FormValidator","HttpRequestHelper",function(e,t,n,i,o,s,l,c,d,p,u){function m(){var e=angular.copy(t.config);return function(e){if(t.formValues.Subnet){var n={};n.Subnet=t.formValues.Subnet,t.formValues.Gateway&&(n.Gateway=t.formValues.Gateway),t.formValues.IPRange&&(n.IPRange=t.formValues.IPRange),t.formValues.AuxAddress&&(n.AuxAddress=t.formValues.AuxAddress),e.IPAM.Config.push(n)}}(e),function(e){var n={};t.formValues.DriverOptions.forEach(function(e){n[e.name]=e.value}),e.Options=n}(e),function(e){e.Labels=l.fromKeyValueToLabelHash(t.formValues.Labels)}(e),e}function g(e){u.setPortainerAgentTargetHeader(e.nodeName),u.setPortainerAgentManagerOperation(e.managerOperation),t.state.actionInProgress=!0,s.create(e.networkConfiguration).then(function(t){var n=t.Id,a=e.userDetails.ID;return d.applyResourceControl("network",n,a,e.accessControlData,[])}).then(function(){o.success("已成功创建网络"),e.reload&&n.go("docker.networks",{},{reload:!0})}).catch(function(e){o.error("失败",e,"在创建网络期间发生错误")}).finally(function(){t.state.actionInProgress=!1})}var f;t.formValues={DriverOptions:[],Subnet:"",Gateway:"",IPRange:"",AuxAddress:"",Labels:[],AccessControlData:new a.AccessControlFormData,NodeName:null,Macvlan:new r.MacvlanFormData},t.state={formValidationError:"",actionInProgress:!1},t.availableNetworkDrivers=[],t.config={Driver:"bridge",CheckDuplicate:!0,Internal:!1,Attachable:!1,IPAM:{Driver:"default",Config:[]},Labels:{}},t.addDriverOption=function(){t.formValues.DriverOptions.push({name:"",value:""})},t.removeDriverOption=function(e){t.formValues.DriverOptions.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({key:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.create=function(){var e=m(),n=t.formValues.AccessControlData,a=c.getUserDetails();if(function(e,n){var a;return t.state.formValidationError="",!(a=p.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(n,c.isAdmin())){var r,i={nodeName:t.formValues.NodeName,managerOperation:!1,networkConfiguration:e,userDetails:a,accessControlData:n,reload:!0};if(t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider&&"overlay"===t.config.Driver&&(i.managerOperation=!0),"macvlan"===t.config.Driver)if("local"===t.formValues.Macvlan.Scope)(r=e).Internal=null,r.Attachable=null,r.ConfigOnly=!0,r.Options.parent=t.formValues.Macvlan.ParentNetworkCard;else if("swarm"===t.formValues.Macvlan.Scope){var o=t.formValues.Macvlan.SelectedNetworkConfig;!function(e,n){e.ConfigFrom={Network:n.Name},"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider?e.Scope="swarm":e.Scope="local"}(e,o),i.nodeName=o.NodeName}if("macvlan"===t.config.Driver&&"local"===t.formValues.Macvlan.Scope&&t.applicationState.endpoint.mode.agentProxy&&"DOCKER_SWARM_MODE"===t.applicationState.endpoint.mode.provider){var s=t.formValues.Macvlan.DatatableState.selectedItems;s.forEach(function(e,t){i.nodeName=e.Hostname,i.reload=t===s.length-1,g(i)})}else g(i)}},f=t.applicationState.endpoint.apiVersion,i.networkPlugins(f<1.25).then(function(e){t.availableNetworkDrivers=e}).catch(function(e){o.error("失败",e,"无法检索网络驱动程序")})}])},function(e,t,n){"use strict";n.r(t);n(18),n(1),n(6),n(157),n(158);angular.module("portainer.docker").controller("NetworkController",["$scope","$state","$transition$","$filter","NetworkService","Container","Notifications","HttpRequestHelper","PREDEFINED_NETWORKS",function(e,t,n,a,r,i,o,s,l){function c(t,n){var r=[];n.forEach(function(e){var n=t.Containers[e.Id];n&&(n.Id=e.Id,n.Name||(n.Name=a("trimcontainername")(e.Names[0])),r.push(n))}),e.containersInNetwork=r}var d;e.network={},e.removeNetwork=function(){r.remove(n.params().id,n.params().id).then(function(){o.success("已成功删除网络",n.params().id),t.go("docker.networks",{})}).catch(function(e){o.error("失败",e,"无法删除网络")})},e.containerLeaveNetwork=function(e,a){s.setPortainerAgentTargetHeader(a.NodeName),r.disconnectContainer(n.params().id,a.Id,!1).then(function(){o.success("容器已离开网络",n.params().id),t.go("docker.networks.network",{id:e.Id},{reload:!0})}).catch(function(e){o.error("失败",e,"无法从网络断开容器")})},e.allowRemove=function(e){return!l.includes(e.Name)},d=n.params().nodeName,s.setPortainerAgentTargetHeader(d),e.nodeName=d,r.network(n.params().id).then(function(t){var a,r;e.network=t,"VMWARE_VIC"!==e.applicationState.endpoint.mode.provider&&(a=t,r=e.applicationState.endpoint.apiVersion,a.Containers&&(r<1.24?i.query({},function(e){var t=e.filter(function(e){if(e.HostConfig.NetworkMode===a.Name)return e});c(a,t)},function(e){o.error("失败",e,"无法检索网络中的容器")}):i.query({filters:{network:[n.params().id]}},function(e){c(a,e)},function(e){o.error("失败",e,"无法检索网络中的容器")})))}).catch(function(e){o.error("失败",e,"无法检索网络信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.docker").controller("NetworksController",["$scope","$state","NetworkService","Notifications","HttpRequestHelper","EndpointProvider",function(e,t,n,a,r,i){e.removeAction=function(i){var o=i.length;angular.forEach(i,function(i){r.setPortainerAgentTargetHeader(i.NodeName),n.remove(i.Id).then(function(){a.success("已成功删除网络",i.Name);var t=e.networks.indexOf(i);e.networks.splice(t,1)}).catch(function(e){a.error("失败",e,"无法删除网络")}).finally(function(){0===--o&&t.reload()})})},e.offlineMode=!1,n.networks(!0,!0,!0).then(function(t){e.networks=t,e.offlineMode=i.offlineMode()}).catch(function(t){e.networks=[],a.error("失败",t,"无法检索网络")})}])},function(e,t){angular.module("portainer.docker").controller("NodeBrowserController",["$stateParams","NodeService","HttpRequestHelper","Notifications",function(e,t,n,a){var r=this;r.$onInit=function(){r.nodeId=e.id,t.node(r.nodeId).then(function(e){n.setPortainerAgentTargetHeader(e.Hostname),r.node=e}).catch(function(e){a.error("无法检索主机信息",e)})}}])},function(e,t,n){var a=n(717);angular.module("portainer.docker").component("nodeBrowserView",{templateUrl:a,controller:"NodeBrowserController"})},function(e,t){var n="app/docker/views/nodes/node-browser/node-browser.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="节点浏览器"></rd-header-title>\n  <rd-header-content>\n      <a ui-sref="docker.swarm">Swarm集群</a> &gt; <a ui-sref="docker.nodes.node({ id: $ctrl.nodeId })">{{ $ctrl.node.Hostname }}</a> &gt; 浏览\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <host-browser\n     ng-if="$ctrl.node"\n    ></host-browser>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(18),n(3);angular.module("portainer.docker").controller("NodeDetailsViewController",["$q","$stateParams","NodeService","StateManager","AgentService","ContainerService","Authentication",function(e,t,n,a,r,i,o){var s=this;function l(e,t){return e.filter(function(e){return e.Type===t}).map(function(e){return e.Name})}s.$onInit=function(){var c=a.getState();s.state.isAgent=c.endpoint.mode.agentProxy,s.state.isAdmin=o.isAdmin(),s.state.enableHostManagementFeatures=c.application.enableHostManagementFeatures;var d=s.state.isAdmin&&s.state.isAgent,p=t.id;e.all({node:n.node(p),jobs:d?i.containers(!0,{label:["io.portainer.job.endpoint"]}):[]}).then(function(e){var t=e.node;if(s.originalNode=t,s.hostDetails=function(e){return{os:{arch:e.PlatformArchitecture,type:e.PlatformOS},name:e.Hostname,totalCPU:e.CPUs/1e9,totalMemory:e.Memory}}(t),s.engineDetails=function(e){return{releaseVersion:e.EngineVersion,volumePlugins:l(e.Plugins,"Volume"),networkPlugins:l(e.Plugins,"Network")}}(t),s.nodeDetails=function(e){return{name:e.Name,role:e.Role,managerAddress:e.ManagerAddr,availability:e.Availability,status:e.Status,engineLabels:e.EngineLabels,nodeLabels:e.Labels}}(t),s.jobs=e.jobs,s.state.isAgent){var n=c.endpoint.agentApiVersion;if(s.state.agentApiVersion=n,n<2)return;r.hostInfo(t.Hostname).then(function(e){s.devices=e.PCIDevices,s.disks=e.PhysicalDisks})}})},s.state={isAgent:!1,isAdmin:!1}}])},function(e,t,n){var a=n(720);angular.module("portainer.docker").component("nodeDetailsView",{templateUrl:a,controller:"NodeDetailsViewController"})},function(e,t){var n="app/docker/views/nodes/node-details/node-details-view.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<host-overview\n  agent-api-version="$ctrl.state.agentApiVersion"\n  is-agent="$ctrl.state.isAgent"\n  host-details="$ctrl.hostDetails"\n  engine-details="$ctrl.engineDetails"\n  disks="$ctrl.disks"\n  devices="$ctrl.devices"\n  refresh-url="docker.nodes.node"\n  browse-url="docker.nodes.node.browse"\n  is-job-enabled="$ctrl.state.isAdmin && $ctrl.state.isAgent"\n  host-features-enabled="$ctrl.state.enableHostManagementFeatures"\n  job-url="docker.nodes.node.job"\n  jobs="$ctrl.jobs"\n>\n  <swarm-node-details-panel\n    details="$ctrl.nodeDetails"\n    original-node="$ctrl.originalNode"\n  ></swarm-node-details-panel>\n</host-overview>')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("NodeJobController",["$stateParams","NodeService","HttpRequestHelper","Notifications",function(e,t,n,a){var r=this;r.$onInit=function(){r.nodeId=e.id,t.node(r.nodeId).then(function(e){n.setPortainerAgentTargetHeader(e.Hostname),r.node=e}).catch(function(e){a.error("无法检索主机信息",e)})}}])},function(e,t,n){var a=n(723);angular.module("portainer.docker").component("nodeJobView",{templateUrl:a,controller:"NodeJobController"})},function(e,t){var n="app/docker/views/nodes/node-job/node-job.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="主机执行任务"></rd-header-title>\n  <rd-header-content>\n      <a ui-sref="docker.swarm">Swarm集群</a> &gt; <a ui-sref="docker.nodes.node({ id: $ctrl.nodeId })">{{ $ctrl.node.Hostname }}</a> &gt; 执行任务\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <execute-job-form\n          node-name="$ctrl.node.Hostname"\n        ></execute-job-form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0);var a=n(24);angular.module("portainer.docker").controller("CreateSecretController",["$scope","$state","Notifications","SecretService","LabelHelper","Authentication","ResourceControlService","FormValidator",function(e,t,n,r,i,o,s,l){function c(){var t={};return t.Name=e.formValues.Name,function(t){e.formValues.encodeSecret?t.Data=btoa(unescape(encodeURIComponent(e.formValues.Data))):t.Data=e.formValues.Data}(t),function(t){t.Labels=i.fromKeyValueToLabelHash(e.formValues.Labels)}(t),t}e.formValues={Name:"",Data:"",Labels:[],encodeSecret:!0,AccessControlData:new a.AccessControlFormData},e.state={formValidationError:"",actionInProgress:!1},e.addLabel=function(){e.formValues.Labels.push({key:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.create=function(){var a=e.formValues.AccessControlData,i=o.getUserDetails(),d=o.isAdmin();if(function(t,n){var a;return e.state.formValidationError="",!(a=l.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(a,d)){e.state.actionInProgress=!0;var p=c();r.create(p).then(function(e){var t=e.ID,n=i.ID;return s.applyResourceControl("secret",t,n,a,[])}).then(function(){n.success("已成功创建密钥"),t.go("docker.secrets",{},{reload:!0})}).catch(function(e){n.error("失败",e,"无法创建密钥")}).finally(function(){e.state.actionInProgress=!1})}}}])},function(e,t){angular.module("portainer.docker").controller("SecretController",["$scope","$transition$","$state","SecretService","Notifications",function(e,t,n,a,r){e.removeSecret=function(e){a.remove(e).then(function(){r.success("已成功删除密钥"),n.go("docker.secrets",{})}).catch(function(e){r.error("失败",e,"无法删除密钥")})},a.secret(t.params().id).then(function(t){e.secret=t}).catch(function(e){r.error("失败",e,"无法检索到密钥详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.docker").controller("SecretsController",["$scope","$state","SecretService","Notifications",function(e,t,n,a){e.removeAction=function(r){var i=r.length;angular.forEach(r,function(r){n.remove(r.Id).then(function(){a.success("已成功删除密钥",r.Name);var t=e.secrets.indexOf(r);e.secrets.splice(t,1)}).catch(function(e){a.error("失败",e,"无法删除密钥")}).finally(function(){0===--i&&t.reload()})})},n.secrets().then(function(t){e.secrets=t}).catch(function(t){e.secrets=[],a.error("失败",t,"无法检索密钥")})}])},function(e,t,n){"use strict";n.r(t);n(0),n(19),n(34),n(5),n(11),n(20),n(3),n(18),n(1),n(6);var a=n(189),r=n(188),i=n(24);n(728),n(729),n(730),n(731),angular.module("portainer.docker").controller("CreateServiceController",["$q","$scope","$state","$timeout","Service","ServiceHelper","ConfigService","ConfigHelper","SecretHelper","SecretService","VolumeService","NetworkService","ImageHelper","LabelHelper","Authentication","ResourceControlService","Notifications","FormValidator","PluginService","RegistryService","HttpRequestHelper","NodeService","SettingsService","WebhookService","EndpointProvider",function(e,t,n,o,s,l,c,d,p,u,m,g,f,v,h,b,x,y,w,k,$,S,C,I,P){function T(e){return[].concat.apply([],e.split("'").map(function(e,t){return t%2?e:e.split(" ")})).filter(Boolean)}function A(){var e=t.formValues,n={Name:e.Name,TaskTemplate:{ContainerSpec:{Mounts:[]},Placement:{},Resources:{Limits:{},Reservations:{}}},Mode:{},EndpointSpec:{}};return function(e,t){"replicated"===t.Mode?e.Mode.Replicated={Replicas:t.Replicas}:e.Mode.Global={}}(n,e),function(e,t){var n=f.createImageConfigForContainer(t.Image,t.Registry.URL);e.TaskTemplate.ContainerSpec.Image=n.fromImage+":"+n.tag}(n,e),function(e,t){var n=[];t.Ports.forEach(function(e){var t={Protocol:e.Protocol,PublishMode:e.PublishMode};e.TargetPort&&(t.TargetPort=+e.TargetPort,e.PublishedPort&&(t.PublishedPort=+e.PublishedPort),n.push(t))}),e.EndpointSpec.Ports=n}(n,e),function(e,t){t.EntryPoint&&(e.TaskTemplate.ContainerSpec.Command=T(t.EntryPoint)),t.Command&&(e.TaskTemplate.ContainerSpec.Args=T(t.Command)),t.User&&(e.TaskTemplate.ContainerSpec.User=t.User),t.WorkingDir&&(e.TaskTemplate.ContainerSpec.Dir=t.WorkingDir)}(n,e),function(e,t){var n=[];t.Env.forEach(function(e){e.name&&n.push(e.name+"="+e.value)}),e.TaskTemplate.ContainerSpec.Env=n}(n,e),function(e,t){e.Labels=v.fromKeyValueToLabelHash(t.Labels),e.TaskTemplate.ContainerSpec.Labels=v.fromKeyValueToLabelHash(t.ContainerLabels)}(n,e),function(e,t){t.Volumes.forEach(function(t){if(t.Source&&t.Target)if("volume"!==t.Type)e.TaskTemplate.ContainerSpec.Mounts.push(t);else{var n=function(e,t,n){return{Target:t,Source:e.Id,Type:"volume",ReadOnly:n,VolumeOptions:{Labels:e.Labels,DriverConfig:{Name:e.Driver,Options:e.Options}}}}(t.Source,t.Target,t.ReadOnly);e.TaskTemplate.ContainerSpec.Mounts.push(n)}})}(n,e),function(e,t){var n=[];t.Network&&n.push({Target:t.Network}),t.ExtraNetworks.forEach(function(e){n.push({Target:e.Name})}),e.Networks=Object(r.a)(n,a.a)}(n,e),function(e,t){var n=[];t.HostsEntries&&(t.HostsEntries.forEach(function(e){if(e.value&&e.value.indexOf(":")&&2===e.value.split(":").length){var t=e.value.split(":");n.push(t[1]+" "+t[0])}}),n.length>0&&(e.TaskTemplate.ContainerSpec.Hosts=n))}(n,e),function(e,t){e.UpdateConfig={Parallelism:t.Parallelism||0,Delay:l.translateHumanDurationToNanos(t.UpdateDelay)||0,FailureAction:t.FailureAction,Order:t.UpdateOrder}}(n,e),function(e,t){if(t.Configs){var n=[];angular.forEach(t.Configs,function(e){if(e.model){var t=d.configConfig(e.model);t.File.Name=e.FileName||t.File.Name,n.push(t)}}),e.TaskTemplate.ContainerSpec.Configs=n}}(n,e),function(e,t){if(t.Secrets){var n=[];angular.forEach(t.Secrets,function(e){if(e.model){var t=p.secretConfig(e.model);t.File.Name=t.SecretName,e.overrideTarget&&e.target&&""!==e.target&&(t.File.Name=e.target),n.push(t)}}),e.TaskTemplate.ContainerSpec.Secrets=n}}(n,e),function(e,t){e.TaskTemplate.Placement.Constraints=l.translateKeyValueToPlacementConstraints(t.PlacementConstraints),e.TaskTemplate.Placement.Preferences=l.translateKeyValueToPlacementPreferences(t.PlacementPreferences)}(n,e),function(e,t){t.CpuLimit>0&&(e.TaskTemplate.Resources.Limits.NanoCPUs=1e9*t.CpuLimit),t.CpuReservation>0&&(e.TaskTemplate.Resources.Reservations.NanoCPUs=1e9*t.CpuReservation)}(n,e),function(e,t){var n=(Math.round(8*t.MemoryLimit)/8).toFixed(3);n*=1048576,"GB"===t.MemoryLimitUnit&&(n*=1024),n>0&&(e.TaskTemplate.Resources.Limits.MemoryBytes=n);var a=(Math.round(8*t.MemoryReservation)/8).toFixed(3);a*=1048576,"GB"===t.MemoryReservationUnit&&(a*=1024),a>0&&(e.TaskTemplate.Resources.Reservations.MemoryBytes=a)}(n,e),function(e,t){e.TaskTemplate.RestartPolicy={Condition:t.RestartCondition||"any",Delay:l.translateHumanDurationToNanos(t.RestartDelay)||5e9,MaxAttempts:t.RestartMaxAttempts||0,Window:l.translateHumanDurationToNanos(t.RestartWindow)||0}}(n,e),function(e,t){var n={};t.LogDriverName&&(e.TaskTemplate.LogDriver={Name:t.LogDriverName},"none"!==t.LogDriverName&&(t.LogDriverOpts.forEach(function(e){e.name&&(n[e.name]=e.value)}),0!==Object.keys(n).length&&n.constructor===Object&&(e.TaskTemplate.LogDriver.Options=n)))}(n,e),n}var D;t.formValues={Name:"",Image:"",Registry:{},Mode:"replicated",Replicas:1,Command:"",EntryPoint:"",WorkingDir:"",User:"",Env:[],Labels:[],ContainerLabels:[],Volumes:[],Network:"",ExtraNetworks:[],HostsEntries:[],Ports:[],Parallelism:1,PlacementConstraints:[],PlacementPreferences:[],UpdateDelay:"0s",UpdateOrder:"stop-first",FailureAction:"pause",Secrets:[],Configs:[],AccessControlData:new i.AccessControlFormData,CpuLimit:0,CpuReservation:0,MemoryLimit:0,MemoryReservation:0,MemoryLimitUnit:"MB",MemoryReservationUnit:"MB",RestartCondition:"any",RestartDelay:"5s",RestartMaxAttempts:0,RestartWindow:"0s",LogDriverName:"",LogDriverOpts:[],Webhook:!1},t.state={formValidationError:"",actionInProgress:!1},t.refreshSlider=function(){o(function(){t.$broadcast("rzSliderForceRender")})},t.addPortBinding=function(){t.formValues.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},t.removePortBinding=function(e){t.formValues.Ports.splice(e,1)},t.addExtraNetwork=function(){t.formValues.ExtraNetworks.push({Name:""})},t.removeExtraNetwork=function(e){t.formValues.ExtraNetworks.splice(e,1)},t.addHostsEntry=function(){t.formValues.HostsEntries.push({})},t.removeHostsEntry=function(e){t.formValues.HostsEntries.splice(e,1)},t.addVolume=function(){t.formValues.Volumes.push({Source:"",Target:"",ReadOnly:!1,Type:"volume"})},t.removeVolume=function(e){t.formValues.Volumes.splice(e,1)},t.addConfig=function(){t.formValues.Configs.push({})},t.removeConfig=function(e){t.formValues.Configs.splice(e,1)},t.addSecret=function(){t.formValues.Secrets.push({overrideTarget:!1})},t.removeSecret=function(e){t.formValues.Secrets.splice(e,1)},t.addEnvironmentVariable=function(){t.formValues.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.formValues.Env.splice(e,1)},t.addPlacementConstraint=function(){t.formValues.PlacementConstraints.push({key:"",operator:"==",value:""})},t.removePlacementConstraint=function(e){t.formValues.PlacementConstraints.splice(e,1)},t.addPlacementPreference=function(){t.formValues.PlacementPreferences.push({strategy:"spread",value:""})},t.removePlacementPreference=function(e){t.formValues.PlacementPreferences.splice(e,1)},t.addLabel=function(){t.formValues.Labels.push({key:"",value:""})},t.removeLabel=function(e){t.formValues.Labels.splice(e,1)},t.addContainerLabel=function(){t.formValues.ContainerLabels.push({key:"",value:""})},t.removeContainerLabel=function(e){t.formValues.ContainerLabels.splice(e,1)},t.addLogDriverOpt=function(){t.formValues.LogDriverOpts.push({name:"",value:""})},t.removeLogDriverOpt=function(e){t.formValues.LogDriverOpts.splice(e,1)},t.create=function(){var a=t.formValues.AccessControlData;(function(e,n){var a;return t.state.formValidationError="",!(a=y.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)})(a,t.isAdmin)&&(t.state.actionInProgress=!0,function(a,r){var i,o=t.formValues.Registry,l=o.Authentication?k.encodedCredentials(o):"";$.setRegistryAuthenticationHeader(l),s.create(a).$promise.then(function(n){return i=n.ID,e.when(t.formValues.Webhook&&I.createServiceWebhook(i,P.endpointID()))}).then(function(){var e=h.getUserDetails().ID;return b.applyResourceControl("service",i,e,r,[])}).then(function(){x.success("已成功创建服务"),n.go("docker.services",{},{reload:!0})}).catch(function(e){x.error("失败",e,"无法创建服务")}).finally(function(){t.state.actionInProgress=!1})}(A(),a))},D=t.applicationState.endpoint.apiVersion,e.all({volumes:m.volumes(),networks:g.networks(!0,!0,!1),secrets:D>=1.25?u.secrets():[],configs:D>=1.3?c.configs():[],nodes:S.nodes(),settings:C.publicSettings(),availableLoggingDrivers:w.loggingPlugins(D<1.25)}).then(function(e){t.availableVolumes=e.volumes,t.availableNetworks=e.networks,t.availableSecrets=e.secrets,t.availableConfigs=e.configs,t.availableLoggingDrivers=e.availableLoggingDrivers,function(e){var n=0,a=0;for(var r in e)e[r].CPUs&&e[r].CPUs>n&&(n=e[r].CPUs),e[r].Memory&&e[r].Memory>a&&(a=e[r].Memory);t.state.sliderMaxCpu=n>0?n/1e9:32,t.state.sliderMaxMemory=a>0?Math.floor(a/1e3/1e3):32768}(e.nodes),t.allowBindMounts=e.settings.AllowBindMountsForRegularUsers,t.isAdmin=h.isAdmin()}).catch(function(e){x.error("失败",e,"无法初始化视图")})}])},function(e,t){var n="app/docker/views/services/create/includes/update-restart.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n      更新配置\n  </div>\n  \x3c!-- parallelism-input --\x3e\n  <div class="form-group">\n    <label for="parallelism" class="col-sm-3 col-lg-2 control-label text-left">同时更新</label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="number" class="form-control" ng-model="formValues.Parallelism" id="parallelism" placeholder="例如 1">\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        要同时更新的最大任务数（从“0”到全部一次性更新）。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !parallelism-input --\x3e\n  \x3c!-- delay-input --\x3e\n  <div class="form-group">\n    <label for="update-delay" class="col-sm-3 col-lg-2 control-label text-left">\n      更新延迟\n      <portainer-tooltip position="bottom" message="支持的格式示例： 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>                \n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.UpdateDelay" id="update-delay" placeholder="例如 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i">\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        用数字表示更新的时间间隔（单位：ns | us | ms | s | m | h），默认值是0s（0秒）。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !delay-input --\x3e\n  \x3c!-- failureAction-input --\x3e\n  <div class="form-group">\n    <label for="failure-action" class="col-sm-3 col-lg-2 control-label text-left">更新失败后的操作</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'continue\'">继续</label>\n        <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'pause\'">暂停</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        更新后无法启动的操作\n      </p>\n    </div>\n  </div>\n  \x3c!-- !failureAction-input --\x3e\n  \x3c!-- order-input --\x3e\n  <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.29">\n    <label for="update-order" class="col-sm-3 col-lg-2 control-label text-left">更新序列</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'start-first\'">优先启动</label>\n        <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'stop-first\'">优先停止</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        操作序列指令失败\n      </p>\n    </div>\n  </div>\n  \x3c!-- !order-input --\x3e\n  \n  <div class="col-sm-12 form-section-title">\n      重启策略\n  </div>\n  \x3c!-- restartCondition-input --\x3e\n  <div class="form-group">\n    <label for="restart-condition" class="col-sm-3 col-lg-2 control-label text-left">重启条件</label>\n    <div class="col-sm-4 col-lg-3">\n      <div class="btn-group btn-group-sm">\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'none\'">空</label>\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'on-failure\'">失败后</label>\n        <label class="btn btn-primary" ng-model="formValues.RestartCondition" uib-btn-radio="\'any\'">任何</label>\n      </div>\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        条件满足时重新启动（默认条件“任何”）。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartCondition-input --\x3e\n  \x3c!-- restartDelay-input --\x3e\n  <div class="form-group">\n    <label for="restart-delay" class="col-sm-3 col-lg-2 control-label text-left">\n      重启延迟\n      <portainer-tooltip position="bottom" message="支持的格式示例： 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>                \n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.RestartDelay" id="restart-delay" placeholder="例如 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i">\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        尝试重启的时间延迟间隔，以数字表示，后跟单位（ns | us | ms | s | m | h）， 默认值是5s（5秒）。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartDelay-input --\x3e\n  \x3c!-- restartMaxAttempts-input --\x3e\n   <div class="form-group">\n    <label for="restart-max-attempts" class="col-sm-3 col-lg-2 control-label text-left">重启最大尝试次数</label>\n    <div class="col-sm-4 col-lg-3">\n      <input type="number" class="form-control" ng-model="formValues.RestartMaxAttempts" id="restart-max-attempts" placeholder="例如 0">\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        在达到重启的最大尝试次数之前重新启动指定的任务（默认值为0，无限制）。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartMaxAttempts-input --\x3e\n  \x3c!-- restartWindow-input --\x3e\n  <div class="form-group">\n    <label for="restart-window" class="col-sm-3 col-lg-2 control-label text-left">\n      重新启动窗口\n      <portainer-tooltip position="bottom" message="支持的格式示例： 1h, 5m, 10s, 1000ms, 15us, 60ns."></portainer-tooltip>\n    </label>                \n    <div class="col-sm-4 col-lg-3">\n      <input type="text" class="form-control" ng-model="formValues.RestartWindow" id="restart-window" placeholder="例如 1m" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i">\n    </div>\n    <div class="col-sm-5">\n      <p class="small text-muted">\n        时间窗口用于尝试重启的评估，以数字表示，后跟单位（ns | us | ms | s | m | h，默认值是0秒，无限制。\n      </p>\n    </div>\n  </div>\n  \x3c!-- !restartWindow-input --\x3e\n</form>')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/secret.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12 small text-muted">\n      默认情况下，密钥将在容器中的<code>/run/secrets/$SECRET_NAME</code>路径下。\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">密钥</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSecret()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加密钥\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="secret in formValues.Secrets track by $index" style="margin-top: 4px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">密钥</span>\n          <select class="form-control" ng-model="secret.model" ng-options="secret.Name for secret in availableSecrets | orderBy: \'Name\'">\n            <option value="" selected="selected">选择一个密钥</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-4 input-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.30 && secret.overrideTarget">\n          <span class="input-group-addon">目标</span>\n          <input class="form-control" ng-model="secret.target" placeholder="/path/in/container">\n        </div>\n        <div class="input-group col-sm-3 input-group-sm">\n          <div class="btn-group btn-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.30">\n            <label class="btn btn-primary" ng-model="secret.overrideTarget" uib-btn-radio="false">默认位置</label>\n            <label class="btn btn-primary" ng-model="secret.overrideTarget" uib-btn-radio="true">覆盖</label>\n          </div>\n          <button class="btn btn-sm btn-danger" type="button" ng-click="removeSecret($index)">\n            <i class="fa fa-trash" aria-hidden="true"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/config.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">配置</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addConfig()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加一个配置\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="config in formValues.Configs" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">配置</span>\n          <select class="form-control" ng-model="config.model" ng-options="config.Name for config in availableConfigs | orderBy: \'Name\'">\n            <option value="" selected="selected">选择一个配置</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">在容器中的路径</span>\n          <input class="form-control" ng-model="config.FileName" placeholder="例如 /path/in/container" />\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removeConfig($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/create/includes/resources-placement.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="col-sm-12 form-section-title">\n    资源\n  </div>\n  \x3c!-- memory-reservation-input --\x3e\n  <div class="form-group">\n    <label for="memory-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      内存预留\n    </label>\n    <div class="col-sm-3">\n      <slider model="formValues.MemoryReservation" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n    </div>\n    <div class="col-sm-2">\n      <input type="number" min="0" class="form-control" ng-model="formValues.MemoryReservation">\n    </div>\n    <div class="col-sm-4">\n      <p class="small text-muted" style="margin-top: 7px;">\n        在运行任务的节点上可用的最小内存 (<b>MB</b>)\n      </p>\n    </div>\n  </div>\n  \x3c!-- !memory-reservation-input --\x3e\n  \x3c!-- memory-limit-input --\x3e\n  <div class="form-group">\n    <label for="memory-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      内存限制\n    </label>\n    <div class="col-sm-3">\n      <slider model="formValues.MemoryLimit" floor="0" ceil="state.sliderMaxMemory" step="256" ng-if="state.sliderMaxMemory"></slider>\n    </div>\n    <div class="col-sm-2">\n      <input type="number" min="0" class="form-control" ng-model="formValues.MemoryLimit">\n    </div>\n    <div class="col-sm-4" style="margin-top: 7px;">\n      <p class="small text-muted">\n        每个任务的最大内存使用量 (<b>MB</b>)\n      </p>\n    </div>\n  </div>\n  \x3c!-- !memory-limit-input --\x3e\n  \x3c!-- cpu-reservation-input --\x3e\n  <div class="form-group">\n    <label for="cpu-reservation" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      CPU预留\n    </label>\n    <div class="col-sm-5">\n      <slider model="formValues.CpuReservation" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n    </div>\n    <div class="col-sm-4" style="margin-top: 20px;">\n      <p class="small text-muted">\n        在节点上运行任务可用的最小CPU\n      </p>\n    </div>\n  </div>\n  \x3c!-- !cpu-reservation-input --\x3e\n  \x3c!-- cpu-limit-input --\x3e\n  <div class="form-group">\n    <label for="cpu-limit" class="col-sm-3 col-lg-2 control-label text-left" style="margin-top: 20px;">\n      CPU限制\n    </label>\n    <div class="col-sm-5">\n      <slider model="formValues.CpuLimit" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="state.sliderMaxCpu"></slider>\n    </div>\n    <div class="col-sm-4" style="margin-top: 20px;">\n      <p class="small text-muted">\n        每个任务的最大CPU使用率\n      </p>\n    </div>\n  </div>\n  \x3c!-- !cpu-limit-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    部署\n  </div>\n  \x3c!-- placement-constraints --\x3e\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">部署策略</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementConstraint()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> 部署策略\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="constraint in formValues.PlacementConstraints" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">名称</span>\n          <input type="text" class="form-control" ng-model="constraint.key" placeholder="例如 node.role">\n        </div>\n        <div class="input-group col-sm-1 input-group-sm">\n          <select name="constraintOperator" class="form-control" ng-model="constraint.operator">\n            <option value="==">==</option>\n            <option value="!=">!=</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">参数值</span>\n          <input type="text" class="form-control" ng-model="constraint.value" placeholder="例如 manager">\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !placement-constraints --\x3e\n  \x3c!-- placement-preferences --\x3e\n  <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.30">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">部署偏好设置</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementPreference()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> 部署偏好设置\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="preference in formValues.PlacementPreferences" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">规则</span>\n          <input type="text" class="form-control" ng-model="preference.strategy" placeholder="例如 spread">\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">参数值</span>\n          <input type="text" class="form-control" ng-model="preference.value" placeholder="例如 node.labels.datacenter">\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !placement-preferences --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t),function(e){n(0),n(227),n(3),n(19),n(34),n(5),n(1),n(6),n(18),n(11);n(733),n(734),n(735),n(736),n(737),n(738),n(739),n(740),n(741),n(742),n(743),n(744),n(745),n(746),n(747),n(748),n(749),angular.module("portainer.docker").controller("ServiceController",["$q","$scope","$transition$","$state","$location","$timeout","$anchorScroll","ServiceService","ConfigService","ConfigHelper","SecretService","ImageService","SecretHelper","Service","ServiceHelper","LabelHelper","TaskService","NodeService","ContainerService","TaskHelper","Notifications","ModalService","PluginService","Authentication","SettingsService","VolumeService","ImageHelper","WebhookService","EndpointProvider","clipboard","WebhookHelper",function(t,n,a,r,i,o,s,l,c,d,p,u,m,g,f,v,h,b,x,y,w,k,$,S,C,I,P,T,A,D,N){n.state={updateInProgress:!1,deletionInProgress:!1},n.tasks=[],n.availableImages=[],n.lastVersion=0;var O={},E=[];function R(){var e=n.applicationState.endpoint.apiVersion,r=n.applicationState.endpoint.mode.agentProxy,i=null;l.service(a.params().id).then(function(a){return i=a,n.isUpdating=n.lastVersion>=i.Version,n.isUpdating||(n.lastVersion=i.Version),function(e){e.LimitNanoCPUs=e.LimitNanoCPUs/1e9||0,e.ReservationNanoCPUs=e.ReservationNanoCPUs/1e9||0,e.LimitMemoryBytes=e.LimitMemoryBytes/1024/1024||0,e.ReservationMemoryBytes=e.ReservationMemoryBytes/1024/1024||0}(i),function(e){e.ServiceSecrets=e.Secrets?e.Secrets.map(m.flattenSecret):[],e.ServiceConfigs=e.Configs?e.Configs.map(d.flattenConfig):[],e.EnvironmentVariables=f.translateEnvironmentVariables(e.Env),e.LogDriverOpts=f.translateLogDriverOptsToKeyValue(e.LogDriverOpts),e.ServiceLabels=v.fromLabelHashToKeyValue(e.Labels),e.ServiceContainerLabels=v.fromLabelHashToKeyValue(e.ContainerLabels),e.ServiceMounts=angular.copy(e.Mounts),e.ServiceConstraints=f.translateConstraintsToKeyValue(e.Constraints),e.ServicePreferences=f.translatePreferencesToKeyValue(e.Preferences),e.Hosts=f.translateHostsEntriesToHostnameIP(e.Hosts)}(i),function(e){e.RestartDelay=f.translateNanosToHumanDuration(e.RestartDelay)||"5s",e.RestartWindow=f.translateNanosToHumanDuration(e.RestartWindow)||"0s",e.UpdateDelay=f.translateNanosToHumanDuration(e.UpdateDelay)||"0s",e.StopGracePeriod=e.StopGracePeriod?f.translateNanosToHumanDuration(e.StopGracePeriod):""}(i),n.service=i,O=angular.copy(i),t.all({volumes:I.volumes(),tasks:h.tasks({service:[i.Name]}),containers:r?x.containers():[],nodes:b.nodes(),secrets:e>=1.25?p.secrets():[],configs:e>=1.3?c.configs():[],availableImages:u.images(),availableLoggingDrivers:$.loggingPlugins(e<1.25),settings:C.publicSettings(),webhooks:T.webhooks(i.Id,A.endpointID())})}).then(function(e){if(n.nodes=e.nodes,n.configs=e.configs,n.secrets=e.secrets,n.availableImages=u.getUniqueTagListFromImages(e.availableImages),n.availableLoggingDrivers=e.availableLoggingDrivers,n.availableVolumes=e.volumes,n.allowBindMounts=e.settings.AllowBindMountsForRegularUsers,n.isAdmin=S.isAdmin(),e.webhooks.length>0){var t=e.webhooks[0];n.WebhookExists=!0,n.webhookID=t.Id,n.webhookURL=N.returnWebhookUrl(t.Token)}var a=e.tasks;if(r)for(var l=e.containers,c=0;c<a.length;c++){var d=a[c];y.associateContainerToTask(d,l)}f.associateTasksToService(i,a),n.tasks=e.tasks;var p=0;for(var m in e.nodes)e.nodes[m].CPUs&&e.nodes[m].CPUs>p&&(p=e.nodes[m].CPUs);n.state.sliderMaxCpu=p>0?p/1e9:32,n.state.addSecret={override:!1},o(function(){s()})}).catch(function(e){n.secrets=[],n.configs=[],w.error("失败",e,"无法检索服务详细信息")})}function L(e,t){e[t]===O[t]&&t in O||(e.hasChanges=!0),E.push(t)}function _(e,t){E.push(t),e.hasChanges=!0}n.renameService=function(e){L(e,"Name",e.newServiceName||e.name),e.EditName=!1},n.changeServiceImage=function(e){L(e,"Image",e.newServiceImage||e.image),e.EditImage=!1},n.scaleService=function(e){null===e.newServiceReplicas||isNaN(e.newServiceReplicas)?e.Replicas:e.newServiceReplicas;L(e,"Replicas"),e.EditReplicas=!1},n.goToItem=function(e){i.hash()!==e?i.hash(e):s()},n.addEnvironmentVariable=function(e){e.EnvironmentVariables.push({key:"",value:"",originalValue:""}),_(e,"EnvironmentVariables",e.EnvironmentVariables)},n.removeEnvironmentVariable=function(e,t){null!==e.EnvironmentVariables.splice(t,1)&&_(e,"EnvironmentVariables",e.EnvironmentVariables)},n.updateEnvironmentVariable=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||_(e,"EnvironmentVariables",e.EnvironmentVariables)},n.addConfig=function(e,t){t&&0===e.ServiceConfigs.filter(function(e){return e.Id===t.Id}).length&&(e.ServiceConfigs.push({Id:t.Id,Name:t.Name,FileName:t.Name,Uid:"0",Gid:"0",Mode:292}),_(e,"ServiceConfigs",e.ServiceConfigs))},n.removeConfig=function(e,t){null!==e.ServiceConfigs.splice(t,1)&&_(e,"ServiceConfigs",e.ServiceConfigs)},n.updateConfig=function(e){_(e,"ServiceConfigs",e.ServiceConfigs)},n.addSecret=function(e,t){if(t.secret){var n=t.secret.Name;t.override&&(n=t.target),0===e.ServiceSecrets.filter(function(e){return e.Id===t.secret.Id&&e.FileName===n}).length&&(e.ServiceSecrets.push({Id:t.secret.Id,Name:t.secret.Name,FileName:n,Uid:"0",Gid:"0",Mode:444}),_(e,"ServiceSecrets",e.ServiceSecrets))}},n.removeSecret=function(e,t){null!==e.ServiceSecrets.splice(t,1)&&_(e,"ServiceSecrets",e.ServiceSecrets)},n.addLabel=function(e){e.ServiceLabels.push({key:"",value:"",originalValue:""}),_(e,"ServiceLabels",e.ServiceLabels)},n.removeLabel=function(e,t){null!==e.ServiceLabels.splice(t,1)&&_(e,"ServiceLabels",e.ServiceLabels)},n.updateLabel=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||_(e,"ServiceLabels",e.ServiceLabels)},n.addContainerLabel=function(e){e.ServiceContainerLabels.push({key:"",value:"",originalValue:""}),_(e,"ServiceContainerLabels",e.ServiceContainerLabels)},n.removeContainerLabel=function(e,t){null!==e.ServiceContainerLabels.splice(t,1)&&_(e,"ServiceContainerLabels",e.ServiceContainerLabels)},n.updateContainerLabel=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||_(e,"ServiceContainerLabels",e.ServiceContainerLabels)},n.addMount=function(e){e.ServiceMounts.push({Type:"volume",Source:"",Target:"",ReadOnly:!1}),_(e,"ServiceMounts",e.ServiceMounts)},n.removeMount=function(e,t){null!==e.ServiceMounts.splice(t,1)&&_(e,"ServiceMounts",e.ServiceMounts)},n.updateMount=function(e){_(e,"ServiceMounts",e.ServiceMounts)},n.addPlacementConstraint=function(e){e.ServiceConstraints.push({key:"",operator:"==",value:""}),_(e,"ServiceConstraints",e.ServiceConstraints)},n.removePlacementConstraint=function(e,t){null!==e.ServiceConstraints.splice(t,1)&&_(e,"ServiceConstraints",e.ServiceConstraints)},n.updatePlacementConstraint=function(e){_(e,"ServiceConstraints",e.ServiceConstraints)},n.addPlacementPreference=function(e){e.ServicePreferences.push({strategy:"spread",value:""}),_(e,"ServicePreferences",e.ServicePreferences)},n.removePlacementPreference=function(e,t){null!==e.ServicePreferences.splice(t,1)&&_(e,"ServicePreferences",e.ServicePreferences)},n.updatePlacementPreference=function(e){_(e,"ServicePreferences",e.ServicePreferences)},n.addPublishedPort=function(e){e.Ports||(e.Ports=[]),e.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},n.updatePublishedPort=function(e){_(e,"Ports",e.Ports)},n.removePortPublishedBinding=function(e,t){null!==e.Ports.splice(t,1)&&_(e,"Ports",e.Ports)},n.addLogDriverOpt=function(e){e.LogDriverOpts.push({key:"",value:"",originalValue:""}),_(e,"LogDriverOpts",e.LogDriverOpts)},n.removeLogDriverOpt=function(e,t){null!==e.LogDriverOpts.splice(t,1)&&_(e,"LogDriverOpts",e.LogDriverOpts)},n.updateLogDriverOpt=function(e,t){t.value===t.originalValue&&t.key===t.originalKey||_(e,"LogDriverOpts",e.LogDriverOpts)},n.updateLogDriverName=function(e){_(e,"LogDriverName",e.LogDriverName)},n.addHostsEntry=function(e){e.Hosts||(e.Hosts=[]),e.Hosts.push({hostname:"",ip:""})},n.removeHostsEntry=function(e,t){null!==e.Hosts.splice(t,1)&&_(e,"Hosts",e.Hosts)},n.updateHostsEntry=function(e){_(e,"Hosts",e.Hosts)},n.updateWebhook=function(e){n.WebhookExists?T.deleteWebhook(n.webhookID).then(function(){n.webhookURL=null,n.webhookID=null,n.WebhookExists=!1}).catch(function(e){w.error("失败",e,"无法删除webhook")}):T.createServiceWebhook(e.Id,A.endpointID()).then(function(e){n.WebhookExists=!0,n.webhookID=e.Id,n.webhookURL=N.returnWebhookUrl(e.Token)}).catch(function(e){w.error("失败",e,"无法创建webhook")})},n.copyWebhook=function(){D.copyText(n.webhookURL),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)},n.cancelChanges=function(e,t){t?t.forEach(function(e){var t=E.indexOf(e);t>=0&&E.splice(t,1)}):(t=Object.keys(e),E=[]),t.forEach(function(t){e[t]=O[t]}),e.hasChanges=!1},n.hasChanges=function(e,t){var n=!1;return t.forEach(function(e){n=n||E.indexOf(e)>=0}),n},n.updateService=function(e){var t=f.serviceToConfig(e.Model);if(t.Name=e.Name,t.Labels=v.fromKeyValueToLabelHash(e.ServiceLabels),t.TaskTemplate.ContainerSpec.Env=f.translateEnvironmentVariablesToEnv(e.EnvironmentVariables),t.TaskTemplate.ContainerSpec.Labels=v.fromKeyValueToLabelHash(e.ServiceContainerLabels),t.TaskTemplate.ContainerSpec.Image=e.Image,t.TaskTemplate.ContainerSpec.Secrets=e.ServiceSecrets?e.ServiceSecrets.map(m.secretConfig):[],t.TaskTemplate.ContainerSpec.Configs=e.ServiceConfigs?e.ServiceConfigs.map(d.configConfig):[],t.TaskTemplate.ContainerSpec.Hosts=e.Hosts?f.translateHostnameIPToHostsEntries(e.Hosts):[],"replicated"===e.Mode&&(t.Mode.Replicated.Replicas=e.Replicas),t.TaskTemplate.ContainerSpec.Mounts=e.ServiceMounts,void 0===t.TaskTemplate.Placement&&(t.TaskTemplate.Placement={}),t.TaskTemplate.Placement.Constraints=f.translateKeyValueToPlacementConstraints(e.ServiceConstraints),t.TaskTemplate.Placement.Preferences=f.translateKeyValueToPlacementPreferences(e.ServicePreferences),n.hasChanges(e,["LimitNanoCPUs","LimitMemoryBytes","ReservationNanoCPUs","ReservationMemoryBytes"])){var a=(Math.round(8*e.LimitMemoryBytes)/8).toFixed(3);a*=1048576;var r=(Math.round(8*e.ReservationMemoryBytes)/8).toFixed(3);r*=1048576,t.TaskTemplate.Resources={Limits:{NanoCPUs:1e9*e.LimitNanoCPUs,MemoryBytes:a},Reservations:{NanoCPUs:1e9*e.ReservationNanoCPUs,MemoryBytes:r}}}if(n.hasChanges(e,["UpdateFailureAction","UpdateDelay","UpdateParallelism","UpdateOrder"])&&(t.UpdateConfig={Parallelism:e.UpdateParallelism,Delay:f.translateHumanDurationToNanos(e.UpdateDelay)||0,FailureAction:e.UpdateFailureAction,Order:e.UpdateOrder}),n.hasChanges(e,["RestartCondition","RestartDelay","RestartMaxAttempts","RestartWindow"])&&(t.TaskTemplate.RestartPolicy={Condition:e.RestartCondition,Delay:f.translateHumanDurationToNanos(e.RestartDelay)||5e9,MaxAttempts:e.RestartMaxAttempts,Window:f.translateHumanDurationToNanos(e.RestartWindow)||0}),t.TaskTemplate.LogDriver=null,e.LogDriverName&&(t.TaskTemplate.LogDriver={Name:e.LogDriverName},"none"!==e.LogDriverName)){var i=f.translateKeyValueToLogDriverOpts(e.LogDriverOpts);0!==Object.keys(i).length&&i.constructor===Object&&(t.TaskTemplate.LogDriver.Options=i)}e.Ports&&e.Ports.forEach(function(e){null!==e.PublishedPort&&""!==e.PublishedPort||delete e.PublishedPort}),t.EndpointSpec={Mode:t.EndpointSpec&&t.EndpointSpec.Mode||"vip",Ports:e.Ports},g.update({id:e.Id,version:e.Version},t,function(e){e.message&&e.message.match(/^rpc error:/)?w.error(e.message,"错误"):w.success("已成功更新服务","服务已更新"),n.cancelChanges({}),R()},function(e){w.error("失败",e,"无法更新服务")})},n.removeService=function(){k.confirmDeletion("您想删除此项服务吗？与此服务相关的所有容器也将被删除。",function(e){e&&(n.state.deletionInProgress=!0,l.remove(n.service).then(function(){return t.when(n.webhookID&&T.deleteWebhook(n.webhookID))}).then(function(){w.success("已成功删除服务"),r.go("docker.services",{})}).catch(function(e){w.error("失败",e,"无法删除服务")}).finally(function(){n.state.deletionInProgress=!1}))})},n.forceUpdateService=function(e){k.confirmServiceForceUpdate("您想强制更新服务吗？所有与该服务相关的任务都将被重新创建。",function(t){if(t){var a=!1;t[0]&&(a=!0),function(e,t){var a=f.serviceToConfig(e.Model);t&&(a.TaskTemplate.ContainerSpec.Image=a.TaskTemplate.ContainerSpec.Image=P.removeDigestFromRepository(a.TaskTemplate.ContainerSpec.Image));a.TaskTemplate.ForceUpdate++,n.state.updateInProgress=!0,l.update(e,a).then(function(){w.success("已成功更新服务",e.Name),n.cancelChanges({}),R()}).catch(function(t){w.error("失败",t,"无法强制更新服务",e.Name)}).finally(function(){n.state.updateInProgress=!1})}(e,a)}})},n.updateServiceAttribute=L,R()}])}.call(this,n(30))},function(e,t){var n="app/docker/views/services/edit/includes/configs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form ng-if="applicationState.endpoint.apiVersion >= 1.30" id="service-configs" ng-submit="updateService(service)">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="配置">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;" authorization="DockerServiceUpdate">\n        添加一个配置：\n        <select class="form-control" ng-options="config.Name for config in configs | orderBy: \'Name\'" ng-model="newConfig">\n          <option selected disabled hidden value="">选择一个配置</option>\n        </select>\n        <a class="btn btn-default btn-sm" ng-click="addConfig(service, newConfig)">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加配置\n        </a>\n      </div>\n      <table class="table" style="margin-top: 5px;">\n        <thead>\n          <tr>\n            <th>名称</th>\n            <th>在容器中的路径</th>\n            <th>UID</th>\n            <th>GID</th>\n            <th>模式</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="config in service.ServiceConfigs">\n            <td><a ui-sref="docker.configs.config({id: config.Id})">{{ config.Name }}</a></td>\n            <td>\n              <input class="form-control" ng-model="config.FileName" ng-change="updateConfig(service)" placeholder="例如 /path/in/container" required />\n            </td>\n            <td>{{ config.Uid }}</td>\n            <td>{{ config.Gid }}</td>\n            <td>{{ config.Mode }}</td>\n            <td authorization="DockerServiceUpdate">\n              <button class="btn btn-xs btn-danger pull-right" type="button" ng-click="removeConfig(service, $index)" ng-disabled="isUpdating">\n                <i class="fa fa-trash" aria-hidden="true"></i> 删除配置\n              </button>\n            </td>\n          </tr>\n          <tr ng-if="service.ServiceConfigs.length === 0">\n            <td colspan="6" class="text-center text-muted">没有配置关联到这个服务。</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceConfigs\'])">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceConfigs\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</form>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/constraints.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServiceConstraints" id="service-placement-constraints">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="部署策略">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementConstraint(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 部署策略\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceConstraints.length === 0">\n      <p>没有部署策略关联到此服务。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceConstraints.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>名称</th>\n            <th>操作者</th>\n            <th>参数值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="constraint in service.ServiceConstraints">\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="constraint.key" placeholder="例如 node.role" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select name="constraintOperator" class="form-control" ng-model="constraint.operator" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n                  <option value="==">==</option>\n                  <option value="!=">!=</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="constraint.value" placeholder="例如 manager" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceConstraints\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceConstraints\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/container-specs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="容器规格"></rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>命令</td>\n            <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;"><code ng-if="service.Command">{{ service.Command|command }}</code></td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                要执行的命令。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Args参数</td>\n            <td style="width:auto;word-break:break-word;word-break:break-all;white-space:pre-wrap;"><code ng-if="service.Arguments">{{ service.Arguments }}</code></td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                传递给容器中命令的参数。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>用户</td>\n            <td>{{ service.User }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                用户名或UID。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>工作目录</td>\n            <td>{{ service.Dir }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                在容器中的工作目录。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>停止宽限期</td>\n            <td>{{ service.StopGracePeriod }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                强制终止容器之前等待的时间（默认为空）。\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/containerlabels.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-container-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="容器标签">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addContainerLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 容器标签\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length === 0">\n      <p>这个服务没有容器标签。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>标签</th>\n            <th>参数值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceContainerLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">名称</span>\n                <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo" ng-change="updateContainerLabel(service, label)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">参数值</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar" ng-change="updateContainerLabel(service, label)" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceContainerLabels\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceContainerLabels\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/environmentvariables.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.EnvironmentVariables" id="service-env-variables">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="环境变量">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addEnvironmentVariable(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 环境变量\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length === 0">\n      <p>这个服务没有环境变量。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>名称</th>\n            <th>参数值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="var in service.EnvironmentVariables">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">名称</span>\n                <input type="text" class="form-control" ng-model="var.key" ng-disabled="var.added || isUpdating" placeholder="例如 FOO">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">参数值</span>\n                <input type="text" class="form-control" ng-model="var.value" ng-change="updateEnvironmentVariable(service, var)" placeholder="例如 bar" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'EnvironmentVariables\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'EnvironmentVariables\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/hosts.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="Hosts文件条目">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addHostsEntry(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加主机条目\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="!service.Hosts || service.Hosts.length === 0">\n      <p>Hosts文件没有额外的条目。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.Hosts.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>主机名</th>\n            <th>IP地址</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="entry in service.Hosts">\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="entry.hostname" placeholder="例如 example.com" ng-change="updateHostsEntry(service, entry)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="entry.ip" placeholder="例如 10.0.1.1" ng-change="updateHostsEntry(service, entry)" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeHostsEntry(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Hosts\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Hosts\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/logging.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-logging-driver">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title-text="日志驱动">        \n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <div class="form-inline" style="padding: 10px;" authorization="DockerServiceUpdate">\n          驱动：\n          <select class="form-control" ng-model="service.LogDriverName" ng-change="updateLogDriverName(service)" ng-disabled="isUpdating">\n            <option selected value="">默认日志驱动</option>\n            <option ng-repeat="driver in availableLoggingDrivers" ng-value="driver">{{ driver }}</option>\n            <option value="none">空</option>\n          </select>\n          <a class="btn btn-default btn-sm" ng-click="!service.LogDriverName || service.LogDriverName === \'none\' || addLogDriverOpt(service)">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加日志驱动选项\n          </a>\n        </div>\n        <table class="table" >\n          <thead>\n            <tr>\n              <th>选项</th>\n              <th>参数值</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="option in service.LogDriverOpts">\n              <td>\n                <div class="input-group input-group-sm">\n                  <span class="input-group-addon fit-text-size">名称</span>\n                  <input type="text" class="form-control" ng-model="option.key" ng-disabled="option.added || isUpdating" placeholder="例如 FOO">\n                </div>\n              </td>\n              <td>\n                <div class="input-group input-group-sm">\n                  <span class="input-group-addon fit-text-size">参数值</span>\n                  <input type="text" class="form-control" ng-model="option.value" ng-change="updateLogDriverOpt(service, option)" placeholder="例如 bar" ng-disabled="isUpdating">\n                  <span class="input-group-btn" authorization="DockerServiceUpdate">\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLogDriverOpt(service, $index)" ng-disabled="isUpdating">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </span>\n                </div>\n              </td>\n            </tr>\n            <tr ng-if="service.LogDriverOpts.length === 0">\n                <td colspan="6" class="text-center text-muted">没有选项关联到这个日志驱动。</td>\n              </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer authorization="DockerServiceUpdate">\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'LogDriverName\', \'LogDriverOpts\'])" ng-click="updateService(service)">应用更改</button>\n            <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(service, [\'LogDriverName\', \'LogDriverOpts\'])">重置更改</a></li>\n              <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/mounts.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServiceMounts" id="service-mounts">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="挂载">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addMount(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 挂载\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceMounts.length === 0">\n      <p>这个服务没有配置挂载选项。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceMounts.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th ng-if="isAdmin || allowBindMounts">类型</th>\n            <th>来源</th>\n            <th>目的</th>\n            <th>只读</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="mount in service.ServiceMounts">\n            <td ng-if="isAdmin || allowBindMounts">\n              <select name="mountType" class="form-control" ng-model="mount.Type" ng-disabled="isUpdating">\n                <option value="volume">存储卷</option>\n                <option value="bind">绑定</option>\n              </select>\n            </td>\n            <td>\n              <select class="form-control" ng-model="mount.Source" ng-options="vol.Id|truncate:30 as vol.Id for vol in availableVolumes" ng-if="mount.Type === \'volume\'">\n                <option selected disabled hidden value="">选择一个卷</option>\n              </select>\n              <input type="text" class="form-control" ng-model="mount.Source" placeholder="例如 /tmp/portainer/data" ng-change="updateMount(service, mount)" ng-disabled="isUpdating || (!isAdmin && !allowBindMounts && mount.Type === \'bind\')" ng-if="mount.Type === \'bind\'">\n            </td>\n            <td>\n              <input type="text" class="form-control" ng-model="mount.Target" placeholder="例如 /tmp/portainer/data" ng-change="updateMount(service, mount)" ng-disabled="isUpdating">\n            </td>\n            <td>\n              <input type="checkbox" class="form-control" ng-model="mount.ReadOnly" ng-change="updateMount(service, mount)" ng-disabled="isUpdating">\n            </td>\n            <td authorization="DockerServiceUpdate">\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeMount(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceMounts\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceMounts\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/networks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-network-specs">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="网络"></rd-widget-header>\n    <rd-widget-body ng-if="!service.VirtualIPs || service.VirtualIPs.length === 0">\n      <p>此服务未连接到任何网络。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.VirtualIPs && service.VirtualIPs.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>IP地址</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="network in service.VirtualIPs">\n            <td>\n              <a ui-sref="docker.networks.network({id: network.NetworkID})">{{ network.NetworkID }}</a>\n            </td>\n            <td>{{ network.Addr }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/placementPreferences.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="service.ServicePreferences" id="service-placement-preferences">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="部署偏好设置">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementPreference(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 部署偏好设置\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServicePreferences.length === 0">\n      <p>此服务没有部署偏好设置的设定。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServicePreferences.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>策略</th>\n            <th>参数值</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="preference in service.ServicePreferences">\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="preference.strategy" placeholder="例如 node.role" ng-change="updatePlacementPreference(service, preference)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="preference.value" placeholder="例如 manager" ng-change="updatePlacementPreference(service, preference)" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServicePreferences\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServicePreferences\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/ports.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="暴露端口">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addPublishedPort(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 端口映射\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="!service.Ports || service.Ports.length === 0">\n      <p>此服务没有配置暴露的端口。</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.Ports && service.Ports.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>主机端口</th>\n            <th>容器端口</th>\n            <th>协议</th>\n            <th>发布模式</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="portBinding in service.Ports">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">主机</span>\n                <input type="number" class="form-control" ng-model="portBinding.PublishedPort" placeholder="例如 8080" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">容器</span>\n                <input type="number" class="form-control" ng-model="portBinding.TargetPort" placeholder="例如 80" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="portBinding.Protocol" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n                  <option value="tcp">tcp</option>\n                  <option value="udp">udp</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="portBinding.PublishMode" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n                  <option value="ingress">入口</option>\n                  <option value="host">主机</option>\n                </select>\n              </div>\n            </td>\n            <td authorization="DockerServiceUpdate">\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removePortPublishedBinding(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Ports\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Ports\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/resources.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-resources">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="资源限制和预留">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td style="vertical-align : middle;">\n              内存预留 (MB)\n            </td>\n            <td>\n              <input class="input-sm" type="number" step="0.125" min="0" ng-model="service.ReservationMemoryBytes" ng-change="updateServiceAttribute(service, \'ReservationMemoryBytes\')" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td style="vertical-align : middle;">\n              <p class="small text-muted">\n                运行任务的节点上可用的最小内存（“0”为无限制）\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align : middle;">\n              内存限制 (MB)\n            </td>\n            <td>\n              <input class="input-sm" type="number" step="0.125" min="0" ng-model="service.LimitMemoryBytes" ng-change="updateServiceAttribute(service, \'LimitMemoryBytes\')" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td style="vertical-align : middle;">\n              <p class="small text-muted">\n                每个任务的最大内存使用量（“0”为无限制）\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align : middle;">\n              <div>\n                CPU预留\n              </div>\n            </td>\n            <td>\n              <slider model="service.ReservationNanoCPUs" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="service && state.sliderMaxCpu" on-change="updateServiceAttribute(service, \'ReservationNanoCPUs\')"></slider>\n            </td>\n            <td style="vertical-align : middle;">\n              <p class="small text-muted">\n                节点上运行任务可用的最小CPU\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td style="vertical-align : middle;">\n              <div>\n                CPU限制\n              </div>\n            </td>\n            <td>\n              <slider model="service.LimitNanoCPUs" floor="0" ceil="state.sliderMaxCpu" step="0.25" precision="2" ng-if="service && state.sliderMaxCpu" on-change="updateServiceAttribute(service, \'LimitNanoCPUs\')"></slider>\n            </td>\n            <td style="vertical-align : middle;">\n              <p class="small text-muted">\n                每个任务的最大CPU使用率\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'LimitNanoCPUs\', \'LimitMemoryBytes\', \'ReservationNanoCPUs\', \'ReservationMemoryBytes\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'LimitNanoCPUs\', \'LimitMemoryBytes\', \'ReservationNanoCPUs\', \'ReservationMemoryBytes\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/restart.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-restart-policy">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="重启策略">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>重启条件</td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="service.RestartCondition" ng-change="updateServiceAttribute(service, \'RestartCondition\')" disable-authorization="DockerServiceUpdate">\n                  <option value="none">空</option>\n                  <option value="on-failure">失败后</option>\n                  <option value="any">任何</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                重启条件。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>重启延迟</td>\n            <td>\n              <input class="input-sm" type="text" ng-model="service.RestartDelay" ng-change="updateServiceAttribute(service, \'RestartDelay\')" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                尝试重启的时间延迟间隔，以数字表示，后跟单位（ns | us | ms | s | m | h）， 默认值是5s（5秒）。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>重启最大尝试次数</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.RestartMaxAttempts" ng-change="updateServiceAttribute(service, \'RestartMaxAttempts\')" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n               在达到重启的最大尝试次数之前重新启动指定的任务（默认值为0，无限制）。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>重启窗口</td>\n            <td>\n              <input class="input-sm" type="text" ng-model="service.RestartWindow" ng-change="updateServiceAttribute(service, \'RestartWindow\')" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                时间窗口用于尝试重启的评估，以数字表示，后跟单位（ns | us | ms | s | m | h），默认值是0秒，无限制。\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'RestartCondition\', \'RestartDelay\', \'RestartMaxAttempts\', \'RestartWindow\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'RestartCondition\', \'RestartDelay\', \'RestartMaxAttempts\', \'RestartWindow\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/secrets.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="applicationState.endpoint.apiVersion >= 1.25" id="service-secrets">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="密钥">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;">\n        添加一个密钥：\n        <select class="form-control" ng-options="secret.Name for secret in secrets | orderBy: \'Name\'" ng-model="state.addSecret.secret">\n          <option selected disabled hidden value="">选择一个密钥</option>\n        </select>\n        <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.30 && state.addSecret.override">\n          目标：\n          <input class="form-control" ng-model="state.addSecret.target" placeholder="/path/in/container">\n        </div>\n        <div class="btn-group btn-group-sm" ng-if="applicationState.endpoint.apiVersion >= 1.30">\n          <label class="btn btn-primary" ng-model="state.addSecret.override" uib-btn-radio="false">默认位置</label>\n          <label class="btn btn-primary" ng-model="state.addSecret.override" uib-btn-radio="true">覆盖</label>\n        </div>\n        <a class="btn btn-default btn-sm" ng-click="addSecret(service, state.addSecret)">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加密钥\n        </a>\n      </div>\n      <table class="table" style="margin-top: 5px;">\n        <thead>\n          <tr>\n            <th>名称</th>\n            <th>文件名</th>\n            <th>UID</th>\n            <th>GID</th>\n            <th>模式</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="secret in service.ServiceSecrets">\n            <td><a ui-sref="docker.secrets.secret({id: secret.Id})">{{ secret.Name }}</a></td>\n            <td>{{ secret.FileName }}</td>\n            <td>{{ secret.Uid }}</td>\n            <td>{{ secret.Gid }}</td>\n            <td>{{ secret.Mode }}</td>\n            <td authorization="DockerServiceUpdate">\n              <button class="btn btn-xs btn-danger pull-right" type="button" ng-click="removeSecret(service, $index)" ng-disabled="isUpdating">\n                <i class="fa fa-trash" aria-hidden="true"></i> 删除密钥\n              </button>\n            </td>\n          </tr>\n          <tr ng-if="service.ServiceSecrets.length === 0">\n            <td colspan="6" class="text-center text-muted">没有与此服务相关的密钥。</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceSecrets\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceSecrets\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/servicelabels.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title-text="服务标签">\n      <div class="nopadding" authorization="DockerServiceUpdate">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 标签\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceLabels.length === 0">\n      <p>这个服务没有标签。</p>\n    </rd-widget-body>\n    <rd-widget-body classes="no-padding" ng-if="service.ServiceLabels.length > 0">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>\n              标签\n            </th>\n            <th>\n              参数值\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">名称</span>\n                <input type="text" class="form-control" ng-model="label.key" placeholder="例如 com.example.foo" ng-change="updateLabel(service, label)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">参数值</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar" ng-change="updateLabel(service, label)" ng-disabled="isUpdating">\n                <span class="input-group-btn" authorization="DockerServiceUpdate">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceLabels\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceLabels\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/tasks.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-if="tasks.length > 0 && nodes" id="service-tasks">\n  <tasks-datatable\n    title-text="任务" title-icon="fa-tasks"\n    dataset="tasks" table-key="service-tasks"\n    order-by="Updated" reverse-order="true"\n    nodes="nodes"\n    \n    show-slot-column="service.Mode !== \'global\'"\n    show-logs-button="applicationState.endpoint.apiVersion >= 1.30"\n    agent-proxy="applicationState.endpoint.mode.agentProxy"\n  ></tasks-datatable>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/docker/views/services/edit/includes/updateconfig.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="service-update-config">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title-text="更新配置">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>同时更新</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.UpdateParallelism" ng-change="updateServiceAttribute(service, \'UpdateParallelism\')" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                要同时更新的最大任务数（从“0”到全部一次性更新）。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>更新延迟</td>\n            <td>\n              <input class="input-sm" type="text" ng-model="service.UpdateDelay" ng-change="updateServiceAttribute(service, \'UpdateDelay\')" ng-pattern="/^([0-9]+)(h|m|s|ms|us|ns)$/i" disable-authorization="DockerServiceUpdate"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                用数字表示的更新之间的时间间隔（单位：ns | us | ms | s | m | h ），例如：1m （1分钟）。\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>更新失败操作</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input type="radio" name="failure_action" ng-model="service.UpdateFailureAction" value="continue" ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')" disable-authorization="DockerServiceUpdate">\n                  继续\n                </label>\n                <label class="radio-inline">\n                  <input type="radio" name="failure_action" ng-model="service.UpdateFailureAction" value="pause" ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')" disable-authorization="DockerServiceUpdate">\n                  暂停\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                更新后无法启动的操作\n              </p>\n            </td>\n          </tr>\n          <tr ng-if="applicationState.endpoint.apiVersion >= 1.29">\n            <td>指令</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input type="radio" name="updateconfig_order" ng-model="service.UpdateOrder" value="start-first" ng-change="updateServiceAttribute(service, \'UpdateOrder\')" disable-authorization="DockerServiceUpdate">\n                  优先启动\n                </label>\n                <label class="radio-inline">\n                  <input type="radio" name="updateconfig_order" ng-model="service.UpdateOrder" value="stop-first" ng-change="updateServiceAttribute(service, \'UpdateOrder\')" disable-authorization="DockerServiceUpdate">\n                  优先停止\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                操作序列指令失败\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer authorization="DockerServiceUpdate">\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'UpdateFailureAction\', \'UpdateDelay\', \'UpdateParallelism\', \'UpdateOrder\'])" ng-click="updateService(service)">应用更改</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'UpdateFailureAction\', \'UpdateDelay\', \'UpdateParallelism\', \'UpdateOrder\'])">重置更改</a></li>\n            <li><a ng-click="cancelChanges(service)">重置所有更改</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n.n(a);angular.module("portainer.docker").controller("ServiceLogsController",["$scope","$transition$","$interval","ServiceService","Notifications",function(e,t,n,a,i){function o(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function s(){var s=e.state.refreshRate;e.repeater=n(function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then(function(t){e.logs=t}).catch(function(e){o(),i.error("失败",e,"无法检索服务日志")})},1e3*s)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(e){e?s():o()},e.$on("$destroy",function(){o()}),a.service(t.params().id).then(function(n){e.service=n,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then(function(t){e.logs=t,s()}).catch(function(e){o(),i.error("失败",e,"无法检索服务日志")})}).catch(function(e){i.error("失败",e,"无法检索服务信息")})}])},function(e,t){angular.module("portainer.docker").controller("ServicesController",["$q","$scope","ServiceService","ServiceHelper","Notifications","TaskService","TaskHelper","NodeService","ContainerService",function(e,t,n,a,r,i,o,s,l){var c;c=t.applicationState.endpoint.mode.agentProxy,e.all({services:n.services(),tasks:i.tasks(),containers:c?l.containers(1):[],nodes:s.nodes()}).then(function(e){var n=e.services,r=e.tasks;if(c)for(var i=e.containers,s=0;s<r.length;s++){var l=r[s];o.associateContainerToTask(l,i)}for(var d=0;d<n.length;d++){var p=n[d];a.associateTasksToService(p,r)}t.nodes=e.nodes,t.tasks=r,t.services=n}).catch(function(e){t.services=[],r.error("失败",e,"无法检索服务")})}])},function(e,t,n){"use strict";n.r(t);n(1),n(6),n(20);angular.module("portainer.docker").controller("SwarmController",["$q","$scope","SystemService","NodeService","Notifications","StateManager","Authentication",function(e,t,n,a,r,i,o){function s(e){var n=e.SystemStatus;t.swarm[n[1][0]]=n[1][1],t.swarm[n[2][0]]=n[2][1];var a="primary"===n[0][1]?n[3][1]:n[4][1],r=parseInt(a,10);t.swarm[n[3][0]]=r,t.swarm.Status=[],function(e,t){for(var n="primary"===e[0][1]?4:5,a=0;a<t;a++)l(e,n),n+=9}(n,r)}function l(e,n){var a={};a.name=e[n][0],a.ip=e[n][1],a.Id=e[n+1][1],a.status=e[n+2][1],a.containers=e[n+3][1],a.cpu=e[n+4][1].split("/")[1],a.memory=e[n+5][1].split("/")[1],a.labels=e[n+6][1],a.version=e[n+8][1],t.swarm.Status.push(a)}t.info={},t.docker={},t.swarm={},t.totalCPU=0,t.totalMemory=0,function(){i.getState().application.authentication&&(t.isAdmin=o.isAdmin());var l=t.applicationState.endpoint.mode.provider;e.all({version:n.version(),info:n.info(),nodes:"DOCKER_SWARM_MODE"!==l||a.nodes()}).then(function(e){if(t.docker=e.version,t.info=e.info,"DOCKER_SWARM_MODE"===l){var n=e.nodes;!function(e){var n=0,a=0;angular.forEach(e,function(e){n+=e.CPUs,a+=e.Memory}),t.totalCPU=n/1e9,t.totalMemory=a}(n),t.nodes=n}else s(e.info)}).catch(function(e){r.error("失败",e,"无法检索集群详细信息")})}()}])},function(e,t,n){(function(e){angular.module("portainer.docker").controller("SwarmVisualizerController",["$q","$scope","$document","$interval","NodeService","ServiceService","TaskService","Notifications","LocalStorage",function(t,n,a,r,i,o,s,l,c){function d(){var e=n.repeater;angular.isDefined(e)&&(r.cancel(e),e=null)}function p(){var e=n.state.refreshRate;n.repeater=r(function(){t.all({nodes:i.nodes(),services:o.services(),tasks:s.tasks()}).then(function(e){var t=e.nodes;n.nodes=t;var a=e.services;n.services=a;var r=e.tasks;n.tasks=r,u(t,a,r)}).catch(function(e){d(),l.error("失败",e,"无法检索群集信息")})},1e3*e)}function u(e,t,a){var r={};!function(e,t){for(var n=0;n<e.length;n++)for(var a=e[n],r=0;r<t.length;r++){var i=t[r];i.ServiceId===a.Id&&(i.ServiceName=a.Name)}}(t,a),function(e,t){for(var n=0;n<e.length;n++){var a=e[n];a.Tasks=[];for(var r=0;r<t.length;r++){var i=t[r];i.NodeId===a.Id&&a.Tasks.push(i)}}}(e,a),r.nodes=e,n.visualizerData=r}n.state={ShowInformationPanel:!0,DisplayOnlyRunningTasks:!1,refreshRate:"5"},n.$on("$destroy",function(){d()}),n.changeShowInformationPanel=function(e){n.state.ShowInformationPanel=e,c.storeSwarmVisualizerSettings("show_info_panel",e)},n.changeDisplayOnlyRunningTasks=function(){var e=n.state.DisplayOnlyRunningTasks;c.storeSwarmVisualizerSettings("display_only_running_tasks",e)},n.changeUpdateRepeater=function(){d(),p(),e("#refreshRateChange").show(),e("#refreshRateChange").fadeOut(1500),c.storeSwarmVisualizerSettings("refresh_rate",n.state.refreshRate)},t.all({nodes:i.nodes(),services:o.services(),tasks:s.tasks()}).then(function(e){var t=e.nodes;n.nodes=t;var a=e.services;n.services=a;var r=e.tasks;n.tasks=r,u(t,a,r),p()}).catch(function(e){l.error("失败",e,"无法初始化群集可视化工具")}),function(){var e=c.getSwarmVisualizerSettings("show_info_panel");null!=e&&(n.state.ShowInformationPanel=e);var t=c.getSwarmVisualizerSettings("display_only_running_tasks");null!=t&&(n.state.DisplayOnlyRunningTasks=t);var a=c.getSwarmVisualizerSettings("refresh_rate");null!=a&&(n.state.refreshRate=a)}()}])}).call(this,n(30))},function(e,t){angular.module("portainer.docker").controller("TaskController",["$scope","$transition$","TaskService","ServiceService","Notifications",function(e,t,n,a,r){n.task(t.params().id).then(function(t){var n=t;return e.task=n,a.service(n.ServiceId)}).then(function(t){var n=t;e.service=n}).catch(function(e){r.error("失败",e,"无法检索任务详细信息")})}])},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n.n(a);angular.module("portainer.docker").controller("TaskLogsController",["$scope","$transition$","$interval","TaskService","ServiceService","Notifications",function(e,t,n,a,i,o){function s(){var t=e.repeater;angular.isDefined(t)&&(n.cancel(t),t=null)}function l(){var i=e.state.refreshRate;e.repeater=n(function(){a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then(function(t){e.logs=t}).catch(function(e){s(),o.error("失败",e,"无法检索任务日志")})},1e3*i)}e.state={refreshRate:3,lineCount:100,sinceTimestamp:"",displayTimestamps:!1},e.changeLogCollection=function(e){e?l():s()},e.$on("$destroy",function(){s()}),a.task(t.params().id).then(function(t){var n=t;return e.task=n,i.service(n.ServiceId)}).then(function(n){var i=n;e.service=i,a.logs(t.params().id,1,1,e.state.displayTimestamps?1:0,r()(e.state.sinceTimestamp).unix(),e.state.lineCount).then(function(t){e.logs=t,l()}).catch(function(e){s(),o.error("失败",e,"无法检索任务日志")})}).catch(function(e){o.error("失败",e,"无法检索任务详细信息")})}])},function(e,t){angular.module("portainer.docker").controller("BrowseVolumeController",["$scope","$transition$","StateManager",function(e,t,n){e.volumeId=t.params().id,e.nodeName=t.params().nodeName,e.agentApiVersion=n.getAgentApiVersion()}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(24),r=n(243);angular.module("portainer.docker").controller("CreateVolumeController",["$q","$scope","$state","VolumeService","PluginService","ResourceControlService","Authentication","Notifications","FormValidator","HttpRequestHelper",function(e,t,n,i,o,s,l,c,d,p){var u,m;t.formValues={Driver:"local",DriverOptions:[],AccessControlData:new a.AccessControlFormData,NodeName:null,NFSData:new r.VolumesNFSFormData},t.state={formValidationError:"",actionInProgress:!1},t.availableVolumeDrivers=[],t.addDriverOption=function(){t.formValues.DriverOptions.push({name:"",value:""})},t.removeDriverOption=function(e){t.formValues.DriverOptions.splice(e,1)},t.create=function(){var e=t.formValues.Name,a=t.formValues.Driver,r=t.formValues.DriverOptions,o=t.formValues.StoridgeProfile;"cio:latest"===a&&o&&r.push({name:"profile",value:o.Name}),t.formValues.NFSData.useNFS&&function(e){var n=t.formValues.NFSData;e.push({name:"type",value:n.version.toLowerCase()});var a="addr="+n.serverAddress+","+n.options;e.push({name:"o",value:a});var r=":"===n.mountPoint[0]?n.mountPoint:":"+n.mountPoint;e.push({name:"device",value:r})}(r);var u=i.createVolumeConfiguration(e,a,r),m=t.formValues.AccessControlData,g=l.getUserDetails(),f=l.isAdmin();if(function(e,n){var a;return t.state.formValidationError="",!(a=d.validateAccessControl(e,n))||(t.state.formValidationError=a,!1)}(m,f)){var v=t.formValues.NodeName;p.setPortainerAgentTargetHeader(v),t.state.actionInProgress=!0,i.createVolume(u).then(function(e){var t=e.Id,n=g.ID;return s.applyResourceControl("volume",t,n,m,[])}).then(function(){c.success("已成功创建存储卷"),n.go("docker.volumes",{},{reload:!0})}).catch(function(e){c.error("失败",e,"存储卷创建过程中发生错误")}).finally(function(){t.state.actionInProgress=!1})}},u=t.applicationState.endpoint.apiVersion,m=t.applicationState.endpoint.mode.provider,o.volumePlugins(u<1.25||"VMWARE_VIC"===m).then(function(e){t.availableVolumeDrivers=e}).catch(function(e){c.error("失败",e,"无法检索存储卷驱动程序")})}])},function(e,t,n){"use strict";n.r(t);n(3),n(157),n(158),n(228),n(5),n(0),n(1),n(6);angular.module("portainer.docker").controller("VolumeController",["$scope","$state","$transition$","$q","ModalService","VolumeService","ContainerService","Notifications","HttpRequestHelper","StoridgeVolumeService","StoridgeSnapshotService",function(e,t,n,a,r,i,o,s,l,c,d){e.storidgeSnapshots=[],e.storidgeVolume={},e.removeSnapshot=function(n){r.confirm({title:"你确定吗？",message:"你真的想要删除这个快照吗？",buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:function(a){if(a){var r=n.length;angular.forEach(n,function(n){d.remove(n.Id).then(function(){s.success("已成功删除快照",n.Id);var t=e.storidgeSnapshots.indexOf(n);e.storidgeSnapshots.splice(t,1)}).catch(function(e){s.error("失败",e,"无法删除快照")}).finally(function(){0===--r&&t.reload()})})}}})},e.removeVolume=function(){i.remove(e.volume).then(function(){s.success("已成功删除存储卷",n.params().id),t.go("docker.volumes",{})}).catch(function(e){s.error("失败",e,"无法删除存储卷")})},l.setPortainerAgentTargetHeader(n.params().nodeName),i.volume(n.params().id).then(function(t){var r=t;e.volume=r;var i={volume:[r.Id]};return e.isCioDriver=r.Driver.includes("cio"),e.isCioDriver?a.all({containers:o.containers(1,i),storidgeVolume:c.volume(n.params().id)}):o.containers(1,i)}).then(function(t){var n=(e.isCioDriver?t.containers:t).map(function(t){return t.volumeData=function(e,t){return e.Mounts.find(function(e){return e.Name===t})}(t,e.volume.Id),t});if(e.containersUsingVolume=n,e.isCioDriver&&(e.storidgeVolume=t.storidgeVolume,e.storidgeVolume.SnapshotEnabled))return d.snapshots(t.storidgeVolume.Vdisk)}).then(function(t){e.storidgeSnapshots=t}).catch(function(e){s.error("失败",e,"无法检索存储卷详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(3),n(5),n(0),n(1),n(6);angular.module("portainer.docker").controller("VolumesController",["$q","$scope","$state","VolumeService","ServiceService","VolumeHelper","Notifications","HttpRequestHelper","EndpointProvider",function(e,t,n,a,r,i,o,s,l){var c,d;t.removeAction=function(e){var r=e.length;angular.forEach(e,function(e){s.setPortainerAgentTargetHeader(e.NodeName),a.remove(e).then(function(){o.success("已成功删除存储卷",e.Id);var n=t.volumes.indexOf(e);t.volumes.splice(n,1)}).catch(function(e){o.error("失败",e,"无法删除存储卷")}).finally(function(){0===--r&&n.reload()})})},t.offlineMode=!1,c=t.applicationState.endpoint.mode.provider,d=t.applicationState.endpoint.mode.role,e.all({attached:a.volumes({filters:{dangling:["false"]}}),dangling:a.volumes({filters:{dangling:["true"]}}),services:"DOCKER_SWARM_MODE"===c&&"MANAGER"===d?r.services():[]}).then(function(e){var n=e.services;t.offlineMode=l.offlineMode(),t.volumes=e.attached.map(function(e){return e.dangling=!1,e}).concat(e.dangling.map(function(e){return e.dangling=!0,i.isVolumeUsedByAService(e,n)&&(e.dangling=!1),e}))}).catch(function(e){o.error("失败",e,"无法检索存储卷详细信息")})}])},function(e,t){angular.module("portainer.extensions",["portainer.extensions.registrymanagement","portainer.extensions.oauth","portainer.extensions.rbac"])},function(e,t){angular.module("portainer.extensions.oauth",["ngResource"]).constant("API_ENDPOINT_OAUTH","api/auth/oauth")},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.extensions.oauth").controller("OAuthProviderSelectorController",function(){var e=this;this.providers=[{authUrl:"https://login.microsoftonline.com/TENANT_ID/oauth2/authorize",accessTokenUrl:"https://login.microsoftonline.com/TENANT_ID/oauth2/token",resourceUrl:"https://graph.windows.net/TENANT_ID/me?api-version=2013-11-08",userIdentifier:"userPrincipalName",scopes:"id,email,name",name:"microsoft"},{authUrl:"https://accounts.google.com/o/oauth2/auth",accessTokenUrl:"https://accounts.google.com/o/oauth2/token",resourceUrl:"https://www.googleapis.com/oauth2/v1/userinfo?alt=json",userIdentifier:"email",scopes:"profile email",name:"google"},{authUrl:"https://github.com/login/oauth/authorize",accessTokenUrl:"https://github.com/login/oauth/access_token",resourceUrl:"https://api.github.com/user",userIdentifier:"login",scopes:"id email name",name:"github"},{authUrl:"",accessTokenUrl:"",resourceUrl:"",userIdentifier:"",scopes:"",name:"custom"}],this.$onInit=function(){e.provider.authUrl?e.provider=function(t){if(-1!==t.indexOf("login.microsoftonline.com"))return e.providers[0];if(-1!==t.indexOf("accounts.google.com"))return e.providers[1];if(-1!==t.indexOf("github.com"))return e.providers[2];return e.providers[3]}(e.provider.authUrl):e.provider=e.providers[0];e.onSelect(e.provider,!1)}})},function(e,t,n){var a=n(764);angular.module("portainer.extensions.oauth").component("oauthProvidersSelector",{templateUrl:a,bindings:{onSelect:"<",provider:"="},controller:"OAuthProviderSelectorController"})},function(e,t){var n="app/extensions/oauth/components/oauth-providers-selector/oauth-providers-selector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="col-sm-12 form-section-title">\n  服务提供商\n</div>\n\n<div class="form-group"></div>\n<div class="form-group" style="margin-bottom: 0">\n  <div class="boxselector_wrapper">\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_microsoft" ng-model="$ctrl.provider" ng-value="$ctrl.providers[0]">\n      <label for="oauth_provider_microsoft">\n        <div class="boxselector_header">\n          <i class="fab fa-microsoft" aria-hidden="true" style="margin-right: 2px;"></i>\n          Microsoft\n        </div>\n        <p>微软 OAuth 身份认证服务</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_google" ng-model="$ctrl.provider" ng-value="$ctrl.providers[1]">\n      <label for="oauth_provider_google">\n        <div class="boxselector_header">\n          <i class="fab fa-google" aria-hidden="true" style="margin-right: 2px;"></i>\n          Google\n        </div>\n        <p>谷歌 OAuth 身份认证服务</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_github" ng-model="$ctrl.provider" ng-value="$ctrl.providers[2]">\n      <label for="oauth_provider_github">\n        <div class="boxselector_header">\n          <i class="fab fa-github" aria-hidden="true" style="margin-right: 2px;"></i>\n          Github\n        </div>\n        <p>Github OAuth 身份认证服务</p>\n      </label>\n    </div>\n    <div ng-click="$ctrl.onSelect($ctrl.provider, true)">\n      <input type="radio" id="oauth_provider_custom" ng-model="$ctrl.provider" ng-value="$ctrl.providers[3]">\n      <label for="oauth_provider_custom">\n        <div class="boxselector_header">\n          <i class="fa fa-user-check" aria-hidden="true" style="margin-right: 2px;"></i>\n          自定义 OAuth\n        </div>\n        <p>自定义 OAuth 身份认证服务</p>\n      </label>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(227),n(5),n(11);var a=n(203);angular.module("portainer.extensions.oauth").controller("OAuthSettingsController",function(){var e=this;function t(){var t=e.state.microsoftTenantID;e.settings.AuthorizationURI=Object(a.a)("https://login.microsoftonline.com/TENANT_ID/oauth2/authorize","TENANT_ID",t),e.settings.AccessTokenURI=Object(a.a)("https://login.microsoftonline.com/TENANT_ID/oauth2/token","TENANT_ID",t),e.settings.ResourceURI=Object(a.a)("https://graph.windows.net/TENANT_ID/me?api-version=2013-11-08","TENANT_ID",t)}function n(){e.settings.AuthorizationURI=e.state.provider.authUrl,e.settings.AccessTokenURI=e.state.provider.accessTokenUrl,e.settings.ResourceURI=e.state.provider.resourceUrl,e.settings.UserIdentifier=e.state.provider.userIdentifier,e.settings.Scopes=e.state.provider.scopes,"microsoft"===e.state.provider.name&&""!==e.state.microsoftTenantID&&t()}this.state={provider:{},overrideConfiguration:!1,microsoftTenantID:""},this.$onInit=function(){""===e.settings.RedirectURI&&(e.settings.RedirectURI=window.location.origin);if(""!==e.settings.AuthorizationURI&&(e.state.provider.authUrl=e.settings.AuthorizationURI,e.settings.AuthorizationURI.indexOf("login.microsoftonline.com")>-1)){var n=e.settings.AuthorizationURI.match(/login.microsoftonline.com\/(.*?)\//)[1];e.state.microsoftTenantID=n,t()}},this.onSelectProvider=function(a,r){e.state.provider=a,r?n():function(){var n=e.state.provider;e.settings.AuthorizationURI=""===e.settings.AuthorizationURI?n.authUrl:e.settings.AuthorizationURI,e.settings.AccessTokenURI=""===e.settings.AccessTokenURI?n.accessTokenUrl:e.settings.AccessTokenURI,e.settings.ResourceURI=""===e.settings.ResourceURI?n.resourceUrl:e.settings.ResourceURI,e.settings.UserIdentifier=""===e.settings.UserIdentifier?n.userIdentifier:e.settings.UserIdentifier,e.settings.Scopes=""===e.settings.Scopes?n.scopes:e.settings.Scopes,"microsoft"===n.name&&""!==e.state.microsoftTenantID&&t()}()},this.onMicrosoftTenantIDChange=t,this.useDefaultProviderConfiguration=n})},function(e,t,n){var a=n(767);angular.module("portainer.extensions.oauth").component("oauthSettings",{templateUrl:a,bindings:{settings:"=",teams:"<"},controller:"OAuthSettingsController"})},function(e,t){var n="app/extensions/oauth/components/oauth-settings/oauth-settings.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    自动用户配置\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      启用自动用户配置后，系统将使用标准用户角色自动创建用户。\n      如果禁用，则必须事先在系统中创建用户才能登录。\n    </span>\n  </div>\n  <div class="form-group">\n    <label class="col-sm-3 col-lg-2 control-label text-left">自动用户配置</label>\n    <label class="switch" style="margin-left: 20px">\n      <input type="checkbox" ng-model="$ctrl.settings.OAuthAutoCreateUsers" /><i></i>\n    </label>\n  </div>\n\n  <div ng-if="$ctrl.settings.OAuthAutoCreateUsers">\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        <p>自动配置功能创建的用户可以在创建时添加到默认的用户组。</p>\n        <p>通过将新创建的用户分配给用户组，他们将能够访问与该用户组相关联的环境。此设置是可选的，如果未设置，则新创建的用户将无法访问任何环境。</p>\n      </span>\n    </div>\n    <div class="form-group">\n      <label class="col-sm-3 col-lg-2 control-label text-left">默认用户组</label>\n      <span class="small text-muted" style="margin-left: 20px;" ng-if="$ctrl.teams.length === 0">\n        您还尚未创建任何用户组。可以通过 <a ui-sref="portainer.teams">用户组视图</a> 来管理用户组。\n      </span>\n      <button type="button" class="btn btn-sm btn-danger" ng-click="$ctrl.settings.DefaultTeamID = null" ng-disabled="!$ctrl.settings.DefaultTeamID" ng-if="$ctrl.teams.length > 0"><i class="fa fa-times" aria-hidden="true"></i></button>\n      <div class="col-sm-9 col-lg-9" ng-if="$ctrl.teams.length > 0">\n        <select class="form-control" ng-model="$ctrl.settings.DefaultTeamID" ng-options="team.Id as team.Name for team in $ctrl.teams">\n          <option value="">没有可用的用户组</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <oauth-providers-selector on-select="$ctrl.onSelectProvider" provider="$ctrl.state.provider"></oauth-providers-selector>\n\n  <div class="col-sm-12 form-section-title">OAuth配置</div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'microsoft\'">\n    <label for="oauth_microsoft_tenant_id" class="col-sm-3 col-lg-2 control-label text-left">\n      租户ID\n      <portainer-tooltip position="bottom" message="要进行身份验证的Azure目录的ID，也称为目录ID"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_microsoft_tenant_id"\n      placeholder="xxxxxxxxxxxxxxxxxxxx"\n      ng-model="$ctrl.state.microsoftTenantID"\n      ng-change="$ctrl.onMicrosoftTenantIDChange()"\n      />\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label for="oauth_client_id" class="col-sm-3 col-lg-2 control-label text-left">\n      {{ $ctrl.state.provider.name == \'microsoft\' ? \'Application ID\' : \'Client ID\' }}\n      <portainer-tooltip position="bottom" message="OAuth应用程序的公共标识符"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_client_id"\n      ng-model="$ctrl.settings.ClientID"\n      placeholder="xxxxxxxxxxxxxxxxxxxx"\n      />\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label for="oauth_client_secret" class="col-sm-3 col-lg-2 control-label text-left">\n      {{ $ctrl.state.provider.name == \'microsoft\' ? \'Application key\' : \'Client secret\' }}\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="password"\n      class="form-control"\n      id="oauth_client_secret"\n      ng-model="$ctrl.settings.ClientSecret"\n      placeholder="xxxxxxxxxxxxxxxxxxxx"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_authorization_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      授权URL地址\n      <portainer-tooltip\n      position="bottom"\n      message="用于对OAuth程序进行身份验证的URL。将用户重定向到提供OAuth认证的应用程序登录视图"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_authorization_uri"\n      ng-model="$ctrl.settings.AuthorizationURI"\n      placeholder="https://example.com/oauth/authorize"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_access_token_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      访问令牌Token网址\n      <portainer-tooltip\n      position="bottom"\n      message="系统用于交换验证访问令牌是否有效的OAuth身份验证代码URL地址"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_access_token_uri"\n      ng-model="$ctrl.settings.AccessTokenURI"\n      placeholder="https://example.com/oauth/token"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_resource_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      资源URL地址\n      <portainer-tooltip\n      position="bottom"\n      message="系统用于检索有关已验证用户的信息的URL地址"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_resource_uri"\n      ng-model="$ctrl.settings.ResourceURI"\n      placeholder="https://example.com/user"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_redirect_uri" class="col-sm-3 col-lg-2 control-label text-left">\n      重定向URL地址\n      <portainer-tooltip\n      position="bottom"\n      message="成功进行身份验证后，OAuth提供的程序用于重定向用户的URL地址。应设置为Portainer实例的URL地址"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_redirect_uri"\n      ng-model="$ctrl.settings.RedirectURI"\n      placeholder="http://your-portainer.com/"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_user_identifier" class="col-sm-3 col-lg-2 control-label text-left">\n      用户身份标识符\n      <portainer-tooltip\n      position="bottom"\n      message="系统将用于为经过身份验证的用户创建帐户的标识符。通过从“资源URL地址”字段指定的资源服务器中检索结果。"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_user_identifier"\n      ng-model="$ctrl.settings.UserIdentifier"\n      placeholder="id"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name == \'custom\' || $ctrl.state.overrideConfiguration">\n    <label for="oauth_scopes" class="col-sm-3 col-lg-2 control-label text-left">\n      区域范围\n      <portainer-tooltip\n      position="bottom"\n      message="OAuth提供程序检索有关已通过身份验证的用户的信息所需的范围。有关此内容的详细信息，请参阅OAuth的相关文档。"\n      ></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input\n      type="text"\n      class="form-control"\n      id="oauth_scopes"\n      ng-model="$ctrl.settings.Scopes"\n      placeholder="id,email,name"\n      />\n    </div>\n  </div>\n\n  <div class="form-group" ng-if="$ctrl.state.provider.name != \'custom\'">\n    <div class="col-sm-12">\n      <a class="small interactive" ng-if="!$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = true;">\n        <i class="fa fa-wrench space-right" aria-hidden="true"></i> 覆盖默认配置\n      </a>\n      <a class="small interactive" ng-if="$ctrl.state.overrideConfiguration" ng-click="$ctrl.state.overrideConfiguration = false; $ctrl.useDefaultProviderConfiguration()">\n        <i class="fa fa-cogs space-right" aria-hidden="true"></i> 使用默认配置\n      </a>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.extensions.oauth").factory("OAuth",["$resource","API_ENDPOINT_OAUTH",function(e,t){"use strict";return e(t+"/:action",{},{validate:{method:"POST",ignoreLoadingBar:!0,params:{action:"validate"}}})}])},function(e,t,n){var a=n(770);angular.module("portainer.extensions.rbac",["ngResource"]).constant("API_ENDPOINT_ROLES","api/roles").config(["$stateRegistryProvider",function(e){"use strict";var t={name:"portainer.roles",url:"/roles",views:{"content@":{templateUrl:a,controller:"RolesController",controllerAs:"ctrl"}}};e.register(t)}])},function(e,t){var n="app/extensions/rbac/views/roles/roles.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="角色">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.roles" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>角色管理</rd-header-content>\n</rd-header>\n\n<information-panel ng-if="!ctrl.rbacEnabled" title-text="信息">\n  <span class="small">\n    <p class="text-muted">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      需要通过 <a ui-sref="portainer.extensions.extension({id: 3})"\n        tooltip-append-to-body="true" tooltip-placement="bottom" tooltip-class="portainer-tooltip"\n        uib-tooltip="此功能可通过扩展程序获得">RBAC 基于角色的访问控制扩展</a>\n        来开启此功能。\n    </p>\n  </span>\n</information-panel>\n\n<div class="row">\n  <div class="col-sm-12">\n    <roles-datatable\n    title-text="角色" title-icon="fa-file-code"\n    dataset="ctrl.roles" table-key="roles"\n    order-by="Name"\n    rbac-enabled="ctrl.rbacEnabled"\n    ></roles-datatable>\n  </div>\n</div>\n\n<div class="row">\n  <access-viewer ng-if="ctrl.rbacEnabled">\n  </access-viewer>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(772);angular.module("portainer.app").component("accessViewer",{templateUrl:a,controller:"AccessViewerController",controllerAs:"ctrl"})},function(e,t){var n="app/extensions/rbac/components/access-viewer/accessViewer.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'  <div class="col-sm-12" style="margin-bottom: 0px;">\n    <rd-widget ng-if="ctrl.users">\n      <rd-widget-header icon="fa-user-lock" title-text="有效访问权限查看器"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            用户\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted" ng-if="ctrl.users.length === 0">\n                没有可用的用户\n              </span>\n              <ui-select ng-if="ctrl.users.length > 0" ng-model="ctrl.selectedUser" ng-change="ctrl.onUserSelect()">\n                <ui-select-match placeholder="选择一个用户">\n                  <span>{{ $select.selected.Username }}</span>\n                </ui-select-match>\n                <ui-select-choices repeat="item in (ctrl.users | filter: $select.search)">\n                  <span>{{ item.Username }}</span>\n                </ui-select-choices>\n              </ui-select>\n            </div>\n          </div>\n\n          <div class="col-sm-12 form-section-title">\n            访问权限控制\n          </div>\n          <div>\n            <div class="small text-muted" style="margin-bottom: 15px;">\n              <i class="fa fa-info-circle blue-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n              将为所选用户显示每个节点的有效角色\n            </div>\n          </div>\n            <access-viewer-datatable\n                    ng-if="ctrl.users"\n                    table-key="access_viewer"\n                    dataset="ctrl.userRoles"\n                    order-by="EndpointName"\n            >\n            </access-viewer-datatable>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(44),n(774),n(95),n(45),n(129),n(130),n(1);var a=n(55),r=n(141),i=n(330),o=n(1210),s=n(117),l=n(1211),c=n(36),d=n(16),p=n.n(d),u=n(120);function m(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function g(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function f(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var v=function(){function e(t,n,a,r,i,o,s,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.ExtensionService=n,this.RoleService=a,this.UserService=r,this.EndpointService=i,this.GroupService=o,this.TeamService=s,this.TeamMembershipService=l}var t,n,d,p,v;return e.$inject=["Notifications","ExtensionService","RoleService","UserService","EndpointService","GroupService","TeamService","TeamMembershipService"],t=e,(n=[{key:"onUserSelect",value:function(){this.userRoles=[];var e={},t=this.selectedUser,n=Object(c.a)(this.teamMemberships,{UserId:t.Id}),a=!0,r=!1,i=void 0;try{for(var o,d=Object(l.a)(this.endpoints)[Symbol.iterator]();!(a=(o=d.next()).done);a=!0){var p=g(o.value,2)[1],u=this.getRoleFromUserEndpointPolicy(t,p);u?e[p.Id]=u:(u=this.getRoleFromUserEndpointGroupPolicy(t,p))?e[p.Id]=u:(u=this.getRoleFromTeamEndpointPolicies(n,p))?e[p.Id]=u:(u=this.getRoleFromTeamEndpointGroupPolicies(n,p))&&(e[p.Id]=u)}}catch(e){r=!0,i=e}finally{try{a||null==d.return||d.return()}finally{if(r)throw i}}this.userRoles=Object(s.a)(e)}},{key:"findLowestRole",value:function(e){return Object(o.a)(Object(i.a)(e,"RoleId","desc"))}},{key:"getRoleFromUserEndpointPolicy",value:function(e,t){var n=[],a=t.UserAccessPolicies[e.Id];if(a){var r=new u.default(a,t,this.roles,null,null);n.push(r)}return this.findLowestRole(n)}},{key:"getRoleFromUserEndpointGroupPolicy",value:function(e,t){var n=[],a=this.groupUserAccessPolicies[t.GroupId][e.Id];if(a){var r=new u.default(a,t,this.roles,this.groups[t.GroupId],null);n.push(r)}return this.findLowestRole(n)}},{key:"getRoleFromTeamEndpointPolicies",value:function(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done);a=!0){var l=o.value,c=t.TeamAccessPolicies[l.TeamId];if(c){var d=new u.default(c,t,this.roles,null,this.teams[l.TeamId]);n.push(d)}}}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return this.findLowestRole(n)}},{key:"getRoleFromTeamEndpointGroupPolicies",value:function(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done);a=!0){var l=o.value,c=this.groupTeamAccessPolicies[t.GroupId][l.TeamId];if(c){var d=new u.default(c,t,this.roles,this.groups[t.GroupId],this.teams[l.TeamId]);n.push(d)}}}catch(e){r=!0,i=e}finally{try{a||null==s.return||s.return()}finally{if(r)throw i}}return this.findLowestRole(n)}},{key:"$onInit",value:(p=regeneratorRuntime.mark(function e(){var t,n=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 3:if(this.rbacEnabled=e.sent,!this.rbacEnabled){e.next=33;break}return e.next=7,this.UserService.users();case 7:return this.users=e.sent,e.t0=r.a,e.next=11,this.EndpointService.endpoints();case 11:return e.t1=e.sent,this.endpoints=(0,e.t0)(e.t1,"Id"),e.next=15,this.GroupService.groups();case 15:return t=e.sent,this.groupUserAccessPolicies={},this.groupTeamAccessPolicies={},Object(a.a)(t,function(e){n.groupUserAccessPolicies[e.Id]=e.UserAccessPolicies,n.groupTeamAccessPolicies[e.Id]=e.TeamAccessPolicies}),this.groups=Object(r.a)(t,"Id"),e.t2=r.a,e.next=23,this.RoleService.roles();case 23:return e.t3=e.sent,this.roles=(0,e.t2)(e.t3,"Id"),e.t4=r.a,e.next=28,this.TeamService.teams();case 28:return e.t5=e.sent,this.teams=(0,e.t4)(e.t5,"Id"),e.next=32,this.TeamMembershipService.memberships();case 32:this.teamMemberships=e.sent;case 33:e.next=38;break;case 35:e.prev=35,e.t6=e.catch(0),this.Notifications.error("失败",e.t6,"无法检索访问控制权限");case 38:case"end":return e.stop()}},e,this,[[0,35]])}),v=function(){var e=this,t=arguments;return new Promise(function(n,a){var r=p.apply(e,t);function i(e){m(r,n,a,i,o,"next",e)}function o(e){m(r,n,a,i,o,"throw",e)}i(void 0)})},function(){return v.apply(this,arguments)})}])&&f(t.prototype,n),d&&f(t,d),e}();t.default=v,p.a.module("portainer.app").controller("AccessViewerController",v)},,function(e,t,n){var a=n(776);angular.module("portainer.app").component("accessViewerDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",tableKey:"@",orderBy:"@",dataset:"<"}})},function(e,t){var n="app/extensions/rbac/components/access-viewer/datatable/accessViewerDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()"\n          placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'EndpointName\')">\n                  节点\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'EndpointName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'EndpointName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>访问来路</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit)) track by $index">\n              <td>{{ item.EndpointName }}</td>\n              <td>{{ item.RoleName }}</td>\n              <td>{{ item.TeamName ? \'Team\' : \'User\'}} <code ng-if="item.TeamName">{{ item.TeamName }}</code> 访问控制权限定义在 {{ item.AccessLocation }} <code ng-if="item.GroupName">{{item.GroupName}}</code>\n                <a ng-if="item.AccessLocation === \'endpoint\'" ui-sref="portainer.endpoints.endpoint.access({id: item.EndpointId})"><i style="margin-left: 5px;" class="fa fa-users" aria-hidden="true"></i> 管理访问控制权限 </a>\n                <a ng-if="item.AccessLocation === \'endpoint group\'" ui-sref="portainer.groups.group.access({id: item.GroupId})"><i style="margin-left: 5px;" class="fa fa-users" aria-hidden="true"></i> 管理访问控制权限 </a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">选择用户以显示相关联的访问控制权限和角色</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">所选择的用户无权访问任何节点</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit"\n                ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(778);angular.module("portainer.extensions.rbac").component("rolesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",rbacEnabled:"<"}})},function(e,t){var n="app/extensions/rbac/components/roles-datatable/rolesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable" ng-class="{\'portainer-disabled-datatable\': !$ctrl.rbacEnabled}">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus ng-disabled="!$ctrl.rbacEnabled">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Description\')">\n                  描述\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>{{ item.Name }}</td>\n              <td>{{ item.Description }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="2" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="2" class="text-center text-muted">没有可用的角色。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(44),n(226),n(20),n(45);function a(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}angular.module("portainer.extensions.rbac").directive("authorization",["Authentication","ExtensionService",function(e,t){return{restrict:"A",link:(n=regeneratorRuntime.mark(function n(a,r,i){var o,s,l;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return r.hide(),n.prev=1,n.next=4,t.extensionEnabled(t.EXTENSIONS.RBAC);case 4:if(n.sent){n.next=8;break}return r.show(),n.abrupt("return");case 8:n.next=14;break;case 10:return n.prev=10,n.t0=n.catch(1),r.show(),n.abrupt("return");case 14:for(o=i.authorization.split(","),s=0;s<o.length;s++)o[s]=o[s].trim();(l=e.hasAuthorizations(o))?r.show():l||"A"!==r[0].tagName||(r.show(),r.addClass("portainer-disabled-link"));case 18:case"end":return n.stop()}},n,this,[[1,10]])}),r=function(){var e=this,t=arguments;return new Promise(function(r,i){var o=n.apply(e,t);function s(e){a(o,r,i,s,l,"next",e)}function l(e){a(o,r,i,s,l,"throw",e)}s(void 0)})},function(e,t,n){return r.apply(this,arguments)})};var n,r}])},function(e,t,n){"use strict";n.r(t);n(44),n(226),n(20),n(45);function a(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}angular.module("portainer.extensions.rbac").directive("disableAuthorization",["Authentication","ExtensionService",function(e,t){return{restrict:"A",link:(n=regeneratorRuntime.mark(function n(a,r,i){var o,s;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.extensionEnabled(t.EXTENSIONS.RBAC);case 3:if(n.sent){n.next=7;break}return r.show(),n.abrupt("return");case 7:n.next=13;break;case 9:return n.prev=9,n.t0=n.catch(0),r.show(),n.abrupt("return");case 13:for(o=i.disableAuthorization.split(","),s=0;s<o.length;s++)o[s]=o[s].trim();e.hasAuthorizations(o)||r.attr("disabled",!0);case 16:case"end":return n.stop()}},n,this,[[0,9]])}),r=function(){var e=this,t=arguments;return new Promise(function(r,i){var o=n.apply(e,t);function s(e){a(o,r,i,s,l,"next",e)}function l(e){a(o,r,i,s,l,"throw",e)}s(void 0)})},function(e,t,n){return r.apply(this,arguments)})};var n,r}])},function(e,t){angular.module("portainer.app").factory("Roles",["$resource","API_ENDPOINT_ROLES",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);var a=n(250);angular.module("portainer.extensions.rbac").factory("RoleService",["$q","Roles",function(e,t){var n={role:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.RoleViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索角色",err:e})}),r.promise},roles:function(){return t.query({}).$promise},deleteRole:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(44),n(95),n(45);var a=n(16),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var s=function(){function e(t,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.RoleService=n,this.ExtensionService=a}var t,n,a,r,s;return e.$inject=["Notifications","RoleService","ExtensionService"],t=e,(n=[{key:"$onInit",value:(r=regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.roles=[],this.rbacEnabled=!1,e.prev=2,e.next=5,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 5:return this.rbacEnabled=e.sent,e.next=8,this.RoleService.roles();case 8:this.roles=e.sent,e.next=14;break;case 11:e.prev=11,e.t0=e.catch(2),this.Notifications.error("失败",e.t0,"无法检索角色");case 14:case"end":return e.stop()}},e,this,[[2,11]])}),s=function(){var e=this,t=arguments;return new Promise(function(n,a){var o=r.apply(e,t);function s(e){i(o,n,a,s,l,"next",e)}function l(e){i(o,n,a,s,l,"throw",e)}s(void 0)})},function(){return s.apply(this,arguments)})}])&&o(t.prototype,n),a&&o(t,a),e}();t.default=s,r.a.module("portainer.extensions.rbac").controller("RolesController",s)},function(e,t,n){var a=n(785),r=n(786),i=n(787);angular.module("portainer.extensions.registrymanagement",[]).config(["$stateRegistryProvider",function(e){"use strict";var t={name:"portainer.registries.registry.configure",url:"/configure",views:{"content@":{templateUrl:a,controller:"ConfigureRegistryController"}}},n={name:"portainer.registries.registry.repositories",url:"/repositories",views:{"content@":{templateUrl:r,controller:"RegistryRepositoriesController"}}},o={name:"portainer.registries.registry.repository",url:"/:repository",views:{"content@":{templateUrl:i,controller:"RegistryRepositoryController"}}};e.register(t),e.register(n),e.register(o)}])},function(e,t){var n="app/extensions/registry-management/views/configure/configureregistry.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="镜像仓库配置"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">镜像仓库</a> &gt; <a ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a> &gt; 管理配置\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            提示\n          </div>\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              以下的配置您可以访问docker官网有关 <a href="https://docs.docker.com/registry/spec/api/" target="_blank">registry API</a> 的相关文档来了解更多详细信息。\n            </span>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            仓库详情\n          </div>\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              仓库URL地址\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="registry.URL" disabled>\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group" ng-if="registry.Type === 3">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                认证\n                <portainer-tooltip position="bottom" message="如果需要指定凭据以连接到此仓库，请启用此选项。"></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="model.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="model.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="model.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="model.Password" placeholder="*******">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          \x3c!-- tls --\x3e\n          <div ng-if="registry.Type === 3">\n            \x3c!-- tls-checkbox --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  TLS加密认证\n                  <portainer-tooltip position="bottom" message="如果需要使用TLS连接到仓库API，请启用此选项。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="model.TLS"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-checkbox --\x3e\n            \x3c!-- tls-skip-verify --\x3e\n            <div class="form-group" ng-if="model.TLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  跳过验证证书\n                  <portainer-tooltip position="bottom" message="跳过验证服务器的TLS证书。不建议在不安全的网络上使用。"></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="model.TLSSkipVerify"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-skip-verify --\x3e\n            <div class="col-sm-12 form-section-title" ng-if="model.TLS && !model.TLSSkipVerify">\n              TLS认证文件\n            </div>\n            \x3c!-- tls-file-upload --\x3e\n            <div ng-if="model.TLS && !model.TLSSkipVerify">\n              \x3c!-- tls-ca-file-cert --\x3e\n              <div class="form-group">\n                <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS CA证书</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSCACertFile">选择文件</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSCACertFile.name }}\n                    <i class="fa fa-check green-icon" ng-if="model.TLSCACertFile && model.TLSCACertFile === registry.ManagementConfiguration.TLSConfig.TLSCACertFile" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSCACertFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-ca-file-cert --\x3e\n              \x3c!-- tls-file-cert --\x3e\n              <div class="form-group">\n                <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS证书</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSCertFile">选择文件</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSCertFile.name }}\n                    <i class="fa fa-check green-icon" ng-if="model.TLSCertFile && model.TLSCertFile === registry.ManagementConfiguration.TLSConfig.TLSCertFile" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSCertFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-file-cert --\x3e\n              \x3c!-- tls-file-key --\x3e\n              <div class="form-group">\n                <label class="col-sm-3 col-lg-2 control-label text-left">TLS密钥</label>\n                <div class="col-sm-9 col-lg-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="model.TLSKeyFile">选择文件</button>\n                  <span style="margin-left: 5px;">\n                    {{ model.TLSKeyFile.name }}\n                    <i class="fa fa-check green-icon" ng-if="model.TLSKeyFile && model.TLSKeyFile === registry.ManagementConfiguration.TLSConfig.TLSKeyFile" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!model.TLSKeyFile" aria-hidden="true"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !tls-file-key --\x3e\n            </div>\n          </div>\n          \x3c!-- !tls --\x3e\n          <div class="col-sm-12 form-section-title">\n            操作\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.testInProgress" ng-click="testConfiguration()" button-spinner="state.testInProgress">\n                <span ng-hide="state.testInProgress">测试配置</span>\n                <span ng-show="state.testInProgress">配置测试中...</span>\n              </button>\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.updateInProgress || !state.validConfiguration" ng-click="updateConfiguration()" button-spinner="state.updateInProgress">\n                <span ng-hide="state.updateInProgress">保存配置</span>\n                <span ng-show="state.updateInProgress">保存配置中...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/registry-management/views/repositories/registryRepositories.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="容器镜像仓库">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.registries.registry.repositories" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">镜像仓库</a> &gt; <a ng-if="isAdmin" ui-sref="portainer.registries.registry({id: registry.Id})">{{ registry.Name }}</a><span ng-if="!isAdmin">{{ registry.Name}}</span> &gt; 存储库\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <information-panel ng-if="state.displayInvalidConfigurationMessage" title-text="需要配置并管理镜像仓库">\n    <span class="small text-muted">\n      <p>\n        <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n        Portainer无法使用镜像仓库的管理功能，您可能需要更新Portainer的配置才能访问仓库。\n      </p>\n      <p>注意： Portainer只支持访问 <a href="https://docs.docker.com/registry/spec/api/" target="_blank">v2 registry API</a> 类型的镜像仓库。</p>\n      <div style="margin-top: 7px;">\n        <a ui-sref="portainer.registries.registry.configure({id: registry.Id})">\n          <i class="fa fa-wrench" aria-hidden="true"></i> 配置仓库\n        </a>\n      </div>\n    </span>\n  </information-panel>\n</div>\n\n<div class="row" ng-if="repositories">\n  <div class="col-sm-12">\n    <registry-repositories-datatable\n      title-text="存储库" title-icon="fa-book"\n      dataset="repositories" table-key="registryRepositories"\n      order-by="Name">\n    </registry-repositories-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){var n="app/extensions/registry-management/views/repositories/edit/registryRepository.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-header>\n  <rd-header-title title-text="镜像仓库 - 存储库">\n    <a data-toggle="tooltip" title="刷新" ui-sref="portainer.registries.registry.repository" ui-sref-opts="{reload: true}">\n      <i class="fa fa-sync" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="portainer.registries">镜像仓库</a> &gt;\n    <a ui-sref="portainer.registries.registry.repositories({id: registry.Id})">{{ registry.Name }}</a> &gt;\n    <a ui-sref="portainer.registries.registry.repository()">{{ repository.Name }} </a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-8">\n    <rd-widget>\n      <rd-widget-header icon="fa-info" title-text="仓库信息">\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>镜像仓库</td>\n              <td>\n                {{ repository.Name }}\n                <button class="btn btn-xs btn-danger" ng-click="removeRepository()">\n                  <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除这个仓库\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <td>标签数量</td>\n              <td>{{ repository.Tags.length }}</td>\n            </tr>\n            <tr>\n              <td>镜像数量</td>\n              <td>{{ repository.Images.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n  <div class="col-sm-4">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title-text="添加标签">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <label for="tag" class="col-sm-3 col-lg-2 control-label text-left">标签</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="tag" ng-model="formValues.Tag">\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="image" class="col-sm-3 col-lg-2 control-label text-left">镜像</label>\n            <ui-select class="col-sm-9 col-lg-10" ng-model="formValues.SelectedImage" id="image">\n              <ui-select-match placeholder="选择镜像" allow-clear="true">\n                <span>{{ $select.selected }}</span>\n              </ui-select-match>\n              <ui-select-choices repeat="image in (repository.Images | filter: $select.search)">\n                <span>{{ image }}</span>\n              </ui-select-choices>\n            </ui-select>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="state.actionInProgress || !formValues.Tag || !formValues.SelectedImage"\n                ng-click="addTag()" button-spinner="state.actionInProgress">\n                <span ng-hide="state.actionInProgress">添加标签</span>\n                <span ng-show="state.actionInProgress">标签添加中...</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <registries-repository-tags-datatable title-text="标签" title-icon="fa-tags" dataset="tags" table-key="registryRepositoryTags"\n      order-by="Name" remove-action="removeTags" retag-action="retagAction"></registries-repository-tags-datatable>\n  </div>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(789);angular.module("portainer.extensions.registrymanagement").component("registryRepositoriesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/extensions/registry-management/components/registries-repositories-datatable/registryRepositoriesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover table-filters nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  存储库\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'TagsCount\')">\n                  标签数量\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'TagsCount\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'TagsCount\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.registries.registry.repository({repository: item.Name})" class="monospaced"\n                  title="{{ item.Name }}">{{ item.Name }}</a>\n              </td>\n              <td>{{ item.TagsCount }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="5" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="5" class="text-center text-muted">没有可用的存储库。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>')}]),e.exports=n},function(e,t,n){var a=n(791);angular.module("portainer.extensions.registrymanagement").component("registriesRepositoryTagsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",retagAction:"<"}})},function(e,t){var n="app/extensions/registry-management/components/registries-repository-tags-datatable/registriesRepositoryTagsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{\n          $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>系统/架构</th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'ImageId\')">\n                  镜像ID\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ImageId\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ImageId\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Size\')">\n                  大小\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))"\n              ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Name }}\n              </td>\n              <td>{{ item.Os }}/{{ item.Architecture }}</td>\n              <td>{{ item.ImageId | truncate:40 }}</td>\n              <td>{{ item.Size | humansize }}</td>\n              <td>\n                <span ng-if="!item.Modified">\n                  <a class="interactive" ng-click="item.Modified = true; item.NewName = item.Name; $event.stopPropagation();">\n                    <i class="fa fa-tag" aria-hidden="true"></i> 重建标签\n                  </a>\n                </span>\n                <span ng-if="item.Modified">\n                  <input class="input-sm" type="text" ng-model="item.NewName" on-enter-key="$ctrl.retagAction(item)"\n                    auto-focus ng-click="$event.stopPropagation();" />\n                  <a class="interactive" ng-click="item.Modified = false; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                  <a class="interactive" ng-click="$ctrl.retagAction(item); $event.stopPropagation();"><i class="fa fa-check-square"></i></a>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的标签。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(11),n(296);var a=n(251);angular.module("portainer.extensions.registrymanagement").factory("RegistryV2Helper",[function(){var e={};return e.manifestsToTag=function(e){var t=e.v1,n=e.v2,r=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];t.push(angular.fromJson(a.v1Compatibility))}return t}(t.history),i=r[0].id,o=t.tag,s=r[0].os,l=t.architecture,c=n.layers.reduce(function(e,t){return{size:e.size+t.size}}).size,d=n.digest,p=t.name,u=t.fsLayers;return new a.RepositoryTagViewModel(o,i,s,l,c,d,p,u,r,n)},e}])},,function(e,t,n){"use strict";n.r(t);var a=n(253);angular.module("portainer.extensions.registrymanagement").factory("RegistryCatalog",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){return e(t+"/:id/v2/:action",{},{get:{method:"GET",params:{id:"@id",action:"_catalog"},transformResponse:a.default},ping:{method:"GET",params:{id:"@id"},timeout:3500},pingWithForceNew:{method:"GET",params:{id:"@id"},timeout:3500,headers:{"X-RegistryManagement-ForceNew":"1"}}},{stripTrailingSlashes:!1})}])},function(e,t){angular.module("portainer.extensions.registrymanagement").factory("RegistryManifests",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){"use strict";return e(t+"/:id/v2/:repository/manifests/:tag",{},{get:{method:"GET",params:{id:"@id",repository:"@repository",tag:"@tag"},headers:{"Cache-Control":"no-cache"},transformResponse:function(e,t){var n=angular.fromJson(e);return n.digest=t("docker-content-digest"),n}},getV2:{method:"GET",params:{id:"@id",repository:"@repository",tag:"@tag"},headers:{Accept:"application/vnd.docker.distribution.manifest.v2+json","Cache-Control":"no-cache"},transformResponse:function(e,t){var n=angular.fromJson(e);return n.digest=t("docker-content-digest"),n}},put:{method:"PUT",params:{id:"@id",repository:"@repository",tag:"@tag"},headers:{"Content-Type":"application/vnd.docker.distribution.manifest.v2+json"},transformRequest:function(e){return angular.toJson(e,3)}},delete:{method:"DELETE",params:{id:"@id",repository:"@repository",tag:"@tag"}}})}])},function(e,t){angular.module("portainer.extensions.registrymanagement").factory("RegistryTags",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){"use strict";return e(t+"/:id/v2/:repository/tags/list",{},{get:{method:"GET",params:{id:"@id",repository:"@repository"}}})}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(332),r=n(331),i=n(252);angular.module("portainer.extensions.registrymanagement").factory("RegistryV2Service",["$q","RegistryCatalog","RegistryTags","RegistryManifests","RegistryV2Helper",function(e,t,n,o,s){var l={};function c(n){var a=e.defer();return function e(n,a,i){t.get(n).$promise.then(function(t){i=Object(r.a)(i,t.repositories),t.last&&t.n?e({id:n.id,n:t.n,last:t.last},a,i):a.resolve(i)})}({id:n},a,[]),a.promise}return l.ping=function(e,n){return n?t.pingWithForceNew({id:e}).$promise:t.ping({id:e}).$promise},l.repositories=function(t){var r=e.defer();return c(t).then(function(a){for(var r=[],i=0;i<a.length;i++){var o=a[i];r.push(n.get({id:t,repository:o}).$promise)}return e.all(r)}).then(function(e){var t=e.map(function(e){if(e.tags)return new i.RegistryRepositoryViewModel(e)});t=Object(a.a)(t,void 0),r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索存储库",err:e})}),r.promise},l.tags=function(t,a){var r=e.defer();return n.get({id:t,repository:a}).$promise.then(function(e){r.resolve(e.tags)}).catch(function(e){r.reject({msg:"无法检索标签",err:e})}),r.promise},l.tag=function(t,n,a){var r=e.defer(),i={v1:o.get({id:t,repository:n,tag:a}).$promise,v2:o.getV2({id:t,repository:n,tag:a}).$promise};return e.all(i).then(function(e){var t=s.manifestsToTag(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索标签 "+a,err:e})}),r.promise},l.addTag=function(e,t,n,a){return delete a.digest,o.put({id:e,repository:t,tag:n},a).$promise},l.deleteManifest=function(e,t,n){return o.delete({id:e,repository:t,tag:n}).$promise},l}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(62);angular.module("portainer.extensions.registrymanagement").controller("ConfigureRegistryController",["$scope","$state","$transition$","RegistryService","RegistryV2Service","Notifications",function(e,t,n,r,i,o){var s;e.state={testInProgress:!1,updateInProgress:!1,validConfiguration:!1},e.testConfiguration=function(){e.state.testInProgress=!0,r.configureRegistry(e.registry.Id,e.model).then(function(){return i.ping(e.registry.Id,!0)}).then(function(){o.success("成功","管理配置成功"),e.state.validConfiguration=!0}).catch(function(e){o.error("失败",e,"无效的管理配置")}).finally(function(){e.state.testInProgress=!1})},e.updateConfiguration=function(){e.state.updateInProgress=!0,r.configureRegistry(e.registry.Id,e.model).then(function(){o.success("成功","已更新仓库管理配置"),t.go("portainer.registries.registry.repositories",{id:e.registry.Id},{reload:!0})}).catch(function(e){o.error("失败",e,"无法更新仓库管理配置")}).finally(function(){e.state.updateInProgress=!1})},s=n.params().id,r.registry(s).then(function(t){var n=t,r=new a.RegistryManagementConfigurationDefaultModel(n);e.registry=n,e.model=r}).catch(function(e){o.error("失败",e,"无法检索仓库详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(18),n(228),n(3);var a=n(333),r=n(48),i=n(63);angular.module("portainer.app").controller("RegistryRepositoryController",["$q","$scope","$transition$","$state","RegistryV2Service","RegistryService","ModalService","Notifications",function(e,t,n,o,s,l,c,d){var p,u;t.state={actionInProgress:!1},t.formValues={Tag:""},t.tags=[],t.repository={Name:[],Tags:[],Images:[]},t.$watch("tags.length",function(){var e=t.tags.map(function(e){return e.ImageId});t.repository.Images=Object(i.a)(e)}),t.addTag=function(){var e=t.tags.find(function(e){return e.ImageId===t.formValues.SelectedImage}).ManifestV2;s.addTag(t.registryId,t.repository.Name,t.formValues.Tag,e).then(function(){d.success("成功","已成功添加标签"),o.reload()}).catch(function(e){d.error("失败",e,"无法添加标签")})},t.retagAction=function(n){s.deleteManifest(t.registryId,t.repository.Name,n.Digest).then(function(){var a=[];return t.tags.filter(function(e){return e.Digest===n.Digest}).map(function(e){var n=e.Modified&&e.Name!==e.NewName?e.NewName:e.Name;a.push(s.addTag(t.registryId,t.repository.Name,n,e.ManifestV2))}),e.all(a)}).then(function(){d.success("成功","已成功修改标签"),o.reload()}).catch(function(e){d.error("失败",e,"无法修改标签"),n.Modified=!1,n.NewValue=n.Value})},t.removeTags=function(n){c.confirmDeletion("您确定要删除所选择的标签吗？",function(i){if(i){var l=[];Object(r.a)(n,"Digest").map(function(e){l.push(s.deleteManifest(t.registryId,t.repository.Name,e.Digest))}),e.all(l).then(function(){var r=[];return Object(a.a)(t.tags,n,"Name").map(function(e){r.push(s.addTag(t.registryId,t.repository.Name,e.Name,e.ManifestV2))}),e.all(r)}).then(function(e){d.success("成功","已成功删除标签"),0===e.length?o.go("portainer.registries.registry.repositories",{id:t.registryId},{reload:!0}):o.reload()}).catch(function(e){d.error("失败",e,"无法删除标签")})}})},t.removeRepository=function(){c.confirmDeletion("此操作仅删除链接到此存储库的列表。您需要在仓库服务器上手动触发垃圾收集器的进程来传递参数以删除孤立的存储层才能完全删除镜像文件。注意：此操作无法撤消。",function(n){if(n){var a=[];Object(r.a)(t.tags,"Digest").map(function(e){a.push(s.deleteManifest(t.registryId,t.repository.Name,e.Digest))}),e.all(a).then(function(){d.success("成功","已成功删除存储库"),o.go("portainer.registries.registry.repositories",{id:t.registryId},{reload:!0})}).catch(function(e){d.error("失败",e,"无法删除存储库")})}})},p=t.registryId=n.params().id,u=t.repository.Name=n.params().repository,e.all({registry:l.registry(p),tags:s.tags(p,u)}).then(function(e){t.registry=e.registry,t.repository.Tags=[].concat(e.tags||[]),t.tags=[];for(var n=0;n<t.repository.Tags.length;n++){var a=e.tags[n];s.tag(p,u,a).then(function(e){t.tags.push(e)}).catch(function(e){d.error("失败",e,"无法检索标签信息")})}}).catch(function(e){d.error("失败",e,"无法检索存储库信息")})}])},function(e,t){angular.module("portainer.extensions.registrymanagement").controller("RegistryRepositoriesController",["$transition$","$scope","RegistryService","RegistryV2Service","Notifications","Authentication",function(e,t,n,a,r,i){var o;t.state={displayInvalidConfigurationMessage:!1},o=e.params().id,t.applicationState.application.authentication&&(t.isAdmin=i.isAdmin()),n.registry(o).then(function(e){t.registry=e,a.ping(o,!1).then(function(){return a.repositories(o)}).then(function(e){t.repositories=e}).catch(function(){t.state.displayInvalidConfigurationMessage=!0})}).catch(function(e){r.error("失败",e,"无法检索仓库详细信息")})}])},function(e,t,n){var a=n(802);angular.module("extension.storidge").component("storidgeClusterEventsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/extensions/storidge/components/cluster-events-datatable/storidgeClusterEventsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Time\')">\n                  日期\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Time\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Category\')">\n                  类别\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Category\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Category\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Module\')">\n                  组件\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Module\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Module\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Content\')">\n                  内容\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Content\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Content\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>{{ item.Time }}</td>\n              <td>{{ item.Category }}</td>\n              <td>{{ item.Module }}</td>\n              <td>{{ item.Content }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">没有事件可用。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(804);angular.module("extension.storidge").component("storidgeDrivesDatatable",{templateUrl:a,controller:"StoridgeDrivesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",addAction:"<",rescanAction:"<",actionInProgress:"<",additionInProgress:"<"}})},function(e,t){var n="app/extensions/storidge/components/drives-datatable/storidgeDrivesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.rescanAction()">\n          <i class="fa fa-sync space-right" aria-hidden="true"></i>重新扫描驱动或设备\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Node\')">\n                  节点\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Node\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Node\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Device\')">\n                  设备\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Device\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Device\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Size\')">\n                  大小\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Size\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Use\')">\n                  使用情况\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Use\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Use\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  类型\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                操作\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <a ui-sref="storidge.drives.drive({id: item.Id})"> {{ item.Id }}</a>\n              </td>\n              <td>{{ item.Node }}</td>\n              <td>{{ item.Device }}</td>\n              <td>{{ item.Size }}</td>\n              <td>{{ item.Use }}</td>\n              <td>{{ item.Type }}</td>\n              <td>\n                <span class="label label-{{ item.Status|drivestatusbadge }}">{{ item.Status|capitalize }}</span>\n              </td>\n              <td>\n                <button ng-if="item.Status === \'available\'" type="button" class="btn btn-sm btn-primary btn-datatable"\n                  ng-click="$ctrl.addAction(item, $index)" button-spinner="$ctrl.additionInProgress[$index]" ng-disabled="$ctrl.actionInProgress">\n                  <span ng-hide="$ctrl.additionInProgress[$index]"><i class="fa fa-plus space-right" aria-hidden="true"></i>添加到存储池</span>\n                  <span ng-show="$ctrl.additionInProgress[$index]">正在添加...</span>\n                </button>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">没有可用的驱动或设备</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("StoridgeDrivesDatatableController",["$scope","$controller",function(e,t){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];"normal"!==t.Status&&t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}}}])},function(e,t,n){var a=n(807);angular.module("extension.storidge").component("storidgeNodesDatatable",{templateUrl:a,controller:"StoridgeNodesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<"}})},function(e,t){var n="app/extensions/storidge/components/nodes-datatable/storidgeNodesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <div class="row">\n          <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.addNodeAction()">\n            <i class="fa fa-plus space-right" aria-hidden="true"></i>添加节点\n          </button>\n          <div  style="margin-bottom: 0px;">\n            <span ng-if="$ctrl.addInfo" class="text-muted small">\n              要将节点添加到此群集，请在新节点上运行以下命令：\n              <code>\n                {{ $ctrl.addInfo }}\n              </code>\n              <span class="btn btn-primary btn-sm space-left" ng-click="$ctrl.copyAddNodeCommand()"><i class="fa fa-copy space-right" aria-hidden="true"></i>复制</span>\n              <span>\n                <i id="copyNotification" class="fa fa-check green-icon" aria-hidden="true" style="margin-left: 7px; display: none;"></i>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'IP\')">\n                  IP地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'IP\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Role\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Role\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                  状态\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <a ui-sref="storidge.cluster.node({name: item.Name})"> {{ item.Name }}</a>\n              </td>\n              <td>{{ item.IP }}</td>\n              <td>{{ item.Role }}</td>\n              <td>\n                <i class="fa fa-heartbeat space-right {{ item.Status | storidgeNodeStatusBadge }}"></i>\n                {{ item.Status }}\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">没有可用的节点。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){(function(e){angular.module("extension.storidge").controller("StoridgeNodesDatatableController",["$scope","$controller","clipboard","Notifications","StoridgeNodeService",function(t,n,a,r,i){angular.extend(this,n("GenericDatatableController",{$scope:t}));var o=this;this.addNodeAction=function(){i.add().then(function(e){o.addInfo=e.content}).catch(function(e){r.error("失败",e,'无法检索 "add node" 命令')})},this.copyAddNodeCommand=function(){a.copyText(o.addInfo),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)}}])}).call(this,n(30))},function(e,t,n){var a=n(810);angular.module("extension.storidge").component("storidgeProfileSelector",{templateUrl:a,controller:"StoridgeProfileSelectorController",bindings:{storidgeProfile:"="}})},function(e,t){var n="app/extensions/storidge/components/profileSelector/storidgeProfileSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="form-group">\n  <label for="storidge_profile" class="col-sm-2 col-lg-1 control-label text-left">配置</label>\n  <div class="col-sm-10 col-lg-11">\n    <select id="storidge_profile" ng-model="$ctrl.storidgeProfile" ng-options="profile.Name for profile in $ctrl.profiles" class="form-control">\n      <option selected disabled hidden value="">选择一个配置</option>\n    </select>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("extension.storidge").controller("StoridgeProfileSelectorController",["StoridgeProfileService","Notifications",function(e,t){var n=this;e.profiles().then(function(e){n.profiles=e}).catch(function(e){t.error("失败",e,"无法检索存储配置")})}])},function(e,t,n){var a=n(813);angular.module("extension.storidge").component("storidgeProfilesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/extensions/storidge/components/profiles-datatable/storidgeProfilesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="storidge.profiles.profile({id: item.Name})">{{ item.Name }}</a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">没有可用的配置文件。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(815);angular.module("portainer.docker").component("storidgeSnapshotCreation",{templateUrl:a,controller:"StoridgeSnapshotCreationController",bindings:{volumeId:"<"}})},function(e,t){var n="app/extensions/storidge/components/snapshot-creation/storidgeSnapshotCreation.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-plus" title-text="创建快照">\n  </rd-widget-header>\n  <rd-widget-body>\n    <form class="form-horizontal">\n      <div class="form-group">\n        <label for="description" class="col-sm-3 col-lg-2 control-label text-left">描述</label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" id="description" ng-model="$ctrl.formValues.Description">\n        </div>\n      </div>\n      <div class="form-group">\n        <div class="col-sm-12">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="$ctrl.state.actionInProgress"\n            ng-click="$ctrl.createSnapshot()" button-spinner="$ctrl.state.actionInProgress">\n            <span ng-hide="$ctrl.state.actionInProgress">创建快照</span>\n            <span ng-show="$ctrl.state.actionInProgress">快照创建中...</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </rd-widget-body>\n</rd-widget>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.docker").controller("StoridgeSnapshotCreationController",["StoridgeSnapshotService","Notifications","$state",function(e,t,n){var a=this;this.formValues={},this.state={actionInProgress:!1},this.createSnapshot=function(){a.state.actionInProgress=!0,e.create(a.volumeId,a.formValues.Description).then(function(){t.success("成功","已成功创建快照"),n.reload()}).catch(function(e){t.error("失败",e,"无法创建快照")}).finally(function(){a.state.actionInProgress=!1})}}])},function(e,t,n){var a=n(818);angular.module("extension.storidge").component("storidgeSnapshotsDatatable",{templateUrl:a,controller:"StoridgeSnapshotsDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/extensions/storidge/components/snapshots-datatable/storidgeSnapshotsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                  Id\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Date\')">\n                  日期\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Date\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Date\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Description\')">\n                  描述\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Description\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" ng-disabled="item.Status === \'normal\'"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="docker.volumes.volume.snapshot({snapshotId: item.Id})"> {{ item.Id }}</a>\n              </td>\n              <td>{{ item.Date }}</td>\n              <td>{{ item.Description }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="7" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的快照。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.docker").controller("StoridgeSnapshotsDatatableController",["$scope","$controller",function(e,t){angular.extend(this,t("GenericDatatableController",{$scope:e}))}])},function(e,t,n){var a=n(821);angular.module("portainer.docker").component("volumeStoridgeInfo",{templateUrl:a,controller:"VolumeStoridgeInfoController",bindings:{volume:"<"}})},function(e,t){var n="app/extensions/storidge/components/volume-storidge-info/volumeStoridgeInfo.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<rd-widget>\n  <rd-widget-header icon="fa-cube" title-text="Storidge 详情">\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.updateVolume()" ng-if="!$ctrl.state.updateInProgress">\n          <span>更新卷</span>\n        </button>\n        <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.confirmUpdate()" ng-if="$ctrl.state.updateInProgress" button-spinner="$ctrl.state.isUpdating">\n          <span ng-hide="$ctrl.state.isUpdating">确认</span>\n          <span ng-show="$ctrl.state.isUpdating">正在更新卷...</span>\n        </button>\n        <button type="button" class="btn btn-danger btn-sm" ng-click="$ctrl.cancelUpdate()" ng-if="$ctrl.state.updateInProgress" ng-disabled="$ctrl.state.isUpdating">\n          <span>退出</span>\n        </button>\n      </div>\n    </div>\n  </rd-widget-header>\n  <rd-widget-body classes="no-padding" ng-if="!$ctrl.state.updateInProgress">\n    <table class="table">\n      <tbody>\n        <tr>\n          <td>名称</td>\n          <td>{{ $ctrl.volume.Name }}</td>\n        </tr>\n        <tr>\n          <td>UUID</td>\n          <td>{{ $ctrl.volume.Uuid }}</td>\n        </tr>\n        <tr>\n          <td>节点</td>\n          <td>{{ $ctrl.volume.Node }}</td>\n        </tr>\n        <tr>\n          <td>节点ID</td>\n          <td>{{ $ctrl.volume.NodeID }}</td>\n        </tr>\n        <tr>\n          <td>目录</td>\n          <td>{{ $ctrl.volume.Directory }}</td>\n        </tr>\n        <tr>\n          <td>容量</td>\n          <td>{{ $ctrl.volume.Capacity }}</td>\n        </tr>\n        <tr>\n          <td>分配</td>\n          <td>{{ $ctrl.volume.Allocated }}</td>\n        </tr>\n        <tr>\n          <td>最小IOPS</td>\n          <td>{{ $ctrl.volume.IOPSMin }}</td>\n        </tr>\n        <tr>\n          <td>最大IOPS</td>\n          <td>{{ $ctrl.volume.IOPSMax }}</td>\n        </tr>\n        <tr>\n          <td>最小带宽</td>\n          <td>{{ $ctrl.volume.BandwidthMin }}</td>\n        </tr>\n        <tr>\n          <td>最大带宽</td>\n          <td>{{ $ctrl.volume.BandwidthMax }}</td>\n        </tr>\n        <tr>\n          <td>仅限本地驱动器</td>\n          <td>{{ $ctrl.volume.LocalDriveOnly }}</td>\n        </tr>\n        <tr>\n          <td>供应商</td>\n          <td>{{ $ctrl.volume.Provisioning }}</td>\n        </tr>\n        <tr>\n          <td>冗余</td>\n          <td>{{ $ctrl.volume.Redundancy }}</td>\n        </tr>\n        <tr>\n          <td>Vdisk虚拟磁盘</td>\n          <td>{{ $ctrl.volume.Vdisk }}</td>\n        </tr>\n        <tr>\n          <td>IP</td>\n          <td>{{ $ctrl.volume.IP}}</td>\n        </tr>\n        <tr>\n          <td>驱动或设备类型</td>\n          <td>{{ $ctrl.volume.DriveType}}</td>\n        </tr>\n        <tr>\n          <td>加密</td>\n          <td>{{ $ctrl.volume.Encryption}}</td>\n        </tr>\n        <tr>\n          <td>启用快照</td>\n          <td>{{ $ctrl.volume.SnapshotEnabled}}</td>\n        </tr>\n        <tr>\n          <td>快照间隔</td>\n          <td>{{ $ctrl.volume.SnapshotInterval}} 分钟</td>\n        </tr>\n        <tr>\n          <td>最大快照数量</td>\n          <td>{{ $ctrl.volume.SnapshotMax}}</td>\n        </tr>\n        <tr>\n          <td>文件系统</td>\n          <td>{{ $ctrl.volume.Filesystem}}</td>\n        </tr>\n        <tr ng-if="$ctrl.volume.Labels">\n          <td>标签</td>\n          <td>\n            <table class="table table-bordered table-condensed">\n              <tr ng-repeat="var in $ctrl.volume.Labels">\n                <td>{{ var|key: \'=\' }}</td>\n                <td>{{ var|value: \'=\' }}</td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </rd-widget-body>\n  <rd-widget-body ng-if="$ctrl.state.updateInProgress">\n    <form class="form-horizontal" name="storidgeUpdateVolumeForm">\n      \x3c!-- Node --\x3e\n      <div class="form-group">\n        <label for="volume_node" class="col-sm-2 col-lg-1 control-label text-left">节点</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="text" class="form-control" ng-model="$ctrl.formValues.Node" name="volume_node" placeholder="2">\n        </div>\n      </div>\n      \x3c!-- !Node --\x3e\n      \x3c!-- Capacity --\x3e\n      <div class="form-group">\n        <label for="volume_capacity" class="col-sm-2 col-lg-1 control-label text-left">容量</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="text" class="form-control" ng-model="$ctrl.formValues.Capacity" name="volume_capacity" placeholder="2">\n        </div>\n      </div>\n      \x3c!-- !Capacity --\x3e\n      \x3c!-- IOPS --\x3e\n      <div class="form-group">\n        <label for="min_iops" class="col-sm-2 col-lg-1 control-label text-left">最小IOPS</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.IOPSMin" name="min_iops" placeholder="100">\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="max_iops" class="col-sm-2 col-lg-1 control-label text-left">最大IOPS</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.IOPSMax" name="max_iops" placeholder="2000">\n        </div>\n      </div>\n      \x3c!-- !IOPS --\x3e\n      \x3c!-- Bandwidth --\x3e\n      <div class="form-group">\n        <label for="min_bandwidth" class="col-sm-2 col-lg-1 control-label text-left">最小带宽</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.BandwidthMin" name="min_bandwidth" placeholder="100">\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="max_bandwidth" class="col-sm-2 col-lg-1 control-label text-left">最大带宽</label>\n        <div class="col-sm-10 col-lg-11">\n          <input type="number" class="form-control" ng-model="$ctrl.formValues.BandwidthMax" name="max_bandwidth" placeholder="2000">\n        </div>\n      </div>\n      \x3c!-- !Bandwidth --\x3e\n      \x3c!-- labels --\x3e\n      <div class="form-group">\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">标签</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addLabel()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n          </span>\n        </div>\n        \x3c!-- labels-input-list --\x3e\n        <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n          <div ng-repeat="label in $ctrl.formValues.Labels" style="margin-top: 2px;">\n            <div class="input-group col-sm-5 input-group-sm">\n              <span class="input-group-addon">名称</span>\n              <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n            </div>\n            <div class="input-group col-sm-5 input-group-sm">\n              <span class="input-group-addon">参数值</span>\n              <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n            </div>\n            <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n              <i class="fa fa-trash" aria-hidden="true"></i>\n            </button>\n          </div>\n        </div>\n        \x3c!-- !labels-input-list --\x3e\n      </div>\n      \x3c!-- !labels --\x3e\n    </form>\n  </rd-widget-body>\n</rd-widget>')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(224),n(225),n(11),n(6),n(1),n(19),n(34),n(3);angular.module("portainer.docker").controller("VolumeStoridgeInfoController",["$state","StoridgeVolumeService","Notifications",function(e,t,n){var a=this;this.state={updateInProgress:!1,isUpdating:!1},this.addLabel=function(){this.formValues.Labels.push({name:"",value:""})},this.removeLabel=function(e){this.formValues.Labels.splice(e,1)},this.initLabels=function(){var e=this.volume.Labels;e&&(this.formValues.Labels=Object.keys(e).map(function(t){return{name:t,value:e[t]}}))},this.updateVolume=function(){this.state.updateInProgress=!0,this.formValues={IOPSMin:this.volume.IOPSMin,IOPSMax:this.volume.IOPSMax,Node:this.volume.Node,Capacity:this.volume.Capacity,BandwidthMin:this.volume.BandwidthMin,BandwidthMax:this.volume.BandwidthMax,Labels:[]},this.initLabels()},this.cancelUpdate=function(){this.state.updateInProgress=!1,this.formValues={}},this.prepareLabels=function(e){var t={};this.formValues.Labels.forEach(function(e){e.name&&e.value&&(t[e.name]=e.value)}),e.Labels=t},this.prepareVolume=function(){var e=angular.copy(this.formValues),t=this.volume;return e.Node!==t.Node&&e.Node||delete e.Node,e.Capacity!==t.Capacity&&e.Capacity||delete e.Capacity,e.IOPSMin!==t.IOPSMin&&e.IOPSMin?e.IOPSMin=e.IOPSMin.toString():delete e.IOPSMin,e.IOPSMax!==t.IOPSMax&&e.IOPSMax?e.IOPSMax=e.IOPSMax.toString():delete e.IOPSMax,e.BandwidthMin!==t.BandwidthMin&&e.BandwidthMin||delete e.BandwidthMin,e.BandwidthMax!==t.BandwidthMax&&e.BandwidthMax||delete e.BandwidthMax,this.prepareLabels(e),e},this.confirmUpdate=function(){this.state.isUpdating=!0;var r=this.prepareVolume();r.Name=this.volume.Name,t.update(r).then(function(){n.success("已成功更新卷"),e.reload()}).catch(function(e){n.error("失败",e,"无法更新卷"),a.state.isUpdating=!1})}}])},function(e,t,n){"use strict";n.r(t);n(18);var a=n(28);angular.module("extension.storidge").filter("drivestatusbadge",function(){return function(e){var t=e?Object(a.a)(e):"";return"available"===t?"info":"faulty"===t?"danger":"success"}}).filter("storidgeNodeStatusBadge",function(){return function(e){var t=e?Object(a.a)(e):"";return"cordoned"===t||"maintenance"===t?"orange-icon":"leaving"===t||"failed"===t?"red-icon":"green-icon"}}).filter("storidgeClusterConditionBadge",function(){return function(e){var t=e?Object(a.a)(e):"";return"alert"===t?"red-icon":"warning"===t?"orange-icon":"green-icon"}}).filter("bytes",function(){return function(e,t){if(e=parseFloat(e),isNaN(e)||!isFinite(e))return"-";t||(t=1);var n=Math.floor(Math.log(e)/Math.log(1024));return 0===e?"0 B":(e/Math.pow(1024,Math.floor(n))).toFixed(t)+" "+["B","kB","MB","GB","TB","PB"][n]}})},function(e,t){angular.module("extension.storidge").factory("Storidge",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(e,t,n){"use strict";return e(t+"/:endpointId/storidge/:resource/:id/:action",{endpointId:n.endpointID},{rebootCluster:{method:"POST",params:{resource:"clusters",action:"reboot"}},shutdownCluster:{method:"POST",params:{resource:"clusters",action:"shutdown"}},queryEvents:{method:"GET",params:{resource:"clusters",action:"events"},timeout:4500,ignoreLoadingBar:!0,isArray:!0},getVersion:{method:"GET",params:{resource:"clusters",action:"version"}},getInfo:{method:"GET",params:{resource:"clusters",action:"info"},timeout:4500,ignoreLoadingBar:!0},queryNodes:{method:"GET",params:{resource:"nodes"}},getNode:{method:"GET",params:{resource:"nodes",id:"@id"}},addNode:{method:"POST",params:{resource:"nodes"}},removeNode:{method:"DELETE",params:{resource:"nodes",id:"@id"}},cordonNode:{method:"POST",params:{resource:"nodes",action:"cordon",id:"@id"}},uncordonNode:{method:"POST",params:{resource:"nodes",action:"uncordon",id:"@id"}},queryProfiles:{method:"GET",params:{resource:"profiles"}},getProfile:{method:"GET",params:{resource:"profiles"}},createProfile:{method:"POST",params:{resource:"profiles"}},updateProfile:{method:"PUT",params:{resource:"profiles",id:"@name"}},deleteProfile:{method:"DELETE",params:{resource:"profiles"}},queryDrives:{method:"GET",params:{resource:"drives"}},getDrive:{method:"GET",params:{resource:"drives",id:"@id"}},addDrive:{method:"POST",params:{resource:"drives"}},removeDrive:{method:"DELETE",params:{resource:"drives",id:"@id"}},rescanDrives:{method:"POST",params:{resource:"drives",action:"rescan"}},queryVolumes:{method:"GET",params:{resource:"volumes"}},createVolume:{method:"POST",params:{resource:"volumes"}},getVolume:{method:"GET",params:{resource:"volumes",id:"@id"}},updateVolume:{method:"POST",params:{resource:"volumes",id:"@name"}},removeVolume:{method:"DELETE",params:{resource:"volumes",id:"@id"}},querySnapshots:{method:"GET",params:{resource:"volumes",id:"@id",action:"snapshots"}},createSnapshot:{method:"POST",params:{resource:"volumes",id:"@id",action:"snapshot"}},getSnapshot:{method:"GET",params:{resource:"snapshots",id:"@id"}},removeSnapshot:{method:"DELETE",params:{resource:"snapshots",id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);n(5);var a=n(79),r=n.n(a),i=n(64),o=n.n(i);angular.module("extension.storidge").factory("StoridgeChartService",[function(){var e={};function t(e){return e>5?o()(e,{base:10,round:1}):e.toFixed(1)+"B/s"}return e.CreateCapacityChart=function(e){return new r.a(e,{type:"doughnut",data:{datasets:[{data:[],backgroundColor:["rgba(171, 213, 255, 0.7)","rgba(229, 57, 53, 0.7)"]}],labels:[]},options:{tooltips:{callbacks:{label:function(e,t){var n=t.datasets[e.datasetIndex],a=t.labels[e.index],r=n.data[e.index];return a+": "+o()(r,{base:10,round:1})}}},animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,hover:{animationDuration:0}}})},e.CreateIOPSChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"IOPS",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:"nearest"},hover:{animationDuration:0},scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}})},e.CreateBandwidthChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"Bandwidth",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:"nearest",callbacks:{label:function(e,t){return function(e,t){var n=0;n=t>5?o()(t,{base:10,round:1}):t.toFixed(1)+"B";return e+": "+n+"/s"}(t.datasets[e.datasetIndex].label,e.yLabel)}}},hover:{animationDuration:0},scales:{yAxes:[{ticks:{beginAtZero:!0,callback:t}}]}}})},e.UpdateChart=function(e,t,n){n.data.labels.push(e),n.data.datasets[0].data.push(t),n.data.datasets[0].data.length>600&&(n.data.labels.pop(),n.data.datasets[0].data.pop()),n.update(0)},e.UpdatePieChart=function(e,t,n){var a=n.data.labels.indexOf(e);a>-1?n.data.datasets[0].data[a]=t:(n.data.labels.push(e),n.data.datasets[0].data.push(t)),n.update(0)},e}])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);n(3);var a=n(255),r=n(254);angular.module("extension.storidge").factory("StoridgeClusterService",["$q","Storidge",function(e,t){var n={reboot:function(){return t.rebootCluster().$promise},shutdown:function(){return t.shutdownCluster().$promise},info:function(){var n=e.defer();return t.getInfo().$promise.then(function(e){var t=new a.StoridgeInfoModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索存储信息",err:e})}),n.promise},version:function(){var n=e.defer();return t.getVersion().$promise.then(function(e){var t=e.version;n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索存储版本",err:e})}),n.promise},events:function(){var n=e.defer();return t.queryEvents().$promise.then(function(e){var t=e.map(function(e){return new r.StoridgeEventModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索存储事件",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(11),n(3);var a=n(192);angular.module("extension.storidge").factory("StoridgeDriveService",["$q","Storidge",function(e,t){var n={drives:function(){var n=e.defer();return t.queryDrives().$promise.then(function(e){var t=e.drives.map(function(e){return new a.StoridgeDriveModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索Storidge驱动和设备",err:e})}),n.promise},drive:function(n){var r=e.defer();return t.getDrive({id:n}).$promise.then(function(e){var n=new a.StoridgeDriveModel(e);t.getNode({id:e.nodeid}).$promise.then(function(e){n.Node=e.name,r.resolve(n)})}).catch(function(e){r.reject({msg:"无法检索Storidge驱动和设备",err:e})}),r.promise},add:function(n,a){var r=e.defer();return t.addDrive({device:n,node:a}).$promise.then(function(){r.resolve()}).catch(function(e){r.reject({msg:"无法添加Storidge驱动和设备",err:e})}),r.promise},remove:function(n){var a=e.defer();return t.removeDrive({id:n}).$promise.then(function(){a.resolve()}).catch(function(e){a.reject({msg:"无法删除Storidge驱动和设备",err:e})}),a.promise},rescan:function(){return t.rescanDrives().$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(11);var a=n(193);angular.module("extension.storidge").factory("StoridgeNodeService",["$q","Storidge",function(e,t){var n={nodes:function(){var n=e.defer();return t.queryNodes().$promise.then(function(e){var t=e.nodes,r=[];for(var i in t)t.hasOwnProperty(i)&&r.push(new a.StoridgeNodeModel(i,t[i]));n.resolve(r)}).catch(function(e){n.reject({msg:"无法检索Storidge节点",err:e})}),n.promise},node:function(n){var r=e.defer();return t.getNode({id:n}).$promise.then(function(e){var t=new a.StoridgeNodeDetailedModel(e.name,e.properties);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索Storidge节点",err:e})}),r.promise},add:function(){return t.addNode().$promise},cordon:function(e){return t.cordonNode({id:e}).$promise},uncordon:function(e){return t.uncordonNode({id:e}).$promise},remove:function(e){return t.removeNode({id:e}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(54);angular.module("extension.storidge").factory("StoridgeProfileService",["$q","Storidge",function(e,t){var n={create:function(e){var n=new a.StoridgeCreateProfileRequest(e);return t.createProfile(n).$promise},update:function(e){var n=new a.StoridgeCreateProfileRequest(e);return t.updateProfile(n).$promise},delete:function(e){return t.deleteProfile({id:e}).$promise},profile:function(n){var r=e.defer();return t.getProfile({id:n}).$promise.then(function(e){var t=new a.StoridgeProfileModel(n,e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索存储配置详细信息",err:e})}),r.promise},profiles:function(){var n=e.defer();return t.queryProfiles().$promise.then(function(e){var t=e.profiles.map(function(e){return new a.StoridgeProfileListModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索存储配置",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(194);angular.module("extension.storidge").factory("StoridgeSnapshotService",["$q","Storidge",function(e,t){var n={};return n.snapshots=function(n){var r=e.defer();return t.querySnapshots({id:n}).$promise.then(function(e){var t=e.snapshots,n=[];for(var i in t)t.hasOwnProperty(i)&&n.push(t[i]);var o=n.map(function(e){return new a.StoridgeSnapshotModel(e)});r.resolve(o)}).catch(function(e){r.reject({msg:"无法检索Storidge快照",err:e})}),r.promise},n.snapshot=function(n){var r=e.defer();return t.getSnapshot({id:n}).$promise.then(function(e){var t=new a.StoridgeSnapshotModel(e.snapshot);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索Storidge快照",err:e})}),r.promise},n.create=function(n,a){var r=e.defer();return t.createSnapshot({id:n,opts:{description:a}}).$promise.then(function(e){r.resolve(e)}).catch(function(e){r.reject({msg:"无法创建Storidge卷快照",err:e})}),r.promise},n.remove=function(n){var a=e.defer();return t.removeSnapshot({id:n}).$promise.then(function(){a.resolve()}).catch(function(e){a.reject({msg:"无法删除Storidge卷快照",err:e})}),a.promise},n}])},function(e,t,n){"use strict";n.r(t);var a=n(195);angular.module("extension.storidge").factory("StoridgeVolumeService",["$q","Storidge",function(e,t){var n={volume:function(n){var r=e.defer();return t.getVolume({id:n}).$promise.then(function(e){var t=new a.StoridgeVolumeModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索Storidge卷",err:e})}),r.promise},update:function(n){var r=e.defer(),i=new a.StoridgeVolumeUpdateModel(n);return t.updateVolume(i).$promise.then(function(e){r.resolve(e)}).catch(function(e){r.reject({msg:"无法更新Storidge卷",err:e})}),r.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("extension.storidge").controller("StoridgeClusterController",["$q","$scope","$state","Notifications","StoridgeClusterService","StoridgeNodeService","ModalService",function(e,t,n,a,r,i,o){t.state={shutdownInProgress:!1,rebootInProgress:!1},t.rebootCluster=function(){o.confirm({title:"您确定吗？",message:"集群中的所有节点都将在此过程中重新启动，您想重启存储集群吗？",buttons:{confirm:{label:"重启",className:"btn-danger"}},callback:function(e){e&&(t.state.rebootInProgress=!0,r.reboot().finally(function(){t.state.rebootInProgress=!1,a.success("已成功重启群集"),n.reload()}))}})},t.shutdownCluster=function(){o.confirm({title:"您确定吗？",message:"群集中的所有节点都将关闭，您是否要关闭存储群集？",buttons:{confirm:{label:"关闭",className:"btn-danger"}},callback:function(e){e&&(t.state.shutdownInProgress=!0,r.shutdown().finally(function(){t.state.shutdownInProgress=!1,a.success("已成功关闭集群"),n.go("docker.dashboard")}))}})},e.all({info:r.info(),version:r.version(),nodes:i.nodes()}).then(function(e){t.clusterInfo=e.info,t.clusterVersion=e.version,t.clusterNodes=e.nodes}).catch(function(e){a.error("失败",e,"无法检索集群详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("extension.storidge").controller("StoridgeDrivesController",["$scope","$state","Notifications","StoridgeDriveService",function(e,t,n,a){e.state={additionInProgress:[],actionInProgress:!1},e.addAction=function(r,i){e.state.additionInProgress[i]=!0,e.state.actionInProgress=!0,a.add(r.Device,r.Node).then(function(){n.success("驱动/设备 "+r.Device+" 已成功添加到节点 "+r.Node),t.reload()}).catch(function(e){n.error("设备",e,"无法添加驱动/设备")}).finally(function(){e.state.additionInProgress[i]=!1,e.state.actionInProgress=!1})},e.rescanAction=function(){a.rescan().then(function(){t.reload()}).catch(function(e){n.error("设备",e,"无法扫描驱动/设备")})},a.drives().then(function(t){e.drives=t}).catch(function(e){n.error("设备",e,"无法检索驱动/设备")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("extension.storidge").controller("StoridgeDriveController",["$scope","$state","$transition$","Notifications","ModalService","StoridgeDriveService",function(e,t,n,a,r,i){e.actionInProgress=!1,e.removeDrive=function(){r.confirm({title:"你确定吗？",message:"你是否真的想要从存储池中删除此驱动器？",buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:function(n){n&&(e.actionInProgress=!0,i.remove(e.drive.Id).then(function(){a.success("成功","已从存储池中删除驱动器"),t.go("storidge.drives",{},{reload:!0})}).catch(function(e){a.error("失败",e,"无法从存储池中删除驱动器")}).finally(function(){e.actionInProgress=!1}))}})},e.id=n.params().id,i.drive(e.id).then(function(t){e.drive=t}).catch(function(e){a.error("失败",e,"无法检索驱动器详细信息")})}])},function(e,t,n){"use strict";n.r(t),function(e){var t=n(2),a=n.n(t);angular.module("extension.storidge").controller("StoridgeMonitorController",["$q","$scope","$interval","$document","Notifications","StoridgeClusterService","StoridgeChartService",function(t,n,r,i,o,s,l){function c(){var e=n.repeater;angular.isDefined(e)&&(r.cancel(e),e=null)}function d(e,t){var n=e.UsedIOPS,r=a()(new Date).format("HH:mm:ss");l.UpdateChart(r,n,t)}function p(e,t){var n=e.UsedBandwidth,r=a()(new Date).format("HH:mm:ss");l.UpdateChart(r,n,t)}function u(e,t){var n=e.UsedCapacity,a=e.FreeCapacity;l.UpdatePieChart("Free",a,t),l.UpdatePieChart("Used",n,t)}function m(e,a,i){t.all({events:s.events(),info:s.info()}).then(function(l){n.events=l.events;var m=l.info;n.info=m,d(m,e),p(m,a),u(m,i),function(e,a,i){n.repeater=r(function(){t.all({events:s.events(),info:s.info()}).then(function(t){n.events=t.events;var r=t.info;n.info=r,d(r,e),p(r,a),u(r,i)}).catch(function(e){c(),o.error("失败",e,"无法检索集群详细信息")})},5e3)}(e,a,i)}).catch(function(e){c(),o.error("失败",e,"无法检索集群详细信息")})}n.$on("$destroy",function(){c()}),i.ready(function(){var t,n,a,r,i;t=e("#iopsChart"),n=l.CreateIOPSChart(t),a=e("#bandwithChart"),r=l.CreateBandwidthChart(a),i=e("#capacityChart"),m(n,r,l.CreateCapacityChart(i))})}])}.call(this,n(30))},function(e,t,n){"use strict";n.r(t);n(11),n(0);angular.module("extension.storidge").controller("StoridgeNodeController",["$scope","$state","$transition$","Notifications","StoridgeNodeService","ModalService",function(e,t,n,a,r,i){e.removeNodeAction=function(n){i.confirm({title:"你确定吗？",message:"你是否真的想要从群集中删除节点？",buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:function(n){n&&r.remove(e.node.Name).then(function(){a.success("已成功删除节点",e.node.Name),t.go("storidge.cluster")}).catch(function(e){a.error("失败",e,"无法删除节点")})}})},e.cordonNodeAction=function(n){i.confirm({title:"你确定吗？",message:"你是否真的想要将节点置于维护模式？",buttons:{confirm:{label:"进入维护模式",className:"btn-danger"}},callback:function(n){n&&r.cordon(e.node.Name).then(function(){a.success("节点已成功进入维护模式")}).catch(function(e){a.error("失败",e,"节点无法进入维护模式")}).finally(function(){t.reload()})}})},e.uncordonNodeAction=function(n){i.confirm({title:"你确定吗？",message:"你是否真的想让节点退出维护模式？",buttons:{confirm:{label:"退出维护模式",className:"btn-danger"}},callback:function(n){n&&r.uncordon(e.node.Name).then(function(){a.success("节点已成功恢复")}).catch(function(e){a.error("失败",e,"节点无法从维护模式恢复到正常状态")}).finally(function(){t.reload()})}})},e.name=n.params().name,r.node(e.name).then(function(t){e.node=t}).catch(function(e){a.error("失败",e,"无法检索节点详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(0),n(11),n(1),n(6);var a=n(28),r=n(54);angular.module("extension.storidge").controller("StoridgeCreateProfileController",["$scope","$state","$transition$","Notifications","StoridgeProfileService",function(e,t,n,i,o){var s;e.formValues={Labels:[]},e.state={NoLimit:!0,LimitIOPS:!1,LimitBandwidth:!1,ManualInputDirectory:!1,actionInProgress:!1},e.RedundancyOptions=[{value:2,label:"2-copy"},{value:3,label:"3-copy"}],e.addLabel=function(){e.formValues.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.create=function(){var n=e.model;e.state.LimitIOPS||(delete n.MinIOPS,delete n.MaxIOPS),e.state.LimitBandwidth||(delete n.MinBandwidth,delete n.MaxBandwidth),n.SnapshotEnabled?((!n.SnapshotMax||n.SnapshotMax<=0)&&(n.SnapshotMax=1),e.state.RecurringSnapshotEnabled||delete n.SnapshotInterval,e.state.RecurringSnapshotEnabled&&(!n.SnapshotInterval||n.SnapshotInterval<=0)&&(n.SnapshotInterval=1440)):(delete n.SnapshotMax,delete n.SnapshotInterval),function(t){var n={};e.formValues.Labels.forEach(function(e){e.name&&e.value&&(n[e.name]=e.value)}),t.Labels=n}(n),e.state.actionInProgress=!0,o.create(n).then(function(){i.success("已成功创建配置"),t.go("storidge.profiles")}).catch(function(e){i.error("失败",e,"无法创建配置")}).finally(function(){e.state.actionInProgress=!1})},e.updatedName=function(){if(!e.state.ManualInputDirectory){var t=e.model;t.Directory="/cio/"+(t.Name?Object(a.a)(t.Name):"")}},e.updatedDirectory=function(){e.state.ManualInputDirectory||(e.state.ManualInputDirectory=!0)},(s=new r.StoridgeProfileDefaultModel).Name=n.params().profileName,s.Directory=s.Directory+Object(a.a)(s.Name),e.model=s}])},function(e,t,n){"use strict";n.r(t);n(0),n(19),n(34),n(3),n(11),n(1),n(6);angular.module("extension.storidge").controller("StoridgeProfileController",["$scope","$state","$transition$","Notifications","StoridgeProfileService","ModalService",function(e,t,n,a,r,i){e.formValues={Labels:[]},e.state={NoLimit:!1,LimitIOPS:!1,LimitBandwidth:!1,updateInProgress:!1,deleteInProgress:!1,RecurringSnapshotEnabled:!1},e.addLabel=function(){e.formValues.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.formValues.Labels.splice(t,1)},e.RedundancyOptions=[{value:2,label:"2-copy"},{value:3,label:"3-copy"}],e.update=function(){var n=e.profile;e.state.LimitIOPS||(delete n.MinIOPS,delete n.MaxIOPS),e.state.LimitBandwidth||(delete n.MinBandwidth,delete n.MaxBandwidth),n.SnapshotEnabled?((!n.SnapshotMax||n.SnapshotMax<=0)&&(n.SnapshotMax=1),e.state.RecurringSnapshotEnabled||delete n.SnapshotInterval,e.state.RecurringSnapshotEnabled&&(!n.SnapshotInterval||n.SnapshotInterval<=0)&&(n.SnapshotInterval=1440)):(delete n.SnapshotMax,delete n.SnapshotInterval),function(t){var n={};e.formValues.Labels.forEach(function(e){e.name&&e.value&&(n[e.name]=e.value)}),t.Labels=n}(n),e.state.updateInProgress=!0,r.update(n).then(function(){a.success("已成功更新配置"),t.go("storidge.profiles")}).catch(function(e){a.error("失败",e,"无法更新配置")}).finally(function(){e.state.updateInProgress=!1})},e.delete=function(){i.confirmDeletion("您要删除这个配置吗?",function(n){var i;n&&(i=e.profile,e.state.deleteInProgress=!0,r.delete(i.Name).then(function(){a.success("已成功删除配置"),t.go("storidge.profiles")}).catch(function(e){a.error("失败",e,"无法删除配置")}).finally(function(){e.state.deleteInProgress=!1}))})},r.profile(n.params().id).then(function(t){var n,a=t;a.MinIOPS&&0!==a.MinIOPS||a.MaxIOPS&&0!==a.MaxIOPS?e.state.LimitIOPS=!0:a.MinBandwidth&&0!==a.MinBandwidth||a.MaxBandwidth&&0!==a.MaxBandwidth?e.state.LimitBandwidth=!0:e.state.NoLimit=!0,a.SnapshotEnabled&&0!==a.SnapshotInterval&&(e.state.RecurringSnapshotEnabled=!0),n=a.Labels,e.formValues.Labels=Object.keys(n).map(function(e){return{name:e,value:n[e]}}),e.profile=a}).catch(function(e){a.error("失败",e,"无法检索配置详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);var a=n(28),r=n(54);angular.module("extension.storidge").controller("StoridgeProfilesController",["$q","$scope","$state","Notifications","StoridgeProfileService",function(e,t,n,i,o){t.state={actionInProgress:!1},t.formValues={Name:""},t.removeAction=function(e){var a=e.length;angular.forEach(e,function(e){o.delete(e.Name).then(function(){i.success("已成功删除配置",e.Name);var n=t.profiles.indexOf(e);t.profiles.splice(n,1)}).catch(function(e){i.error("失败",e,"无法删除配置")}).finally(function(){0===--a&&n.reload()})})},t.create=function(){var e=new r.StoridgeProfileDefaultModel;e.Labels={},e.Name=t.formValues.Name,e.Directory=e.Directory+Object(a.a)(e.Name),delete e.MinBandwidth,delete e.MaxBandwidth,delete e.MinIOPS,delete e.MaxIOPS,t.state.actionInProgress=!0,o.create(e).then(function(){i.success("已成功创建配置"),n.reload()}).catch(function(e){i.error("失败",e,"无法创建配置")}).finally(function(){t.state.actionInProgress=!1})},o.profiles().then(function(e){t.profiles=e}).catch(function(e){i.error("失败",e,"无法检索配置")})}])},function(e,t){angular.module("extension.storidge").controller("StoridgeSnapshotController",["$scope","$state","$transition$","Notifications","ModalService","StoridgeSnapshotService",function(e,t,n,a,r,i){e.removeSnapshot=function(){r.confirm({title:"你确定吗？",message:"你想要真的删除这个快照吗？",buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:function(n){n&&i.remove(e.snapshot.Id).then(function(){a.success("成功","快照已删除"),t.go("portainer.volumes.volume",{id:e.volumeId})}).catch(function(e){a.error("设备",e,"无法删除快照")})}})},e.volumeId=n.params().id,e.snapshotId=n.params().snapshotId,i.snapshot(e.snapshotId).then(function(t){e.snapshot=t}).catch(function(e){a.error("失败",e,"无法检索快照详细信息")})}])},function(e,t,n){var a=n(888);angular.module("portainer.app").component("accessDatatable",{templateUrl:a,controller:"AccessDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",roles:"<",tableKey:"@",orderBy:"@",removeAction:"<",updateAction:"<",reverseOrder:"<",rbacEnabled:"<",inheritFrom:"<"}})},function(e,t){var n="app/portainer/components/access-datatable/accessDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-header icon="{{$ctrl.titleIcon}}" title-text="{{ $ctrl.titleText }}">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar small" ng-if="$ctrl.inheritFrom">\n          被标记为 <code>inherited (继承)</code> 的访问控制将继承来自组的访问权限。它们不能\n          在节点级别下被删除或修改，但可以被覆盖。\n      </div>\n      <div class="toolBar small" ng-if="$ctrl.inheritFrom">\n        被标记为 <code>override (覆盖)</code> 的访问控制将覆盖相关的用户或用户组权限。\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger" ng-disabled="$ctrl.state.selectedItemCount === 0"\n          ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button ng-if="$ctrl.rbacEnabled" type="button" class="btn btn-sm btn-primary" ng-disabled="($ctrl.dataset | filter:{ Updated: true}).length === 0 "\n          ng-click="$ctrl.updateAction()">\n          <i class="fa fa-check space-right" aria-hidden="true"></i>更新\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()"\n          placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll"\n                    ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  类型\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th ng-if="$ctrl.rbacEnabled">\n                <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true"\n                    ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit)) track by $index"\n              ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-disabled="item.Inherited"\n                    ng-change="$ctrl.selectItem(item)" />\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Name }}\n                <span ng-if="item.Inherited" class="text-muted small" style="margin-left: 2px;"><code\n                    style="font-size: 85% !important;">inherited (继承)</code></span>\n                <span ng-if="item.Override" class="text-muted small" style="margin-left: 2px;"><code\n                  style="font-size: 85% !important;">override (覆盖)</code></span>\n              </td>\n              <td>{{ item.Type }}</td>\n              <td ng-if="$ctrl.rbacEnabled">\n                <span ng-if="!item.Updated">\n                  {{ item.Role.Name }}\n                  <a ng-if="!item.Inherited" class="interactive" ng-click="item.Updated = true; item.OldRole = item.Role; $event.stopPropagation();">\n                    <i class="fa fa-edit" aria-hidden="true"></i> 编辑\n                  </a>\n                </span>\n                <span ng-if="item.Updated">\n                  <select ng-model="item.Role"\n                    ng-options="role.Name for role in $ctrl.roles">\n                  </select>\n                  <a class="interactive" ng-click="item.Updated = false; item.Role = item.OldRole; item.OldRole = null; $event.stopPropagation();"><i class="fa fa-times"></i></a>\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">没有已授权的用户或用户组。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit"\n                ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("AccessDatatableController",["$scope","$controller",function(e,t){angular.extend(this,t("GenericDatatableController",{$scope:e})),this.disableRemove=function(e){return e.Inherited},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];this.disableRemove(t)||t.Checked===this.state.selectAll||(t.Checked=this.state.selectAll,this.selectItem(t))}}}])},function(e,t,n){var a=n(891);angular.module("portainer.app").component("accessTable",{templateUrl:a,controller:function(){this.state={orderBy:"Name",reverseOrder:!1,paginatedItemLimit:"10",textFilter:""},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e}},bindings:{dataset:"<",entryClick:"<",emptyDatasetMessage:"@"}})},function(e,t){var n="app/portainer/components/access-table/accessTable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <table class="table table-hover">\n    <div class="col-sm-12">\n      <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n      <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n    </div>\n    <thead>\n      <tr>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n            名称\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && !$ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-down"></span>\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && $ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n            类型\n            <span ng-show="$ctrl.state.orderBy == \'Type\' && !$ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-down"></span>\n            <span ng-show="$ctrl.state.orderBy == \'Type\' && $ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-click="!item.Inherited && $ctrl.entryClick(item)" ng-class="{ \'interactive\': !item.Inherited }" dir-paginate="item in $ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit">\n        <td>\n          {{ item.Name }}\n          \x3c!-- <span class="image-tag label label-">inherited</span> --\x3e\n          <span ng-if="item.Inherited" class="text-muted small" style="margin-left: 2px;"><code style="font-size: 85% !important;">继承</code></span>\n        </td>\n        <td>\n          <i class="fa" ng-class="item.Type === \'user\' ? \'fa-user\' : \'fa-users\'" aria-hidden="true" style="margin-right: 2px;"></i>\n          {{ item.Type }}\n        </td>\n      </tr>\n      <tr ng-if="!$ctrl.dataset">\n        <td colspan="2" class="text-center text-muted">载入中...</td>\n      </tr>\n      <tr ng-if="$ctrl.dataset.length === 0 || ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit).length === 0">\n        <td colspan="2" class="text-center text-muted">{{ $ctrl.emptyDatasetMessage }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div class="footer" ng-if="$ctrl.dataset">\n    <div class="paginationControls">\n      <form class="form-inline">\n        <span class="limitSelector">\n          <span style="margin-right: 5px;">\n            每页项目\n          </span>\n          <select ng-model="$ctrl.state.paginatedItemLimit">\n            <option value="0">全部</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </span>\n        <dir-pagination-controls max-size="5"></dir-pagination-controls>\n      </form>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(893);angular.module("portainer.app").component("porAccessControlForm",{templateUrl:a,controller:"porAccessControlFormController",bindings:{formData:"=",resourceControl:"<"}})},function(e,t){var n="app/portainer/components/accessControlForm/porAccessControlForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <div class="col-sm-12 form-section-title">\n    访问控制\n  </div>\n  \x3c!-- access-control-switch --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="ownership" class="control-label text-left">\n        启用访问控制\n        <portainer-tooltip position="bottom" message="启用后，您可以限制对该资源的访问和管理。"></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;">\n        <input name="ownership" type="checkbox" ng-model="$ctrl.formData.AccessControlEnabled"><i></i>\n      </label>\n    </div>\n  </div>\n  \x3c!-- !access-control-switch --\x3e\n  \x3c!-- restricted-access --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled" style="margin-bottom: 0">\n    <div class="boxselector_wrapper">\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_administrators" ng-model="$ctrl.formData.Ownership" value="administrators">\n        <label for="access_administrators">\n          <div class="boxselector_header">\n            <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            管理员\n          </div>\n          <p>我只想给管理员使用这个资源</p>\n        </label>\n      </div>\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted">\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            受限的\n          </div>\n          <p>\n            我想把这个资源的管理限制在一组用户或用户组中\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin">\n        <input type="radio" id="access_private" ng-model="$ctrl.formData.Ownership" value="private">\n        <label for="access_private">\n          <div class="boxselector_header">\n            <i ng-class="\'private\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            私有的\n          </div>\n          <p>\n            我希望这个资源只能由我自己管理\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 0">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted">\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            受限的\n          </div>\n          <p ng-if="$ctrl.availableTeams.length === 1">\n            我希望我的用户组的任何成员 (<b>{{ $ctrl.availableTeams[0].Name }}</b>) 能够管理此资源\n          </p>\n          <p ng-if="$ctrl.availableTeams.length > 1">\n            我想限制这个资源的管理到我的一个或多个用户组\n          </p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- restricted-access --\x3e\n  \x3c!-- authorized-teams --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === \'restricted\' && ($ctrl.isAdmin || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1))" >\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        授权用户组\n        <portainer-tooltip ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length > 0" position="bottom" message="您可以选择哪些用户组将能够管理此资源。"></portainer-tooltip>\n        <portainer-tooltip ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 1" position="bottom" message="由于您是多个用户组的成员，因此您可以选择哪个用户组能够管理此资源。"></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 20px;">\n        您还没有创建任何用户组，请通过<a ui-sref="portainer.teams">用户组视图</a>来管理用户组。\n      </span>\n      <span isteven-multi-select\n        ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n        input-model="$ctrl.availableTeams"\n        output-model="$ctrl.formData.AuthorizedTeams"\n        button-label="Name"\n        item-label="Name"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Name"\n        translation="{nothingSelected: \'选择一个或多个用户组\', search: \'搜索...\'}"\n        style="margin-left: 20px;">\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-teams --\x3e\n  \x3c!-- authorized-users --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === \'restricted\' && $ctrl.isAdmin">\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        授权用户\n        <portainer-tooltip ng-if="$ctrl.isAdmin && $ctrl.availableUsers.length > 0" position="bottom" message="您可以选择哪些用户能够管理这个资源。"></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 20px;">\n        您尚未创建任何用户，请通过<a ui-sref="portainer.users">用户视图</a>来管理用户。\n      </span>\n      <span isteven-multi-select\n        ng-if="$ctrl.availableUsers.length > 0"\n        input-model="$ctrl.availableUsers"\n        output-model="$ctrl.formData.AuthorizedUsers"\n        button-label="Username"\n        item-label="Username"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Username"\n        translation="{nothingSelected: \'选择一个或多个用户\', search: \'搜索...\'}"\n        style="margin-left: 20px;">\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-users --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(1),n(6);var a=n(4);angular.module("portainer.app").controller("porAccessControlFormController",["$q","UserService","TeamService","Notifications","Authentication","ResourceControlService",function(e,t,n,r,i,o){var s,l=this;l.availableTeams=[],l.availableUsers=[],s=i.isAdmin(),l.isAdmin=s,s&&(l.formData.Ownership="administrators"),e.all({availableTeams:n.teams(),availableUsers:s?t.users(!1):[]}).then(function(t){l.availableUsers=t.availableUsers;var n=t.availableTeams;return l.availableTeams=n,s||1!==n.length||(l.formData.AuthorizedTeams=n),e.when(l.resourceControl&&o.retrieveOwnershipDetails(l.resourceControl))}).then(function(e){if(e){var t=e.authorizedUsers,n=e.authorizedTeams;!function(e,t){t&&"private"===e.Ownership?l.formData.Ownership="restricted":l.formData.Ownership=e.Ownership}(l.resourceControl,s),function(e,t){angular.forEach(l.availableUsers,function(t){Object(a.a)(e,{Id:t.Id})&&(t.selected=!0)}),angular.forEach(l.availableTeams,function(e){Object(a.a)(t,{Id:e.Id})&&(e.selected=!0)})}(t,n)}}).catch(function(e){r.error("失败",e,"无法检索访问控制信息")})}])},function(e,t,n){var a=n(896);angular.module("portainer.app").component("porAccessControlPanel",{templateUrl:a,controller:"porAccessControlPanelController",bindings:{resourceId:"<",resourceControl:"=",resourceType:"<"}})},function(e,t){var n="app/portainer/components/accessControlPanel/porAccessControlPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12" ng-if="$ctrl.state.displayAccessControlPanel">\n    <rd-widget>\n      <rd-widget-header icon="fa-eye" title-text="访问控制"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            \x3c!-- ownership --\x3e\n            <tr>\n              <td>所有权</td>\n              <td>\n                <i ng-class="$ctrl.resourceControl.Ownership | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                <span ng-if="!$ctrl.resourceControl">\n                  管理员权限\n                  <portainer-tooltip message="此资源只能由管理员管理。" position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                </span>\n                <span ng-if="$ctrl.resourceControl">\n                  {{ $ctrl.resourceControl.Ownership }}\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'public\'" message="这个资源可以被任何有权访问这个节点的用户管理。" position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'private\'" message="此资源的管理权限仅限于单个用户。" position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'restricted\'" message="这个资源可以由一组受限制的用户或用户组来管理。" position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !ownership --\x3e\n            <tr ng-if="$ctrl.resourceControl.Type === 2 && $ctrl.resourceType === \'container\'">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                此资源上的访问控制从以下服务继承: <a ui-sref="docker.services.service({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip message="应用于服务的访问控制也适用于该服务的每个容器。" position="bottom" style="margin-left: 2px;"></portainer-tooltip>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.resourceControl.Type === 1 && $ctrl.resourceType === \'volume\'">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                此资源上的访问控制从以下容器继承: <a ui-sref="docker.containers.container({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip message="对使用应用模板创建的容器应用的访问控制也适用于与容器关联的每个存储卷。" position="bottom" style="margin-left: 2px;"></portainer-tooltip>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.resourceControl.Type === 6 && $ctrl.resourceType !== \'stack\'">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                这个资源的访问控制从下面堆栈继承: {{ $ctrl.resourceControl.ResourceId }}\n                <portainer-tooltip message="应用于堆栈的访问控制也应用于堆栈中的每个资源。" position="bottom" style="margin-left: 2px;"></portainer-tooltip>\n              </td>\n            </tr>\n            \x3c!-- authorized-users --\x3e\n            <tr ng-if="$ctrl.resourceControl.UserAccesses.length > 0">\n              <td>授权用户</td>\n              <td>\n                <span ng-repeat="user in $ctrl.authorizedUsers">{{user.Username}}{{$last ? \'\' : \', \'}} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-users --\x3e\n            \x3c!-- authorized-teams --\x3e\n            <tr ng-if="$ctrl.resourceControl.TeamAccesses.length > 0">\n              <td>授权用户组</td>\n              <td>\n                <span ng-repeat="team in $ctrl.authorizedTeams">{{team.Name}}{{$last ? \'\' : \', \'}} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-teams --\x3e\n            \x3c!-- edit-ownership --\x3e\n            <tr ng-if="!($ctrl.resourceControl.Type === 1 && $ctrl.resourceType === \'volume\')\n            && !($ctrl.resourceControl.Type === 2 && $ctrl.resourceType === \'container\')\n            && !($ctrl.resourceControl.Type === 6 && $ctrl.resourceType !== \'stack\')\n            && !$ctrl.state.editOwnership\n            && ($ctrl.isAdmin || $ctrl.state.canEditOwnership)">\n              <td colspan="2">\n                <a ng-click="$ctrl.state.editOwnership = true"><i class="fa fa-edit space-right" aria-hidden="true"></i>改变所有权</a>\n              </td>\n            </tr>\n            \x3c!-- !edit-ownership --\x3e\n            \x3c!-- edit-ownership-choices --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2" style="white-space: inherit;">\n                <div class="boxselector_wrapper">\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_administrators" ng-model="$ctrl.formValues.Ownership" value="administrators">\n                    <label for="access_administrators">\n                      <div class="boxselector_header">\n                        <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        管理员\n                      </div>\n                      <p>我只想给管理员使用这个资源</p>\n                    </label>\n                  </div>\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" value="restricted">\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        受限的\n                      </div>\n                      <p>\n                        我想把这个资源的管理限制在一组用户或用户组中\n                      </p>\n                    </label>\n                  </div>\n                  <div ng-if="!$ctrl.isAdmin && $ctrl.state.canChangeOwnershipToTeam && $ctrl.availableTeams.length > 0">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" value="restricted">\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        受限的\n                      </div>\n                      <p ng-if="$ctrl.availableTeams.length === 1">\n                        我希望我用户组的任何成员 (<b>{{ $ctrl.availableTeams[0].Name }}</b>) 能够管理此资源\n                      </p>\n                      <p ng-if="$ctrl.availableTeams.length > 1">\n                        我想限制这个资源的管理到一个或多个我的用户组\n                      </p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="access_public" ng-model="$ctrl.formValues.Ownership" value="public">\n                    <label for="access_public">\n                      <div class="boxselector_header">\n                        <i ng-class="\'public\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        公共的\n                      </div>\n                      <p>我希望有权访问此节点的任何用户能够管理此资源</p>\n                    </label>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- edit-ownership-choices --\x3e\n            \x3c!-- select-teams --\x3e\n            <tr ng-if="$ctrl.state.editOwnership && $ctrl.formValues.Ownership === \'restricted\' && ($ctrl.isAdmin || !$ctrl.isAdmin && $ctrl.availableTeams.length > 1)">\n              <td colspan="2">\n                <span>用户组</span>\n                <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  您还没有创建任何团队。通过<a ui-sref="portainer.teams">用户组视图</a>来管理用户组。\n                </span>\n                <span isteven-multi-select\n                  ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n                  input-model="$ctrl.availableTeams"\n                  output-model="$ctrl.formValues.Ownership_Teams"\n                  button-label="Name"\n                  item-label="Name"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Name"\n                  max-labels="3"\n                  translation="{nothingSelected: \'选择一个或多个用户组\', search: \'搜索...\'}">\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-teams --\x3e\n            \x3c!-- select-users --\x3e\n            <tr ng-if="$ctrl.isAdmin && $ctrl.state.editOwnership && $ctrl.formValues.Ownership === \'restricted\'">\n              <td colspan="2">\n                <span>用户</span>\n                <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  您尚未创建任何用户，请通过<a ui-sref="portainer.users">用户视图</a>来管理用户。\n                </span>\n                <span isteven-multi-select\n                  ng-if="$ctrl.availableUsers.length > 0"\n                  input-model="$ctrl.availableUsers"\n                  output-model="$ctrl.formValues.Ownership_Users"\n                  button-label="Username"\n                  item-label="Username"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Username"\n                  max-labels="3"\n                  translation="{nothingSelected: \'选择一个或多个用户\', search: \'搜索...\'}">\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-users --\x3e\n            \x3c!-- ownership-actions --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2">\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.state.editOwnership = false">取消</a>\n                  <a type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.confirmUpdateOwnership()">更新所有权</a>\n                  <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">{{ $ctrl.state.formValidationError }}</span>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- !ownership-actions --\x3e\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(1),n(6);var a=n(4);angular.module("portainer.app").controller("porAccessControlPanelController",["$q","$state","UserService","TeamService","ResourceControlService","Notifications","Authentication","ModalService","FormValidator",function(e,t,n,r,i,o,s,l,c){var d=this;d.state={displayAccessControlPanel:!1,canEditOwnership:!1,editOwnership:!1,formValidationError:""},d.formValues={Ownership:"administrators",Ownership_Users:[],Ownership_Teams:[]},d.authorizedUsers=[],d.availableUsers=[],d.authorizedTeams=[],d.availableTeams=[],d.confirmUpdateOwnership=function(){(function(){d.state.formValidationError="";var e="",t={AccessControlEnabled:"public"!==d.formValues.Ownership,Ownership:d.formValues.Ownership,AuthorizedUsers:d.formValues.Ownership_Users,AuthorizedTeams:d.formValues.Ownership_Teams},n=d.isAdmin;if(e=c.validateAccessControl(t,n))return d.state.formValidationError=e,!1;return!0})()&&l.confirmAccessControlUpdate(function(e){var n,a;e&&(n=d.resourceId,a=function(){var e=[];angular.forEach(d.formValues.Ownership_Users,function(t){e.push(t.Id)});var t=[];angular.forEach(d.formValues.Ownership_Teams,function(e){t.push(e.Id)});var n="public"===d.formValues.Ownership;return{ownership:d.formValues.Ownership,authorizedUserIds:n?[]:e,authorizedTeamIds:n?[]:t,publicOnly:n}}(),i.applyResourceControlChange(d.resourceType,n,d.resourceControl,a).then(function(){o.success("已成功更新访问控制"),t.reload()}).catch(function(e){o.error("失败",e,"无法更新访问控制")}))})},function(){var t=s.getUserDetails(),l=s.isAdmin(),c=t.ID;d.isAdmin=l;var p=d.resourceControl;d.formValues.Ownership=l&&p?"private"===p.Ownership?"restricted":p.Ownership:"administrators",i.retrieveOwnershipDetails(p).then(function(e){return d.authorizedUsers=e.authorizedUsers,d.authorizedTeams=e.authorizedTeams,i.retrieveUserPermissionsOnResource(c,l,p)}).then(function(t){return d.state.canEditOwnership=t.isPartOfRestrictedUsers||t.isLeaderOfAnyRestrictedTeams,d.state.canChangeOwnershipToTeam=t.isPartOfRestrictedUsers,e.all({availableUsers:l?n.users(!1):[],availableTeams:l||t.isPartOfRestrictedUsers?r.teams():[]})}).then(function(e){d.availableUsers=e.availableUsers,angular.forEach(d.availableUsers,function(e){Object(a.a)(d.authorizedUsers,{Id:e.Id})&&(e.selected=!0)}),d.availableTeams=e.availableTeams,angular.forEach(e.availableTeams,function(e){Object(a.a)(d.authorizedTeams,{Id:e.Id})&&(e.selected=!0)}),1===e.availableTeams.length&&d.formValues.Ownership_Teams.push(e.availableTeams[0]),d.state.displayAccessControlPanel=!0}).catch(function(e){o.error("失败",e,"无法检索访问控制信息")})}()}])},function(e,t,n){var a=n(899);angular.module("portainer.app").component("porAccessManagement",{templateUrl:a,controller:"porAccessManagementController",controllerAs:"ctrl",bindings:{accessControlledEntity:"<",inheritFrom:"<",entityType:"@",updateAccess:"<",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/accessManagement/porAccessManagement.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget ng-if="ctrl.availableUsersAndTeams && ctrl.accessControlledEntity">\n      <rd-widget-header icon="fa-user-lock" title-text="访问管理"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <label class="col-sm-3 col-lg-2 control-label text-left">\n              选择用户或用户组\n            </label>\n            <div class="col-sm-9 col-lg-4">\n              <span class="small text-muted" ng-if="ctrl.availableUsersAndTeams.length === 0">\n                没有可用的用户或用户组。\n              </span>\n              <span isteven-multi-select ng-if="ctrl.availableUsersAndTeams.length > 0" input-model="ctrl.availableUsersAndTeams"\n                output-model="ctrl.formValues.multiselectOutput" button-label="icon \'-\' Name" item-label="icon \'-\' Name"\n                tick-property="ticked" helper-elements="filter" search-property="Name"\n                translation="{nothingSelected: \'选择一个或多个用户或用户组\', search: \'搜索...\'}">\n              </span>\n            </div>\n          </div>\n\n          <div class="form-group" ng-if="ctrl.entityType !== \'registry\'">\n            <label class="col-sm-3 col-lg-2 control-label text-left">\n              角色\n            </label>\n            <div class="col-sm-9 col-lg-4">\n              <select ng-if="ctrl.rbacEnabled" class="form-control" ng-model="ctrl.formValues.selectedRole"\n                ng-options="role.Name for role in ctrl.roles">\n              </select>\n              <span class="small text-muted" ng-if="!ctrl.rbacEnabled">\n                  使用<a ui-sref="portainer.extensions.extension({id: 3})">RBAC 基于角色的访问控制扩展</a>需要选择特定的角色。\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="(ctrl.availableUsersAndTeams | filter:{ticked:true}).length === 0 || ctrl.actionInProgress"\n                ng-click="ctrl.authorizeAccess()" button-spinner="ctrl.actionInProgress">\n                <span ng-hide="ctrl.state.actionInProgress"><i class="fa fa-plus" aria-hidden="true"></i> 创建\n                  访问权限规则</span>\n                <span ng-show="ctrl.state.actionInProgress">访问权限规则创建中...</span>\n              </button>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n<div class="row">\n  <div class="col-sm-12">\n    <access-datatable ng-if="ctrl.authorizedUsersAndTeams"\n      title-text="访问权限" title-icon="fa-user-lock"\n      table-key="{{ \'access_\' + ctrl.entityType}}" order-by="Name"\n      rbac-enabled="ctrl.rbacEnabled && ctrl.entityType !== \'registry\'" inherit-from="ctrl.inheritFrom"\n      dataset="ctrl.authorizedUsersAndTeams" roles="ctrl.roles"\n      update-action="ctrl.updateAction" remove-action="ctrl.unauthorizeAccess"\n      >\n    </access-datatable>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(44),n(95),n(45),n(70);var a=n(55),r=n(36),i=n(16),o=n.n(i);function s(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function l(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var c=function(){function e(t,n,a,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Notifications=t,this.ExtensionService=n,this.AccessService=a,this.RoleService=r,this.unauthorizeAccess=this.unauthorizeAccess.bind(this),this.updateAction=this.updateAction.bind(this)}var t,n,i,o,c;return e.$inject=["Notifications","ExtensionService","AccessService","RoleService"],t=e,(n=[{key:"updateAction",value:function(){var e=this.accessControlledEntity,t=e.UserAccessPolicies,n=e.TeamAccessPolicies,a=Object(r.a)(this.authorizedUsersAndTeams,{Updated:!0,Type:"user",Inherited:!1}),i=Object(r.a)(this.authorizedUsersAndTeams,{Updated:!0,Type:"team",Inherited:!1}),o=this.AccessService.generateAccessPolicies(t,n,a,i);this.accessControlledEntity.UserAccessPolicies=o.userAccessPolicies,this.accessControlledEntity.TeamAccessPolicies=o.teamAccessPolicies,this.updateAccess()}},{key:"authorizeAccess",value:function(){var e=this.accessControlledEntity,t=e.UserAccessPolicies,n=e.TeamAccessPolicies,a=this.rbacEnabled?this.formValues.selectedRole.Id:0,i=Object(r.a)(this.formValues.multiselectOutput,function(e){return"user"===e.Type}),o=Object(r.a)(this.formValues.multiselectOutput,function(e){return"team"===e.Type}),s=this.AccessService.generateAccessPolicies(t,n,i,o,a);this.accessControlledEntity.UserAccessPolicies=s.userAccessPolicies,this.accessControlledEntity.TeamAccessPolicies=s.teamAccessPolicies,this.updateAccess()}},{key:"unauthorizeAccess",value:function(e){var t=this.accessControlledEntity,n=t.UserAccessPolicies,i=t.TeamAccessPolicies,o=Object(r.a)(e,function(e){return"user"===e.Type}),s=Object(r.a)(e,function(e){return"team"===e.Type});Object(a.a)(o,function(e){return delete n[e.Id]}),Object(a.a)(s,function(e){return delete i[e.Id]}),this.updateAccess()}},{key:"$onInit",value:(o=regeneratorRuntime.mark(function e(){var t,n,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.accessControlledEntity){e.next=4;break}return this.Notifications.error("失败","无法检索访问权限"),e.abrupt("return");case 4:return t.UserAccessPolicies||(t.UserAccessPolicies={}),t.TeamAccessPolicies||(t.TeamAccessPolicies={}),(n=this.inheritFrom)&&!n.UserAccessPolicies&&(n.UserAccessPolicies={}),n&&!n.TeamAccessPolicies&&(n.TeamAccessPolicies={}),this.roles=[],this.rbacEnabled=!1,e.prev=11,e.next=14,this.ExtensionService.extensionEnabled(this.ExtensionService.EXTENSIONS.RBAC);case 14:if(this.rbacEnabled=e.sent,!this.rbacEnabled){e.next=20;break}return e.next=18,this.RoleService.roles();case 18:this.roles=e.sent,this.formValues={selectedRole:this.roles[0]};case 20:return e.next=22,this.AccessService.accesses(t.UserAccessPolicies,t.TeamAccessPolicies,n?n.UserAccessPolicies:{},n?n.TeamAccessPolicies:{},this.roles);case 22:a=e.sent,this.availableUsersAndTeams=a.availableUsersAndTeams,this.authorizedUsersAndTeams=a.authorizedUsersAndTeams,e.next=32;break;case 27:e.prev=27,e.t0=e.catch(11),this.availableUsersAndTeams=[],this.authorizedUsersAndTeams=[],this.Notifications.error("失败",e.t0,"无法检索访问权限");case 32:case"end":return e.stop()}},e,this,[[11,27]])}),c=function(){var e=this,t=arguments;return new Promise(function(n,a){var r=o.apply(e,t);function i(e){s(r,n,a,i,l,"next",e)}function l(e){s(r,n,a,i,l,"throw",e)}i(void 0)})},function(){return c.apply(this,arguments)})}])&&l(t.prototype,n),i&&l(t,i),e}();t.default=c,o.a.module("portainer.app").controller("porAccessManagementController",c)},function(e,t){angular.module("portainer.app").directive("autoFocus",["$timeout",function(e){return{restrict:"A",link:function(t,n){e(function(){n[0].focus()})}}}])},function(e,t){angular.module("portainer.app").directive("buttonSpinner",function(){return{restrict:"A",scope:{spinning:"=buttonSpinner"},transclude:!0,template:'<ng-transclude></ng-transclude><span ng-show="spinning"><i class="fa fa-circle-notch fa-spin" style="margin-left: 2px;"></i>&nbsp;</span>'}})},function(e,t,n){var a=n(904);angular.module("portainer.app").component("codeEditor",{templateUrl:a,controller:"CodeEditorController",bindings:{identifier:"@",placeholder:"@",yml:"<",readOnly:"<",onChange:"<",value:"<"}})},function(e,t){var n="app/portainer/components/code-editor/codeEditor.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<textarea id="{{ $ctrl.identifier }}" class="form-control" placeholder="{{ $ctrl.placeholder }}"></textarea>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("CodeEditorController",["$document","CodeMirrorService",function(e,t){var n=this;this.$onInit=function(){e.ready(function(){var a=e[0].getElementById(n.identifier);n.editor=t.applyCodeMirrorOnElement(a,n.yml,n.readOnly),n.onChange&&n.editor.on("change",n.onChange),n.value&&n.editor.setValue(n.value)})}}])},function(e,t,n){var a=n(907);angular.module("portainer.app").component("endpointsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",endpointManagement:"<",accessManagement:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/endpoints-datatable/endpointsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="$ctrl.endpointManagement">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.endpoints.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加节点\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="$ctrl.endpointManagement">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  类型\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'URL\')">\n                  URL地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'GroupName\')">\n                  节点组\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'GroupName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="$ctrl.endpointManagement">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.endpoints.endpoint({id: item.Id})" ng-if="$ctrl.endpointManagement">{{ item.Name }}</a>\n                <span ng-if="!$ctrl.endpointManagement">{{ item.Name }}</span>\n              </td>\n              <td>\n                <span>\n                  <i ng-class="item.Type | endpointtypeicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ item.Type | endpointtypename }}\n                </span>\n              </td>\n              <td>{{ item.URL | stripprotocol }}</td>\n              <td>{{ item.GroupName }}</td>\n              <td>\n                <a ui-sref="portainer.endpoints.endpoint.access({id: item.Id})" ng-if="$ctrl.accessManagement">\n                  <i class="fa fa-users" aria-hidden="true"></i> 管理访问权限\n                </a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的节点。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5),n(909);angular.module("portainer.app").controller("GenericDatatableController",["PaginationService","DatatableService","PAGINATION_MAX_ITEMS",function(e,t,n){this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:n,displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.$onInit=function(){var n;(n=this).showTextFilter=!!n.showTextFilter&&n.showTextFilter,n.state.reverseOrder=!!n.reverseOrder&&n.reverseOrder,n.state.paginatedItemLimit=e.getPaginationLimit(n.tableKey);var a=t.getDataTableOrder(this.tableKey);null!==a&&(this.state.reverseOrder=a.reverse,this.state.orderBy=a.orderBy);var r=t.getDataTableTextFilters(this.tableKey);null!==r&&(this.state.textFilter=r,this.onTextFilterChange())}}])},function(e,t,n){},function(e,t,n){var a=n(911);angular.module("portainer.app").component("groupsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",accessManagement:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/groups-datatable/groupsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.groups.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加节点组\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.groups.group({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>\n                <a ui-sref="portainer.groups.group.access({id: item.Id})" ng-if="$ctrl.accessManagement">\n                  <i class="fa fa-users" aria-hidden="true"></i> 访问管理\n                </a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的节点组。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(913);angular.module("portainer.app").component("registriesDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",accessManagement:"<",removeAction:"<",registryManagement:"<"}})},function(e,t){var n="app/portainer/components/datatables/registries-datatable/registriesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="$ctrl.accessManagement">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.registries.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加仓库\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="$ctrl.accessManagement">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'URL\')">\n                  URL地址\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'URL\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="$ctrl.accessManagement">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.registries.registry({id: item.Id})" ng-if="$ctrl.accessManagement">{{ item.Name }}</a>\n                <span ng-if="!$ctrl.accessManagement">{{ item.Name }}</span>\n                <span ng-if="item.Authentication" style="margin-left: 5px;" class="label label-info image-tag">启用认证</span>\n              </td>\n              <td>\n                {{ item.URL }}\n              </td>\n              <td>\n                <a ui-sref="portainer.registries.registry.access({id: item.Id})" ng-if="$ctrl.accessManagement">\n                  <i class="fa fa-users" aria-hidden="true"></i> 管理访问权限\n                </a>\n                <a ui-sref="portainer.registries.registry.repositories({id: item.Id})" ng-if="$ctrl.registryManagement" class="space-left">\n                  <i class="fa fa-search" aria-hidden="true"></i> 浏览\n                </a>\n                \x3c!--  <a ui-sref="portainer.extensions.extension({id: 1})" ng-if="!$ctrl.registryManagement" class="space-left" style="color: #767676" tooltip-append-to-body="true" tooltip-placement="bottom" tooltip-class="portainer-tooltip" uib-tooltip="Feature available via an extension">  --\x3e\n                  \x3c!--  <i class="fa fa-search" aria-hidden="true"></i> Browse (extension)浏览 (由扩展程序提供支持)  --\x3e\n                \x3c!--  </a>  --\x3e\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的仓库。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(915);angular.module("portainer.docker").component("scheduleTasksDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",goToContainerLogs:"<"}})},function(e,t){var n="app/portainer/components/datatables/schedule-tasks-datatable/scheduleTasksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <div class="datatable">\n      <rd-widget>\n        <rd-widget-body classes="no-padding">\n          <div class="toolBar">\n            <div class="toolBarTitle">\n              <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i>\n              {{ $ctrl.titleText }}\n            </div>\n          </div>\n          <div class="searchBar">\n            <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n            <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="搜索..." auto-focus>\n          </div>\n          <div class="table-responsive">\n            <table class="table table-hover table-filters nowrap-cells">\n              <thead>\n                <tr>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Endpoint\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoint\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Endpoint\' && $ctrl.state.reverseOrder"></i>\n                      节点\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Id\')">\n                      Id\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Id\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Status\')">\n                      状态\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Status\' && $ctrl.state.reverseOrder"></i>\n                    </a>\n                  </th>\n                  <th>\n                    <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                      <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                      <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                      已创建\n                    </a>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter: $ctrl.applyFilters | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))">\n                  <td>\n                    {{ item.Endpoint.Name }}\n                  </td>\n                  <td>\n                    <a ng-click="$ctrl.goToContainerLogs(item.EndpointId, item.Id)">{{ item.Id | truncate: 32 }}</a>\n                  </td>\n                  <td>\n                    <span class="label label-{{ item.Status|containerstatusbadge }}">{{ item.Status }}</span>\n                  </td>\n                  <td>\n                    {{ item.Created | getisodatefromtimestamp}}\n                  </td>\n                </tr>\n                <tr ng-if="!$ctrl.dataset">\n                  <td colspan="9" class="text-center text-muted">载入中...</td>\n                </tr>\n                <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n                  <td colspan="9" class="text-center text-muted">没有可用的任务。</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class="footer" ng-if="$ctrl.dataset">\n            <div class="paginationControls">\n              <form class="form-inline">\n                <span class="limitSelector">\n                  <span style="margin-right: 5px;">\n                    每页项目\n                  </span>\n                  <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                    <option value="0">全部</option>\n                    <option value="10">10</option>\n                    <option value="25">25</option>\n                    <option value="50">50</option>\n                    <option value="100">100</option>\n                  </select>\n                </span>\n                <dir-pagination-controls max-size="5"></dir-pagination-controls>\n              </form>\n            </div>\n          </div>\n        </rd-widget-body>\n      </rd-widget>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(917);angular.module("portainer.app").component("schedulesDatatable",{templateUrl:a,controller:"SchedulesDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/schedules-datatable/schedulesDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.schedules.new">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加计划\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'CronExpression\')">\n                  Cron表达式\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CronExpression\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'CronExpression\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Created\')">\n                  已创建\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Created\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" ng-disabled="item.JobType !== 1"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <span ng-if="item.JobType !== 1">{{ item.Name }}</span>\n                <a ng-if="item.JobType === 1" ui-sref="portainer.schedules.schedule({id: item.Id})">{{ item.Name }}</a>\n              </td>\n              <td>\n                {{ item.CronExpression }}\n              </td>\n              <td>{{ item.Created | getisodatefromtimestamp }}</td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有可用的计划。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          已选择 {{ $ctrl.state.selectedItemCount }} 项\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.app").controller("SchedulesDatatableController",["PaginationService","DatatableService",function(e,t){this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];1===t.JobType&&t.Checked!==this.state.selectAll&&(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy)}}])},function(e,t,n){var a=n(920);angular.module("portainer.app").component("stacksDatatable",{templateUrl:a,controller:"StacksDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",showOwnershipColumn:"<",removeAction:"<",offlineMode:"<"}})},function(e,t){var n="app/portainer/components/datatables/stacks-datatable/stacksDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n        <button type="button" class="btn btn-sm btn-danger" authorization="PortainerStackDelete"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n        <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.stacks.newstack" authorization="PortainerStackCreate">\n          <i class="fa fa-plus space-right" aria-hidden="true"></i>添加堆栈\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'Type\')">\n                  类型\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Type\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>控制</th>\n              <th ng-if="$ctrl.showOwnershipColumn">\n                <a ng-click="$ctrl.changeOrderBy(\'ResourceControl.Ownership\')">\n                  所有权\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'ResourceControl.Ownership\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox" ng-if="!$ctrl.offlineMode" authorization="PortainerStackCreate, PortainerStackDelete">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)" ng-disabled="item.External && item.Type === 2"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ng-if="!$ctrl.offlineMode" ui-sref="portainer.stacks.stack({ name: item.Name, id: item.Id, type: item.Type, external: item.External })">{{ item.Name }}</a>\n                <span ng-if="$ctrl.offlineMode">{{ item.Name }}</span>\n              </td>\n              <td>{{ item.Type === 1 ? \'Swarm\' : \'Compose\' }}</td>\n              <td>\n                <span ng-if="item.External" class="interactive" tooltip-append-to-body="true" tooltip-placement="bottom" tooltip-class="portainer-tooltip" uib-tooltip="此堆栈是在Portainer外部创建的，可能无法管理和控制这个外部堆栈。">\n                  受限的 <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-left: 2px;"></i>\n                </span>\n                <span ng-if="!item.External">完全控制</span>\n              </td>\n              <td ng-if="$ctrl.showOwnershipColumn">\n                <span>\n                  <i ng-class="item.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ item.ResourceControl.Ownership ? item.ResourceControl.Ownership : item.ResourceControl.Ownership = \'administrators\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="4" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="4" class="text-center text-muted">没有可用的堆栈。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);angular.module("portainer.app").controller("StacksDatatableController",["PaginationService","DatatableService",function(e,t){this.state={selectAll:!1,orderBy:this.orderBy,paginatedItemLimit:e.getPaginationLimit(this.tableKey),displayTextFilter:!1,selectedItemCount:0,selectedItems:[]},this.onTextFilterChange=function(){t.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e,t.setDataTableOrder(this.tableKey,e,this.state.reverseOrder)},this.selectItem=function(e){e.Checked?(this.state.selectedItemCount++,this.state.selectedItems.push(e)):(this.state.selectedItems.splice(this.state.selectedItems.indexOf(e),1),this.state.selectedItemCount--)},this.selectAll=function(){for(var e=0;e<this.state.filteredDataSet.length;e++){var t=this.state.filteredDataSet[e];t.External&&2===t.Type||t.Checked===this.state.selectAll||(t.Checked=this.state.selectAll,this.selectItem(t))}},this.changePaginationLimit=function(){e.setPaginationLimit(this.tableKey,this.state.paginatedItemLimit)},this.$onInit=function(){var e;(e=this).showTextFilter=!!e.showTextFilter&&e.showTextFilter,e.state.reverseOrder=!!e.reverseOrder&&e.reverseOrder;var n=t.getDataTableOrder(this.tableKey);null!==n&&(this.state.reverseOrder=n.reverse,this.state.orderBy=n.orderBy);var a=t.getDataTableTextFilters(this.tableKey);null!==a&&(this.state.textFilter=a)}}])},function(e,t,n){var a=n(923);angular.module("portainer.app").component("tagsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/tags-datatable/tagsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                {{ item.Name }}\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="1" class="text-center text-muted">载入中...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="1" class="text-center text-muted">没有可用的标签。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(925);angular.module("portainer.app").component("teamsDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<"}})},function(e,t){var n="app/portainer/components/datatables/teams-datatable/teamsDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Name\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.teams.team({id: item.Id})">{{ item.Name }}</a>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td class="text-center text-muted">没有用户组可选。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(927);angular.module("portainer.app").component("usersDatatable",{templateUrl:a,controller:"GenericDatatableController",bindings:{titleText:"@",titleIcon:"@",dataset:"<",tableKey:"@",orderBy:"@",reverseOrder:"<",removeAction:"<",authenticationMethod:"<"}})},function(e,t){var n="app/portainer/components/datatables/users-datatable/usersDatatable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n      <div class="actionBar">\n        <button type="button" class="btn btn-sm btn-danger"\n          ng-disabled="$ctrl.state.selectedItemCount === 0" ng-click="$ctrl.removeAction($ctrl.state.selectedItems)">\n          <i class="fa fa-trash-alt space-right" aria-hidden="true"></i>删除\n        </button>\n      </div>\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n      </div>\n      <div class="table-responsive">\n        <table class="table table-hover nowrap-cells">\n          <thead>\n            <tr>\n              <th>\n                <span class="md-checkbox">\n                  <input id="select_all" type="checkbox" ng-model="$ctrl.state.selectAll" ng-change="$ctrl.selectAll()" />\n                  <label for="select_all"></label>\n                </span>\n                <a ng-click="$ctrl.changeOrderBy(\'Username\')">\n                  名称\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Username\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'Username\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'RoleName\')">\n                  角色\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'RoleName\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n              <th>\n                <a ng-click="$ctrl.changeOrderBy(\'AuthenticationMethod\')">\n                  认证\n                  <i class="fa fa-sort-alpha-down" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'AuthenticationMethod\' && !$ctrl.state.reverseOrder"></i>\n                  <i class="fa fa-sort-alpha-up" aria-hidden="true" ng-if="$ctrl.state.orderBy === \'AuthenticationMethod\' && $ctrl.state.reverseOrder"></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="item in ($ctrl.state.filteredDataSet = ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit))" ng-class="{active: item.Checked}">\n              <td>\n                <span class="md-checkbox">\n                  <input id="select_{{ $index }}" type="checkbox" ng-model="item.Checked" ng-change="$ctrl.selectItem(item)"/>\n                  <label for="select_{{ $index }}"></label>\n                </span>\n                <a ui-sref="portainer.users.user({id: item.Id})">{{ item.Username }}</a>\n              </td>\n              <td>\n                <span>\n                  <i class="fa fa-user-circle" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role === 1 && !item.isTeamLeader"></i>\n                  <i class="fa fa-user-plus" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role !== 1 && item.isTeamLeader"></i>\n                  <i class="fa fa-user" aria-hidden="true" style="margin-right: 5px;" ng-if="item.Role !== 1 && !item.isTeamLeader"></i>\n                  {{ item.RoleName ? item.RoleName : \'-\' }}\n                </span>\n              </td>\n              <td>\n                <span ng-if="item.Id === 1 || $ctrl.authenticationMethod !== 2 && $ctrl.authenticationMethod !== 3">内部</span>\n                <span ng-if="item.Id !== 1 && $ctrl.authenticationMethod === 2">LDAP</span>\n                <span ng-if="item.Id !== 1 && $ctrl.authenticationMethod === 3">OAuth</span>\n              </td>\n            </tr>\n            <tr ng-if="!$ctrl.dataset">\n              <td colspan="3" class="text-center text-muted">正在载入...</td>\n            </tr>\n            <tr ng-if="$ctrl.state.filteredDataSet.length === 0">\n              <td colspan="3" class="text-center text-muted">没有用户可选。</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class="footer" ng-if="$ctrl.dataset">\n        <div class="infoBar" ng-if="$ctrl.state.selectedItemCount !== 0">\n          {{ $ctrl.state.selectedItemCount }} 个项目已选择\n        </div>\n        <div class="paginationControls">\n          <form class="form-inline">\n            <span class="limitSelector">\n              <span style="margin-right: 5px;">\n                每页项目\n              </span>\n              <select class="form-control" ng-model="$ctrl.state.paginatedItemLimit" ng-change="$ctrl.changePaginationLimit()">\n                <option value="0">全部</option>\n                <option value="10">10</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100">100</option>\n              </select>\n            </span>\n            <dir-pagination-controls max-size="5"></dir-pagination-controls>\n          </form>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("EndpointItemController",[function(){var e=this;e.editEndpoint=function(t){t.stopPropagation(),e.onEdit(e.model.Id)}}])},function(e,t,n){var a=n(930);angular.module("portainer.app").component("endpointItem",{templateUrl:a,bindings:{model:"<",onSelect:"<",onEdit:"<",isAdmin:"<"},controller:"EndpointItemController"})},function(e,t){var n="app/portainer/components/endpoint-list/endpoint-item/endpointItem.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="blocklist-item" ng-click="$ctrl.onSelect($ctrl.model)">\n  <div class="blocklist-item-box">\n    <span ng-class="[\'blocklist-item-logo\', \'endpoint-item\', { azure: $ctrl.model.Type === 3 }]">\n      <i ng-class="$ctrl.model.Type | endpointtypeicon" class="fa-4x blue-icon" aria-hidden="true"></i>\n    </span>\n\n    <span class="col-sm-12">\n\n      <div class="blocklist-item-line endpoint-item">\n        <span>\n          <span class="blocklist-item-title endpoint-item">\n            {{ $ctrl.model.Name }}\n          </span>\n          <span class="space-left blocklist-item-subtitle">\n            <span class="label label-{{ $ctrl.model.Status|endpointstatusbadge }}">\n              {{ $ctrl.model.Status === 1 ? \'up\' : \'down\' }}\n            </span>\n            <span class="space-left small text-muted" ng-if="$ctrl.model.Snapshots[0]">\n              {{ $ctrl.model.Snapshots[0].Time | getisodatefromtimestamp }}\n            </span>\n\n          </span>\n        </span>\n        <span>\n\n          <span class="small" ng-if="$ctrl.model.GroupName">\n            节点组： {{ $ctrl.model.GroupName }}\n          </span>\n          <button\n            ng-if="$ctrl.isAdmin"\n            class="btn btn-link btn-xs"\n            ng-click="$ctrl.editEndpoint($event)"><i class="fa fa-pencil-alt"></i>\n          </button>\n        </span>\n      </div>\n\n      <div class="blocklist-item-line endpoint-item" ng-if="$ctrl.model.Snapshots[0]">\n        <span class="blocklist-item-desc">\n          <span>\n            <span style="padding: 0 7px 0 0;">\n              <i class="fa fa-th-list space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].StackCount }} {{ $ctrl.model.Snapshots[0].StackCount === 1 ? \'堆栈\' : \'堆栈\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;" ng-if="$ctrl.model.Snapshots[0].Swarm">\n              <i class="fa fa-list-alt space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].ServiceCount }} {{ $ctrl.model.Snapshots[0].ServiceCount === 1 ? \'服务\' : \'服务\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-server space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].RunningContainerCount + $ctrl.model.Snapshots[0].StoppedContainerCount }} {{ $ctrl.model.Snapshots[0].RunningContainerCount + $ctrl.model.Snapshots[0].StoppedContainerCount === 1 ? \'容器\' : \'容器\' }}\n              <span ng-if="$ctrl.model.Snapshots[0].RunningContainerCount > 0 || $ctrl.model.Snapshots[0].StoppedContainerCount > 0">\n                -\n                <i class="fa fa-heartbeat green-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].RunningContainerCount }}\n                <i class="fa fa-heartbeat red-icon" aria-hidden="true"></i> {{ $ctrl.model.Snapshots[0].StoppedContainerCount }}\n              </span>\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-cubes space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].VolumeCount }} {{ $ctrl.model.Snapshots[0].VolumeCount === 1 ? \'存储卷\' : \'存储卷\' }}\n            </span>\n            <span style="padding: 0 7px 0 7px;">\n              <i class="fa fa-clone space-right" aria-hidden="true"></i>{{ $ctrl.model.Snapshots[0].ImageCount }} {{ $ctrl.model.Snapshots[0].ImageCount === 1 ? \'镜像\' : \'镜像\' }}\n            </span>\n          </span>\n        </span>\n        <span class="small text-muted">\n          {{ $ctrl.model.Snapshots[0].Swarm ? \'Swarm\' : \'Standalone\' }} {{ $ctrl.model.Snapshots[0].DockerVersion }} <span ng-if="$ctrl.model.Type === 2">+ <i class="fa fa-bolt" aria-hidden="true"></i>  代理</span>\n        </span>\n      </div>\n\n      <div class="blocklist-item-line endpoint-item">\n        <span class="small text-muted">\n          <span ng-if="$ctrl.model.Type === 1">\n            <span class="small text-muted">\n              <i class="fa fa-microchip"></i> {{ $ctrl.model.Snapshots[0].TotalCPU }}<i class="fa fa-memory space-left"></i> {{ $ctrl.model.Snapshots[0].TotalMemory | humansize }}\n            </span>\n            <span class="space-left space-right">-</span>\n          </span>\n          <span ng-if="$ctrl.model.Tags.length === 0">\n            <i class="fa fa-tags" aria-hidden="true"></i> 无标签\n          </span>\n          <span ng-if="$ctrl.model.Tags.length > 0">\n            <i class="fa fa-tags" aria-hidden="true"></i>\n            <span ng-repeat="tag in $ctrl.model.Tags">\n              {{ tag }}{{ $last? \'\' : \', \' }}\n            </span>\n          </span>\n        </span>\n        <span class="small text-muted">\n          {{ $ctrl.model.URL | stripprotocol }}\n        </span>\n      </div>\n\n    </span>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(20);var a=n(338),r=n(13),i=n(337),o=n(36);angular.module("portainer.app").controller("EndpointListController",["DatatableService",function(e){var t=this;function n(){var n=t.state.textFilter;t.state.filteredEndpoints=function(e,t){if(!e||!e.length||!t)return e;var n=t.split(" ");return Object(o.a)(e,function(e){var t=1===e.Status?"up":"down";return Object(i.a)(n,function(n){var i=n.toLowerCase();return Object(r.a)(e.Name.toLowerCase(),i)||Object(r.a)(e.GroupName.toLowerCase(),i)||Object(r.a)(e.URL.toLowerCase(),i)||Object(a.a)(e.Tags,function(e){return Object(r.a)(e.toLowerCase(),i)})||Object(r.a)(t,n)})})}(t.endpoints,n),e.setDataTableTextFilters(t.tableKey,n)}t.state={textFilter:"",filteredEndpoints:[]},t.$onChanges=function(e){!function(e){if(!e)return;if(!e.currentValue)return;n()}(e.endpoints)},t.onTextFilterChange=n,t.$onInit=function(){var a=e.getDataTableTextFilters(t.tableKey);null!==a&&(t.state.textFilter=a,n())}}])},function(e,t,n){var a=n(933);angular.module("portainer.app").component("endpointList",{templateUrl:a,controller:"EndpointListController",bindings:{titleText:"@",titleIcon:"@",endpoints:"<",tableKey:"@",dashboardAction:"<",snapshotAction:"<",showSnapshotAction:"<",editAction:"<",isAdmin:"<"}})},function(e,t){var n="app/portainer/components/endpoint-list/endpointList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n\n      <div class="actionBar" ng-if="$ctrl.showSnapshotAction">\n        <button type="button" class="btn btn-sm btn-primary" ng-click="$ctrl.snapshotAction()">\n          <i class="fa fa-sync space-right" aria-hidden="true"></i>刷新\n        </button>\n      </div>\n\n      <div class="searchBar">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input\n          type="text"\n          class="searchInput"\n          ng-model="$ctrl.state.textFilter"\n          ng-change="$ctrl.onTextFilterChange()"\n          placeholder="按名称，组，标签，状态，URL 搜索..." auto-focus>\n      </div>\n\n      <div class="blocklist">\n        <endpoint-item\n          ng-repeat="endpoint in $ctrl.state.filteredEndpoints"\n          model="endpoint"\n          on-select="$ctrl.dashboardAction"\n          on-edit="$ctrl.editAction"\n          is-admin="$ctrl.isAdmin"\n        ></endpoint-item>\n        <div ng-if="!$ctrl.endpoints" class="text-center text-muted">\n          载入中...\n        </div>\n        <div ng-if="!$ctrl.state.filteredEndpoints.length" class="text-center text-muted">\n          无节点可用。\n        </div>\n      </div>\n\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(935);angular.module("portainer.app").component("endpointSelector",{templateUrl:a,controller:"EndpointSelectorController",bindings:{model:"=",endpoints:"<",groups:"<"}})},function(e,t){var n="app/portainer/components/endpoint-selector/endpointSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<ui-select ng-model="$ctrl.model">\n  <ui-select-match placeholder="选择节点">\n    <span>{{ $select.selected.Name }}</span>\n  </ui-select-match>\n  <ui-select-choices group-by="$ctrl.groupEndpoints" group-filter="$ctrl.sortGroups" repeat="endpoint in ($ctrl.endpoints | filter: $select.search) track by endpoint.Id">\n    <span>{{ endpoint.Name }}</span>\n  </ui-select-choices>\n</ui-select>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(18);var a=n(114);angular.module("portainer.app").controller("EndpointSelectorController",function(){var e=this;this.sortGroups=function(e){return Object(a.a)(e,["name"])},this.groupEndpoints=function(t){for(var n=0;n<e.availableGroups.length;n++){var a=e.availableGroups[n];if(t.GroupId===a.Id)return a.Name}},this.$onInit=function(){var e,t;this.availableGroups=(e=this.groups,t=this.endpoints,e.filter(function(e){for(var n=0;n<t.length;n++){var a=t[n];if(a.GroupId===e.Id)return!0}return!1}))}})},function(e,t,n){var a=n(938);angular.module("portainer.app").component("porEndpointSecurity",{templateUrl:a,controller:"porEndpointSecurityController",bindings:{formData:"=",endpoint:"<"}})},function(e,t){var n="app/portainer/components/endpointSecurity/porEndpointSecurity.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  \x3c!-- tls-checkbox --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="tls" class="control-label text-left">\n        启用TLS认证\n        <portainer-tooltip position="bottom" message="如果您需要使用TLS连接到Docker节点，请启用此选项。"></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;">\n        <input type="checkbox" ng-model="$ctrl.formData.TLS"><i></i>\n      </label>\n    </div>\n  </div>\n  \x3c!-- !tls-checkbox --\x3e\n  <div class="col-sm-12 form-section-title" ng-if="$ctrl.formData.TLS">\n    TLS模式\n  </div>\n  \x3c!-- note --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.TLS">\n    <div class="col-sm-12">\n      <span class="small text-muted">\n        您可以在Docker文档<a href="https://docs.docker.com/engine/security/https/" target="_blank">如何使用TLS保护Docker环境</a>找到相关的更多信息。\n      </span>\n    </div>\n  </div>\n  <div class="form-group"></div>\n  \x3c!-- endpoint-tls-mode --\x3e\n  <div class="form-group" style="margin-bottom: 0" ng-if="$ctrl.formData.TLS">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="tls_client_ca" ng-model="$ctrl.formData.TLSMode" value="tls_client_ca">\n        <label for="tls_client_ca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            带有服务端和客户端验证的TLS\n          </div>\n          <p>使用客户端证书和服务端验证</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_client_noca" ng-model="$ctrl.formData.TLSMode" value="tls_client_noca">\n        <label for="tls_client_noca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS只有客户端验证\n          </div>\n          <p>使用客户端证书，无需服务端验证</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_ca" ng-model="$ctrl.formData.TLSMode" value="tls_ca">\n        <label for="tls_ca">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            TLS仅包含服务端验证\n          </div>\n          <p>只验证服务端证书</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="tls_only" ng-model="$ctrl.formData.TLSMode" value="tls_only">\n        <label for="tls_only">\n          <div class="boxselector_header">\n            <i class="fa fa-shield-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            仅限TLS\n          </div>\n          <p>没有服务端/客户端验证</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !endpoint-tls-mode --\x3e\n  <div class="col-sm-12 form-section-title" ng-if="$ctrl.formData.TLS && $ctrl.formData.TLSMode !== \'tls_only\'">\n    必需的TLS文件\n  </div>\n  \x3c!-- tls-file-upload --\x3e\n  <div ng-if="$ctrl.formData.TLS">\n    \x3c!-- tls-file-ca --\x3e\n    <div class="form-group" ng-if="$ctrl.formData.TLSMode === \'tls_client_ca\' || $ctrl.formData.TLSMode === \'tls_ca\'">\n      <label class="col-sm-3 col-lg-2 control-label text-left">TLS CA证书</label>\n      <div class="col-sm-9 col-lg-10">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSCACert">选择文件</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.formData.TLSCACert.name }}\n          <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSCACert && $ctrl.formData.TLSCACert === $ctrl.endpoint.TLSConfig.TLSCACert" aria-hidden="true"></i>\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSCACert" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n    \x3c!-- !tls-file-ca --\x3e\n    \x3c!-- tls-files-cert-key --\x3e\n    <div ng-if="$ctrl.formData.TLSMode === \'tls_client_ca\' || $ctrl.formData.TLSMode === \'tls_client_noca\'">\n      \x3c!-- tls-file-cert --\x3e\n      <div class="form-group">\n        <label for="tls_cert" class="col-sm-3 col-lg-2 control-label text-left">TLS证书</label>\n        <div class="col-sm-9 col-lg-10">\n          <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSCert">选择文件</button>\n          <span style="margin-left: 5px;">\n            {{ $ctrl.formData.TLSCert.name }}\n            <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSCert && $ctrl.formData.TLSCert === $ctrl.endpoint.TLSConfig.TLSCert" aria-hidden="true"></i>\n            <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSCert" aria-hidden="true"></i>\n          </span>\n        </div>\n      </div>\n      \x3c!-- !tls-file-cert --\x3e\n      \x3c!-- tls-file-key --\x3e\n      <div class="form-group">\n        <label class="col-sm-3 col-lg-2 control-label text-left">TLS密钥</label>\n        <div class="col-sm-9 col-lg-10">\n          <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formData.TLSKey">选择文件</button>\n          <span style="margin-left: 5px;">\n            {{ $ctrl.formData.TLSKey.name }}\n            <i class="fa fa-check green-icon" ng-if="$ctrl.formData.TLSKey && $ctrl.formData.TLSKey === $ctrl.endpoint.TLSConfig.TLSKey" aria-hidden="true"></i>\n            <i class="fa fa-times red-icon" ng-if="!$ctrl.formData.TLSKey" aria-hidden="true"></i>\n          </span>\n        </div>\n      </div>\n      \x3c!-- !tls-file-key --\x3e\n    </div>\n    \x3c!-- tls-files-cert-key --\x3e\n  </div>\n  \x3c!-- !tls-file-upload --\x3e\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("porEndpointSecurityController",[function(){var e=this;!function(){if(e.endpoint){var t=e.endpoint,n=t.TLSConfig.TLS;e.formData.TLS=n;var a=t.TLSConfig.TLSCACert;e.formData.TLSCACert=a;var r=t.TLSConfig.TLSCert;e.formData.TLSCert=r;var i=t.TLSConfig.TLSKey;e.formData.TLSKey=i,n&&(e.formData.TLSMode=a&&r&&i?"tls_client_ca":r&&i?"tls_client_noca":a?"tls_ca":"tls_only")}}()}])},function(e,t,n){var a=n(941);angular.module("portainer.app").component("extensionItem",{templateUrl:a,controller:"ExtensionItemController",bindings:{model:"<",currentDate:"<"}})},function(e,t){var n="app/portainer/components/extension-list/extension-item/extensionItem.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- extension --\x3e\n<div class="blocklist-item" ng-click="$ctrl.goToExtensionView()" ng-class="{ \'blocklist-item--disabled\': !$ctrl.model.Available }">\n  <div class="blocklist-item-box">\n    \x3c!-- extension-image --\x3e\n    <span ng-if="$ctrl.model.Logo" style="width: 75px; text-align: center;">\n      \x3c!-- <img class="blocklist-item-logo" ng-src="{{ $ctrl.model.Logo }}" /> --\x3e\n      <i class="{{ $ctrl.model.Logo }} fa fa-4x blue-icon" aria-hidden="true"></i>\n    </span>\n    <span class="blocklist-item-logo" ng-if="!$ctrl.model.Logo">\n      <i class="fa fa-bolt fa-4x blue-icon" style="margin-left: 14px;" aria-hidden="true"></i>\n    </span>\n    \x3c!-- !extension-image --\x3e\n    \x3c!-- extension-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Name }}\n          </span>\n        </span>\n        <span>\n          <span class="label label-primary" ng-if="!$ctrl.model.Enabled && !$ctrl.model.Available">开发中</span>\n          <span class="label label-warning" ng-if="!$ctrl.model.Enabled && $ctrl.model.Deal && !$ctrl.model.License.Expiration">订阅</span>\n          <span class="label label-danger" ng-if="!$ctrl.model.Enabled && $ctrl.model.License.Expiration && !$ctrl.model.License.Valid">已过期</span>\n          <span class="label label-success" ng-if="$ctrl.model.Enabled && $ctrl.model.License.Valid">已启用</span>\n          <span class="label label-primary" ng-if="$ctrl.model.Enabled && $ctrl.model.License.Valid && $ctrl.model.UpdateAvailable">有更新可用</span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-desc">\n            {{ $ctrl.model.ShortDescription }}\n          </span>\n        </span>\n        <span ng-if="$ctrl.model.License.Company">\n          <span class="small text-muted">已授权给：{{ $ctrl.model.License.Company }} - 到期时间：{{ $ctrl.model.License.Expiration }}</span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !extension-details --\x3e\n  </div>\n  \x3c!-- !extension --\x3e\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("ExtensionItemController",["$state",function(e){var t=this;t.goToExtensionView=function(){t.model.Available&&e.go("portainer.extensions.extension",{id:t.model.Id})}}])},function(e,t,n){var a=n(944);angular.module("portainer.app").component("extensionList",{templateUrl:a,bindings:{extensions:"<",currentDate:"<"}})},function(e,t){var n="app/portainer/components/extension-list/extensionList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i> 可用扩展程序\n        </div>\n      </div>\n\n      <div class="blocklist">\n        <extension-item ng-repeat="extension in $ctrl.extensions"\n          model="extension"\n          current-date="$ctrl.currentDate"\n        ></extension-item>\n      </div>\n\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("JobFormController",["$state","LocalStorage","EndpointService","EndpointProvider","Notifications",function(e,t,n,a,r){var i=this;i.$onInit=function(){var e=t.getJobImage();e&&(i.formValues.Image=e)},i.editorUpdate=function(e){i.formValues.JobFileContent=e.getValue()},i.executeJob=function(){var o=i.state.Method;if("editor"===o&&""===i.formValues.JobFileContent)return void(i.state.formValidationError="脚本文件内容不能为空");var s=i.formValues.Image;t.storeJobImage(s),i.state.actionInProgress=!0,function(e,t){var r=a.endpointID(),o=i.nodeName;if("editor"===t){var s=i.formValues.JobFileContent;return n.executeJobFromFileContent(e,s,r,o)}var l=i.formValues.JobFile;return n.executeJobFromFileUpload(e,l,r,o)}(s,o).then(function(){r.success("已成功创建任务"),e.go("^")}).catch(function(e){r.error("执行任务失败",e)}).finally(function(){i.state.actionInProgress=!1})},i.state={Method:"editor",formValidationError:"",actionInProgress:!1},i.formValues={Image:"ubuntu:latest",JobFileContent:"",JobFile:null}}])},function(e,t,n){var a=n(947);angular.module("portainer.app").component("executeJobForm",{templateUrl:a,controller:"JobFormController",bindings:{nodeName:"<"}})},function(e,t){var n="app/portainer/components/forms/execute-job-form/execute-job-form.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="executeJobForm">\n  \x3c!-- image-input --\x3e\n  <div class="form-group">\n    <label for="job_image" class="col-sm-1 control-label text-left">镜像</label>\n    <div class="col-sm-11">\n      <input type="text" class="form-control" ng-model="$ctrl.formValues.Image" id="job_image" name="job_image" placeholder="例如 ubuntu:latest" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="executeJobForm.job_image.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="executeJobForm.job_image.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必选项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !image-input --\x3e\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      此任务将在主机上的特权容器内运行。您可以通过<code>/host</code>文件夹\n      来访问主机的文件系统。\n    </span>\n  </div>\n  \x3c!-- execution-method --\x3e\n  <div class="col-sm-12 form-section-title">\n    创建任务\n  </div>\n  <div class="form-group"></div>\n  <div class="form-group" style="margin-bottom: 0">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="method_editor" ng-model="$ctrl.state.Method" value="editor">\n        <label for="method_editor">\n          <div class="boxselector_header">\n            <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n            Web编辑器\n          </div>\n          <p>使用Web编辑器</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="method_upload" ng-model="$ctrl.state.Method" value="upload">\n        <label for="method_upload">\n          <div class="boxselector_header">\n            <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n            上传\n          </div>\n          <p>从您的电脑上传</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !execution-method --\x3e\n  \x3c!-- web-editor --\x3e\n  <div ng-show="$ctrl.state.Method === \'editor\'">\n    <div class="col-sm-12 form-section-title">\n      Web编辑器\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <code-editor\n          identifier="execute-job-editor"\n          placeholder="# 在此处定义或粘贴脚本文件的内容"\n          on-change="$ctrl.editorUpdate">\n        </code-editor>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !web-editor --\x3e\n  \x3c!-- upload --\x3e\n  <div ng-show="$ctrl.state.Method === \'upload\'">\n    <div class="col-sm-12 form-section-title">\n      上传\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        您可以从您的电脑上传脚本文件。\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.formValues.JobFile">选择文件</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.formValues.JobFile.name }}\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.formValues.JobFile" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !upload --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="button" class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.state.actionInProgress || !executeJobForm.$valid\n        || ($ctrl.state.Method === \'upload\' && !$ctrl.formValues.JobFile)"\n        ng-click="$ctrl.executeJob()"\n        button-spinner="$ctrl.state.actionInProgress">\n        <span ng-hide="$ctrl.state.actionInProgress">执行</span>\n        <span ng-show="$ctrl.state.actionInProgress">开始执行任务...</span>\n      </button>\n      <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">\n        {{ $ctrl.state.formValidationError }}\n      </span>\n    </div>\n  </div>\n\x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(90),r=n(949);angular.module("portainer.app").component("groupForm",{templateUrl:r,controller:function(){var e=this;this.associateEndpoint=function(t){e.associatedEndpoints.push(t),Object(a.a)(e.availableEndpoints,function(e){return e.Id===t.Id})},this.dissociateEndpoint=function(t){e.availableEndpoints.push(t),Object(a.a)(e.associatedEndpoints,function(e){return e.Id===t.Id})}},bindings:{model:"=",availableEndpoints:"=",availableTags:"<",associatedEndpoints:"=",addLabelAction:"<",removeLabelAction:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/group-form/groupForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="endpointGroupForm">\n  \x3c!-- name-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': endpointGroupForm.group_name.$invalid }">\n    <label for="group_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="group_name" ng-model="$ctrl.model.Name" placeholder="例如 my-group" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="endpointGroupForm.group_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="endpointGroupForm.group_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- description-input --\x3e\n  <div class="form-group">\n    <label for="group_description" class="col-sm-3 col-lg-2 control-label text-left">描述</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="group_description" ng-model="$ctrl.model.Description" placeholder="例如 production environments...">\n    </div>\n  </div>\n  \x3c!-- !description-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    元数据\n  </div>\n  \x3c!-- tags --\x3e\n  <div class="form-group">\n    <tag-selector\n      tags="$ctrl.availableTags"\n      model="$ctrl.model.Tags"\n    ></tag-selector>\n  </div>\n  \x3c!-- !tags --\x3e\n  \x3c!-- endpoints --\x3e\n  <div ng-if="$ctrl.model.Id !== 1">\n    <div class="col-sm-12 form-section-title">\n      关联节点\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12 small text-muted">\n        您可以选择相关的节点作为该节点组的一部分，方法是将它们移动到相关联的节点表中。\n        只需单击选择的节点条目即可将其从一个表格移动到另一个表格。\n      </div>\n      <div class="col-sm-12" style="margin-top: 20px;">\n        \x3c!-- available-endpoints --\x3e\n        <div class="col-sm-6">\n          <div class="text-center small text-muted">可用的节点</div>\n          <div style="margin-top: 10px;">\n            <group-association-table\n              dataset="$ctrl.availableEndpoints"\n              entry-click="$ctrl.associateEndpoint"\n              empty-dataset-message="没有可用的节点"\n            ></group-association-table>\n          </div>\n        </div>\n        \x3c!-- !available-endpoints --\x3e\n        \x3c!-- associated-endpoints --\x3e\n        <div class="col-sm-6">\n          <div class="text-center small text-muted">关联的节点</div>\n          <div style="margin-top: 10px;">\n            <group-association-table\n              dataset="$ctrl.associatedEndpoints"\n              entry-click="$ctrl.dissociateEndpoint"\n              empty-dataset-message="没有关联的节点"\n            ></group-association-table>\n          </div>\n        </div>\n        \x3c!-- !associated-endpoints --\x3e\n      </div>\n    </div>\n  </div>\n  <div ng-if="$ctrl.model.Id === 1">\n    <div class="col-sm-12 form-section-title">\n      未关联的节点\n    </div>\n    <div ng-if="$ctrl.associatedEndpoints.length > 0">\n      <div style="margin-top: 10px;">\n        <group-association-table\n          dataset="$ctrl.associatedEndpoints"\n          empty-dataset-message="没有可用的节点"\n        ></group-association-table>\n      </div>\n    </div>\n    <div class="col-sm-12" ng-if="$ctrl.associatedEndpoints.length ===  0">\n      <span class="text-muted small">所有节点都分配到一个节点组。</span>\n    </div>\n  </div>\n  \x3c!-- !endpoints --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.formAction()" ng-disabled="$ctrl.actionInProgress || !endpointGroupForm.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">执行中...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(951);angular.module("portainer.app").component("registryFormAzure",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-azure/registry-form-azure.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormAzure" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    Azure容器镜像仓库详情\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_name" name="registry_name" ng-model="$ctrl.model.Name" placeholder="my-azure-registry" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- url-input --\x3e\n  <div class="form-group" ng-if="$ctrl.model.Type === 2 || $ctrl.model.Type === 3">\n    <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n      仓库URL地址\n      <portainer-tooltip position="bottom" message="Azure容器镜像仓库URL地址。任何指定的访问协议都将被忽略。"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_url" name="registry_url" ng-model="$ctrl.model.URL" placeholder="myproject.azurecr.io" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- url-input --\x3e\n  \x3c!-- credentials-user --\x3e\n  <div class="form-group">\n    <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_username.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_username.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-user --\x3e\n  \x3c!-- credentials-password --\x3e\n  <div class="form-group">\n    <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormAzure.registry_password.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormAzure.registry_password.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-password --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormAzure.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">处理中...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(953);angular.module("portainer.app").component("registryFormCustom",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-custom/registry-form-custom.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormCustom" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    重要提示\n  </div>\n  <div class="form-group">\n    <span class="col-sm-12 text-muted small">\n      Docker要求您连接到<a href="https://docs.docker.com/registry/deploying/#running-a-domain-registry" target="_blank">安全的镜像仓库</a>。\n      您可以查看<a href="https://docs.docker.com/registry/insecure/" target="_blank">Docker官方文档</a>来了解有关如何连接到不安全的镜像仓库的相关信息。\n    </span>\n  </div>\n  <div class="col-sm-12 form-section-title">\n    自定义镜像仓库详情\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">名称</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_name" name="registry_name" ng-model="$ctrl.model.Name" placeholder="my-custom-registry" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormCustom.registry_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormCustom.registry_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- url-input --\x3e\n  <div class="form-group" ng-if="$ctrl.model.Type === 2 || $ctrl.model.Type === 3">\n    <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n      仓库URL地址\n      <portainer-tooltip position="bottom" message="Docker镜像仓库的URL或IP地址。任何指定的访问协议都将被忽略。"></portainer-tooltip>\n    </label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_url" name="registry_url" ng-model="$ctrl.model.URL" placeholder="10.0.0.10:5000 或 myregistry.domain.tld" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormCustom.registry_url.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormCustom.registry_url.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- url-input --\x3e\n  \x3c!-- authentication-checkbox --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="registry_auth" class="control-label text-left">\n        认证\n        <portainer-tooltip position="bottom" message="如果需要指定凭据以连接到此仓库，请启用此选项。"></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;">\n        <input type="checkbox" ng-model="$ctrl.model.Authentication"><i></i>\n      </label>\n    </div>\n  </div>\n  \x3c!-- !authentication-checkbox --\x3e\n  <div ng-if="$ctrl.model.Authentication">\n    \x3c!-- credentials-user --\x3e\n    <div class="form-group">\n      <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required>\n      </div>\n    </div>\n    <div class="form-group" ng-show="registryFormCustom.registry_username.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="registryFormCustom.registry_username.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !credentials-user --\x3e\n    \x3c!-- credentials-password --\x3e\n    <div class="form-group">\n      <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required>\n      </div>\n    </div>\n    <div class="form-group" ng-show="registryFormCustom.registry_password.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="registryFormCustom.registry_password.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !credentials-password --\x3e\n  </div>\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormCustom.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">处理中...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(955);angular.module("portainer.app").component("registryFormQuay",{templateUrl:a,bindings:{model:"=",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/registry-form-quay/registry-form-quay.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="registryFormQuay" ng-submit="$ctrl.formAction()">\n  <div class="col-sm-12 form-section-title">\n    Quay帐户详情\n  </div>\n  \x3c!-- credentials-user --\x3e\n  <div class="form-group">\n    <label for="registry_username" class="col-sm-3 col-lg-2 control-label text-left">用户名</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" id="registry_username" name="registry_username" ng-model="$ctrl.model.Username" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormQuay.registry_username.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormQuay.registry_username.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-user --\x3e\n  \x3c!-- credentials-password --\x3e\n  <div class="form-group">\n    <label for="registry_password" class="col-sm-3 col-lg-2 control-label text-left">密码</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="password" class="form-control" id="registry_password" name="registry_password" ng-model="$ctrl.model.Password" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="registryFormQuay.registry_password.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="registryFormQuay.registry_password.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !credentials-password --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="submit" class="btn btn-primary btn-sm" ng-disabled="$ctrl.actionInProgress || !registryFormQuay.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">处理中...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(20);var a=n(2),r=n.n(a),i=n(957);angular.module("portainer.app").component("scheduleForm",{templateUrl:i,controller:function(){var e=this;e.state={formValidationError:""},e.scheduleValues=[{displayed:"每小时",cron:"0 0 * * *"},{displayed:"每两小时",cron:"0 0 0/2 * *"},{displayed:"每天",cron:"0 0 0 * *"}],e.formValues={datetime:e.model.CronExpression?function(e){if(5!==e.split(" ").length)return r()();return r()(e,"s m H D M")}(e.model.CronExpression):r()(),scheduleValue:e.scheduleValues[0],cronMethod:"basic"},this.action=function(){var t,n;(e.state.formValidationError="","editor"!==e.model.Job.Method||""!==e.model.Job.FileContent)?("basic"===e.formValues.cronMethod?!1===e.model.Recurring?e.model.CronExpression=(t=e.formValues.datetime,n=r()(t),"0 ".concat(n.minutes()," ",n.hours()," ",n.date()," ",n.month()+1)):e.model.CronExpression=e.formValues.scheduleValue.cron:e.model.Recurring=!0,e.formAction()):e.state.formValidationError="脚本文件内容不能为空"},this.editorUpdate=function(t){e.model.Job.FileContent=t.getValue()}},bindings:{model:"=",endpoints:"<",groups:"<",addLabelAction:"<",removeLabelAction:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<"}})},function(e,t){var n="app/portainer/components/forms/schedule-form/scheduleForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="scheduleForm">\n  <div class="col-sm-12 form-section-title">\n    任务计划配置\n  </div>\n  \x3c!-- name-input --\x3e\n  <div class="form-group">\n    <label for="schedule_name" class="col-sm-1 control-label text-left">名称</label>\n    <div class="col-sm-11">\n      <input type="text" class="form-control" ng-model="$ctrl.model.Name" id="schedule_name" name="schedule_name" placeholder="backup-app-prod" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="scheduleForm.schedule_name.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="scheduleForm.schedule_name.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !name-input --\x3e\n  \x3c!-- cron-input --\x3e\n  \x3c!-- schedule-method-select --\x3e\n  <div class="col-sm-12 form-section-title">\n    任务计划配置\n  </div>\n  <div class="form-group"></div>\n  <div class="form-group" style="margin-bottom: 0">\n    <div class="boxselector_wrapper">\n      <div>\n        <input type="radio" id="config_basic" ng-model="$ctrl.formValues.cronMethod" value="basic">\n        <label for="config_basic">\n          <div class="boxselector_header">\n            <i class="fa fa-calendar-alt" aria-hidden="true" style="margin-right: 2px;"></i>\n            基本配置\n          </div>\n          <p>从日历中选择日期</p>\n        </label>\n      </div>\n      <div>\n        <input type="radio" id="config_advanced" ng-model="$ctrl.formValues.cronMethod" value="advanced">\n        <label for="config_advanced">\n          <div class="boxselector_header">\n            <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n            高级配置\n          </div>\n          <p>编写自定义的cron规则</p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !schedule-method-select --\x3e\n  \x3c!-- basic-schedule --\x3e\n  <div ng-if="$ctrl.formValues.cronMethod === \'basic\'">\n    <div class="form-group">\n      <label for="recurring" class="col-sm-2 control-label text-left">重复任务计划</label>\n      <div class="col-sm-10">\n        <label class="switch" style="margin-left: 20px;">\n          <input type="checkbox" name="recurring" ng-model="$ctrl.model.Recurring"><i></i>\n        </label>\n      </div>\n    </div>\n    \x3c!-- not-recurring --\x3e\n    <div ng-if="!$ctrl.model.Recurring">\n      <div class="form-group">\n        <label for="schedule_cron" class="col-sm-2 control-label text-left">任务计划日期</label>\n        <div class="col-sm-10">\n            <input class="form-control" moment-picker ng-model="$ctrl.formValues.datetime" format="YYYY-MM-DD HH:mm">\n        </div>\n        <div ng-show="scheduleForm.datepicker.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="scheduleForm.datepicker.$error">\n              <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !not-recurring --\x3e\n    \x3c!-- recurring --\x3e\n    <div ng-if="$ctrl.model.Recurring">\n      <div class="form-group">\n        <label for="schedule_value" class="col-sm-2 control-label text-left">任务计划时间</label>\n        <div class="col-sm-10">\n          <select id="schedule_value" name="schedule_value" class="form-control"\n            ng-model="$ctrl.formValues.scheduleValue" ng-options="value.displayed for value in $ctrl.scheduleValues" required\n            ></select>\n        </div>\n        <div ng-show="scheduleForm.schedule_value.$invalid">\n          <div class="col-sm-12 small text-warning">\n            <div ng-messages="scheduleForm.schedule_value.$error">\n              <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \x3c!-- !recurring --\x3e\n  </div>\n  \x3c!-- !basic-schedule --\x3e\n  \x3c!-- advanced-schedule --\x3e\n  <div ng-if="$ctrl.formValues.cronMethod === \'advanced\'">\n    <div class="form-group">\n      <label for="schedule_cron" class="col-sm-2 control-label text-left">Cron 任务规则</label>\n      <div class="col-sm-10">\n        <input type="text" class="form-control" ng-model="$ctrl.model.CronExpression" id="schedule_cron" name="schedule_cron"\n          placeholder="分 时 日 月 周" required>\n      </div>\n    </div>\n    <div class="form-group" ng-show="scheduleForm.schedule_cron.$invalid">\n      <div class="col-sm-12 small text-warning">\n        <div ng-messages="scheduleForm.schedule_cron.$error">\n          <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n        </div>\n      </div>\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        您可以参考Linux Cron任务的相关文档来了解更多有关Cron表达式的内容。\n      </span>\n    </div>\n  </div>\n  \x3c!-- !advanced-schedule --\x3e\n  \x3c!-- !cron-input --\x3e\n  <div class="col-sm-12 form-section-title">\n    任务配置\n  </div>\n  \x3c!-- image-input --\x3e\n  <div class="form-group">\n    <label for="schedule_image" class="col-sm-2 control-label text-left">镜像</label>\n    <div class="col-sm-10">\n      <input type="text" class="form-control" ng-model="$ctrl.model.Job.Image" id="schedule_image" name="schedule_image" placeholder="例如 ubuntu:latest" required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="scheduleForm.schedule_image.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="scheduleForm.schedule_image.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !image-input --\x3e\n  \x3c!-- retry-policy --\x3e\n  <div class="form-group">\n    <label for="retrycount" class="col-sm-2 control-label text-left">\n      重试次数\n      <portainer-tooltip position="bottom" message="无法连接到节点时的重试次数。"></portainer-tooltip>\n    </label>\n    <div class="col-sm-10 col-md-4">\n      <input type="number" class="form-control" ng-model="$ctrl.model.Job.RetryCount" id="retrycount" name="retrycount" placeholder="3">\n    </div>\n    <label for="retryinterval" class="col-sm-2 control-label text-left">\n      间隔时间\n      <portainer-tooltip position="bottom" message="以秒为单位的重试时间间隔。"></portainer-tooltip>\n    </label>\n    <div class="col-sm-10 col-md-4">\n      <input type="number" class="form-control" ng-model="$ctrl.model.Job.RetryInterval" id="retryinterval" name="retryinterval" placeholder="30">\n    </div>\n  </div>\n  \x3c!-- !retry-policy --\x3e\n  \x3c!-- execution-method --\x3e\n  <div ng-if="!$ctrl.model.Id">\n    <div class="col-sm-12 form-section-title">\n      任务内容\n    </div>\n    <div class="form-group"></div>\n    <div class="form-group" style="margin-bottom: 0">\n      <div class="boxselector_wrapper">\n        <div>\n          <input type="radio" id="method_editor" ng-model="$ctrl.model.Job.Method" value="editor">\n          <label for="method_editor">\n            <div class="boxselector_header">\n              <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n              Web网页编辑器\n            </div>\n            <p>使用我们的Web网页编辑器</p>\n          </label>\n        </div>\n        <div>\n          <input type="radio" id="method_upload" ng-model="$ctrl.model.Job.Method" value="upload">\n          <label for="method_upload">\n            <div class="boxselector_header">\n              <i class="fa fa-upload" aria-hidden="true" style="margin-right: 2px;"></i>\n              上传\n            </div>\n            <p>从您的计算机上传</p>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !execution-method --\x3e\n  \x3c!-- web-editor --\x3e\n  <div ng-show="$ctrl.model.Job.Method === \'editor\'">\n    <div class="col-sm-12 form-section-title">\n      网页编辑器\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        此计划任务将通过目标主机上的特权容器执行。您可以通过\n        <code>/host</code> 文件夹来访问主机文件系统。\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <code-editor\n        identifier="execute-schedule-editor"\n        placeholder="# 在此处定义或粘贴您的脚本文件内容"\n        on-change="$ctrl.editorUpdate"\n        value="$ctrl.model.Job.FileContent"\n        ></code-editor>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !web-editor --\x3e\n  \x3c!-- upload --\x3e\n  <div ng-show="$ctrl.model.Job.Method === \'upload\'">\n    <div class="col-sm-12 form-section-title">\n      上传\n    </div>\n    <div class="form-group">\n      <span class="col-sm-12 text-muted small">\n        您可以从您的计算机上传脚本文件。\n      </span>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-12">\n        <button class="btn btn-sm btn-primary" ngf-select ng-model="$ctrl.model.Job.File">选择文件</button>\n        <span style="margin-left: 5px;">\n          {{ $ctrl.model.Job.File.name }}\n          <i class="fa fa-times red-icon" ng-if="!$ctrl.model.Job.File" aria-hidden="true"></i>\n        </span>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !upload --\x3e\n  <div class="col-sm-12 form-section-title">\n    目标节点\n  </div>\n  \x3c!-- node-selection --\x3e\n  <multi-endpoint-selector\n    ng-if="$ctrl.endpoints && $ctrl.groups"\n    model="$ctrl.model.Job.Endpoints"\n    endpoints="$ctrl.endpoints" groups="$ctrl.groups"\n  ></multi-endpoint-selector>\n  \x3c!-- !node-selection --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="button" class="btn btn-primary btn-sm"\n        ng-disabled="$ctrl.actionInProgress || !scheduleForm.$valid\n        || $ctrl.model.Job.Endpoints.length === 0\n        || ($ctrl.model.Job.Method === \'upload\' && !$ctrl.model.Job.File)"\n        ng-click="$ctrl.action()" button-spinner="$ctrl.actionInProgress"\n      >\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">执行中...</span>\n      </button>\n      <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">\n        {{ $ctrl.state.formValidationError }}\n      </span>\n    </div>\n  </div>\n\x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(959);angular.module("portainer.app").component("templateForm",{templateUrl:a,controller:function(){this.state={collapseTemplate:!1,collapseContainer:!1,collapseStack:!1,collapseEnv:!1},this.addPortBinding=function(){this.model.Ports.push({containerPort:"",protocol:"tcp"})},this.removePortBinding=function(e){this.model.Ports.splice(e,1)},this.addVolume=function(){this.model.Volumes.push({container:"",bind:"",readonly:!1,type:"auto"})},this.removeVolume=function(e){this.model.Volumes.splice(e,1)},this.addLabel=function(){this.model.Labels.push({name:"",value:""})},this.removeLabel=function(e){this.model.Labels.splice(e,1)},this.addEnvVar=function(){this.model.Env.push({type:1,name:"",label:"",description:"",default:"",preset:!0,select:[]})},this.removeEnvVar=function(e){this.model.Env.splice(e,1)},this.addEnvVarValue=function(e){e.select=e.select||[],e.select.push({name:"",value:""})},this.removeEnvVarValue=function(e,t){e.select.splice(t,1)},this.changeEnvVarType=function(e){e.preset=1===e.type}},bindings:{model:"=",categories:"<",networks:"<",formAction:"<",formActionLabel:"@",actionInProgress:"<",showTypeSelector:"<"}})},function(e,t){var n="app/portainer/components/forms/template-form/templateForm.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<form class="form-horizontal" name="templateForm">\n  \x3c!-- title-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': templateForm.template_title.$invalid }">\n    <label for="template_title" class="col-sm-3 col-lg-2 control-label text-left">标题</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="template_title" ng-model="$ctrl.model.Title" placeholder="例如 my-template" required auto-focus>\n    </div>\n  </div>\n  <div class="form-group" ng-show="templateForm.template_title.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="templateForm.template_title.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项目。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !title-input --\x3e\n  \x3c!-- description-input --\x3e\n  <div class="form-group" ng-class="{ \'has-error\': templateForm.template_description.$invalid }">\n    <label for="template_description" class="col-sm-3 col-lg-2 control-label text-left">描述</label>\n    <div class="col-sm-9 col-lg-10">\n      <input type="text" class="form-control" name="template_description" ng-model="$ctrl.model.Description" placeholder="例如 template description..." required>\n    </div>\n  </div>\n  <div class="form-group" ng-show="templateForm.template_description.$invalid">\n    <div class="col-sm-12 small text-warning">\n      <div ng-messages="templateForm.template_description.$error">\n        <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项目。</p>\n      </div>\n    </div>\n  </div>\n  \x3c!-- !description-input --\x3e\n  <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseTemplate = !$ctrl.state.collapseTemplate">\n    模板\n    <span class="small space-left">\n      <a ng-if="$ctrl.state.collapseTemplate"><i class="fa fa-plus" aria-hidden="true"></i> 展开</a>\n      <a ng-if="!$ctrl.state.collapseTemplate"><i class="fa fa-minus" aria-hidden="true"></i> 收起</a>\n    </span>\n  </div>\n  \x3c!-- template-details --\x3e\n  <div uib-collapse="$ctrl.state.collapseTemplate">\n\n    <div ng-if="$ctrl.showTypeSelector">\n      <div class="form-group"></div>\n      <div class="form-group" style="margin-bottom: 0">\n        <div class="boxselector_wrapper">\n          <div>\n            <input type="radio" id="template_container" ng-model="$ctrl.model.Type" ng-value="1">\n            <label for="template_container">\n              <div class="boxselector_header">\n                <i class="fa fa-server" aria-hidden="true" style="margin-right: 2px;"></i>\n                容器\n              </div>\n              <p>容器模板</p>\n            </label>\n          </div>\n          <div>\n            <input type="radio" id="template_swarm_stack" ng-model="$ctrl.model.Type" ng-value="2">\n            <label for="template_swarm_stack">\n              <div class="boxselector_header">\n                <i class="fa fa-th-list" aria-hidden="true" style="margin-right: 2px;"></i>\n                Swarm集群堆栈\n              </div>\n              <p>Swarm堆栈模板</p>\n            </label>\n          </div>\n          <div>\n            <input type="radio" id="template_compose_stack" ng-model="$ctrl.model.Type" ng-value="3">\n            <label for="template_compose_stack">\n              <div class="boxselector_header">\n                <i class="fa fa-th-list" aria-hidden="true" style="margin-right: 2px;"></i>\n                Compose模板\n              </div>\n              <p>Compose堆栈模板</p>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    \x3c!-- name --\x3e\n    <div class="form-group">\n      <label for="template_name" class="col-sm-3 col-lg-2 control-label text-left">\n        名称\n        <portainer-tooltip position="bottom" message="与模板关联的默认名称"></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" name="template_name" ng-model="$ctrl.model.Name" placeholder="例如 myApp">\n      </div>\n    </div>\n    \x3c!-- !name --\x3e\n    \x3c!-- logo --\x3e\n    <div class="form-group">\n      <label for="template_logo" class="col-sm-3 col-lg-2 control-label text-left">\n        Logo URL地址\n        <portainer-tooltip position="bottom" message="推荐尺寸: 60x60 px"></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <input type="text" class="form-control" name="template_logo" ng-model="$ctrl.model.Logo" placeholder="例如 https://example.com/images/logos/nginx.png">\n      </div>\n    </div>\n    \x3c!-- !logo --\x3e\n    \x3c!-- note --\x3e\n    <div class="form-group">\n      <label for="template_note" class="col-sm-3 col-lg-2 control-label text-left">\n        说明\n        <portainer-tooltip position="bottom" message="模板的使用方法、额外的信息等，支持HTML。"></portainer-tooltip>\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <textarea class="form-control" name="template_note" ng-model="$ctrl.model.Note" placeholder=\'您可以使用此字段指定额外信息。<br/>支持<b>HTML</b>.\'></textarea>\n      </div>\n    </div>\n    \x3c!-- !note --\x3e\n    \x3c!-- platform --\x3e\n    <div class="form-group">\n      <label for="template_platform" class="col-sm-3 col-lg-2 control-label text-left">\n        平台\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <select class="form-control" name="template_platform" ng-model="$ctrl.model.Platform">\n          <option value="">跨平台</option>\n          <option value="linux">Linux</option>\n          <option value="windows">Windows</option>\n        </select>\n      </div>\n    </div>\n    \x3c!-- !platform --\x3e\n    \x3c!-- categories --\x3e\n    <div class="form-group">\n      <label for="template_categories" class="col-sm-3 col-lg-2 control-label text-left">\n        分类\n      </label>\n      <div class="col-sm-9 col-lg-10">\n        <ui-select multiple tagging tagging-label="(new category)" ng-model="$ctrl.model.Categories" sortable="true" style="width: 300px;" title="选择一个分类">\n          <ui-select-match placeholder="选择类别...">{{ $item }}</ui-select-match>\n          <ui-select-choices repeat="category in $ctrl.categories | filter:$select.search">\n            {{ category }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n    </div>\n    \x3c!-- !categories --\x3e\n    \x3c!-- administrator-only --\x3e\n    <div class="form-group">\n      <div class="col-sm-12">\n        <label for="tls" class="control-label text-left">\n          管理员模板\n          <portainer-tooltip position="bottom" message="选择此模板是否仅供管理员用户使用。"></portainer-tooltip>\n        </label>\n        <label class="switch" style="margin-left: 20px;">\n          <input type="checkbox" ng-model="$ctrl.model.AdministratorOnly"><i></i>\n        </label>\n      </div>\n    </div>\n    \x3c!-- administrator-only --\x3e\n  </div>\n  \x3c!-- !template-details --\x3e\n  <div ng-if="$ctrl.model.Type === 2 || $ctrl.model.Type === 3">\n    <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseStack = !$ctrl.state.collapseStack">\n      堆栈\n      <span class="small space-left">\n        <a ng-if="$ctrl.state.collapseStack"><i class="fa fa-plus" aria-hidden="true"></i> 展开</a>\n        <a ng-if="!$ctrl.state.collapseStack"><i class="fa fa-minus" aria-hidden="true"></i> 收起</a>\n      </span>\n    </div>\n    \x3c!-- stack-details --\x3e\n    <div uib-collapse="$ctrl.state.collapseStack">\n      \x3c!-- repository-url --\x3e\n      <div class="form-group" ng-class="{ \'has-error\': templateForm.template_repository_url.$invalid }">\n        <label for="template_repository_url" class="col-sm-3 col-lg-2 control-label text-left">模板仓库URL地址</label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_repository_url" ng-model="$ctrl.model.Repository.url" placeholder="https://github.com/example/example-compose" required>\n        </div>\n      </div>\n      <div class="form-group" ng-show="templateForm.template_repository_url.$invalid">\n        <div class="col-sm-12 small text-warning">\n          <div ng-messages="templateForm.template_repository_url.$error">\n            <p ng-message="required"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> 这是必填项。</p>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !repository-url --\x3e\n      \x3c!-- composefile-path --\x3e\n      <div class="form-group">\n        <label for="template_repository_path" class="col-sm-3 col-lg-2 control-label text-left">\n          Compose文件路径\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_repository_path" ng-model="$ctrl.model.Repository.stackfile" placeholder=\'docker-compose.yml\'>\n        </div>\n      </div>\n      \x3c!-- !composefile-path --\x3e\n    </div>\n    \x3c!-- !stack-details --\x3e\n  </div>\n  <div ng-if="$ctrl.model.Type === 1">\n    <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseContainer = !$ctrl.state.collapseContainer">\n      容器\n      <span class="small space-left">\n        <a ng-if="$ctrl.state.collapseContainer"><i class="fa fa-plus" aria-hidden="true"></i> 展开</a>\n        <a ng-if="!$ctrl.state.collapseContainer"><i class="fa fa-minus" aria-hidden="true"></i> 收起</a>\n      </span>\n    </div>\n    \x3c!-- container-details --\x3e\n    <div uib-collapse="$ctrl.state.collapseContainer">\n      <por-image-registry\n        image="$ctrl.model.Image"\n        registry="$ctrl.model.Registry"\n        auto-complete="true"\n        label-class="col-sm-2" input-class="col-sm-10 col-md-4"\n      ></por-image-registry>\n      \x3c!-- command --\x3e\n      <div class="form-group">\n        <label for="template_command" class="col-sm-3 col-lg-2 control-label text-left">\n          命令\n          <portainer-tooltip position="bottom" message="指定要在容器中运行的命令。如果未指定，容器将使用Dockerfile中指定的默认命令。"></portainer-tooltip>\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_command" ng-model="$ctrl.model.Command" placeholder=\'/bin/bash -c \\"echo hello\\" && exit 777\'>\n        </div>\n      </div>\n      \x3c!-- !command --\x3e\n      \x3c!-- hostname --\x3e\n      <div class="form-group">\n        <label for="template_hostname" class="col-sm-3 col-lg-2 control-label text-left">\n          主机名\n          <portainer-tooltip position="bottom" message="设置容器的主机名。如果未指定，将使用Docker的默认值。"></portainer-tooltip>\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <input type="text" class="form-control" name="template_hostname" ng-model="$ctrl.model.Hostname" placeholder=\'mycontainername\'>\n        </div>\n      </div>\n      \x3c!-- !hostname --\x3e\n      \x3c!-- network --\x3e\n      <div class="form-group">\n        <label for="template_network" class="col-sm-3 col-lg-2 control-label text-left">\n          网络\n        </label>\n        <div class="col-sm-10">\n          <select class="form-control" ng-options="net.Name for net in $ctrl.networks" ng-model="$ctrl.model.Network">\n            <option disabled hidden value="">选择一个网络</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !network --\x3e\n      \x3c!-- port-mapping --\x3e\n      <div class="form-group" >\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">端口映射</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addPortBinding()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的端口\n          </span>\n        </div>\n        <div class="col-sm-12" style="margin-top: 10px" ng-if="$ctrl.model.Ports.length > 0">\n          <span class="small text-muted">如果将主机端口留空，系统将自动分配端口。</span>\n        </div>\n        \x3c!-- port-mapping-input-list --\x3e\n        <div class="col-sm-12">\n          <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n            <div ng-repeat="portBinding in $ctrl.model.Ports" style="margin-top: 2px;">\n              \x3c!-- host-port --\x3e\n              <div class="input-group col-sm-4 input-group-sm">\n                <span class="input-group-addon">主机</span>\n                <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="例如 80 或 1.2.3.4:80 (可选)">\n              </div>\n              \x3c!-- !host-port --\x3e\n              <span style="margin: 0 10px 0 10px;">\n                <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n              </span>\n              \x3c!-- container-port --\x3e\n              <div class="input-group col-sm-4 input-group-sm">\n                <span class="input-group-addon">容器</span>\n                <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="例如 80">\n              </div>\n              \x3c!-- !container-port --\x3e\n              \x3c!-- protocol-actions --\x3e\n              <div class="input-group col-sm-3 input-group-sm">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                  <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removePortBinding($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n              \x3c!-- !protocol-actions --\x3e\n            </div>\n          </div>\n        </div>\n        \x3c!-- !port-mapping-input-list --\x3e\n      </div>\n      \x3c!-- !port-mapping --\x3e\n      \x3c!-- volumes --\x3e\n      <div class="form-group" >\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">存储卷映射</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addVolume()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> 映射额外的存储卷\n          </span>\n        </div>\n        <div class="col-sm-12" style="margin-top: 10px" ng-if="$ctrl.model.Volumes.length > 0">\n          <span class="small text-muted">如果选择 <b>自动</b> 选项，系统将自动创建并映射本地存储卷。</span>\n        </div>\n        <div ng-repeat="volume in $ctrl.model.Volumes">\n          <div class="col-sm-12" style="margin-top: 10px;">\n            \x3c!-- volume-line1 --\x3e\n            <div class="col-sm-12 form-inline">\n              \x3c!-- container-path --\x3e\n              <div class="input-group input-group-sm col-sm-6">\n                <span class="input-group-addon">容器</span>\n                <input type="text" class="form-control" ng-model="volume.container" placeholder="例如 /path/in/container">\n              </div>\n              \x3c!-- !container-path --\x3e\n              \x3c!-- volume-type --\x3e\n              <div class="input-group col-sm-5" style="margin-left: 5px;">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'auto\'" ng-click="volume.bind = \'\'">自动</label>\n                  <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.bind = \'\'">绑定</label>\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeVolume($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n              \x3c!-- !volume-type --\x3e\n            </div>\n            \x3c!-- !volume-line1 --\x3e\n            \x3c!-- volume-line2 --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 5px;" ng-if="volume.type !== \'auto\'">\n              <i class="fa fa-long-arrow-alt-right" aria-hidden="true"></i>\n              \x3c!-- bind --\x3e\n              <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                <span class="input-group-addon">主机</span>\n                <input type="text" class="form-control" ng-model="volume.bind" placeholder="例如 /path/on/host">\n              </div>\n              \x3c!-- !bind --\x3e\n              \x3c!-- read-only --\x3e\n              <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                <div class="btn-group btn-group-sm">\n                  <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="false">可写</label>\n                  <label class="btn btn-primary" ng-model="volume.readonly" uib-btn-radio="true">只读</label>\n                </div>\n              </div>\n              \x3c!-- !read-only --\x3e\n            </div>\n            \x3c!-- !volume-line2 --\x3e\n          </div>\n        </div>\n      </div>\n      \x3c!-- !volumes --\x3e\n      \x3c!-- labels --\x3e\n      <div class="form-group" >\n        <div class="col-sm-12" style="margin-top: 5px;">\n          <label class="control-label text-left">标签</label>\n          <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addLabel()">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加标签\n          </span>\n        </div>\n        \x3c!-- labels-input-list --\x3e\n        <div class="col-sm-12">\n          <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n            <div ng-repeat="label in $ctrl.model.Labels" style="margin-top: 2px;">\n              <div class="input-group col-sm-5 input-group-sm">\n                <span class="input-group-addon">名称</span>\n                <input type="text" class="form-control" ng-model="label.name" placeholder="例如 com.example.foo">\n              </div>\n              <div class="input-group col-sm-5 input-group-sm">\n                <span class="input-group-addon">参数值</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="例如 bar">\n              </div>\n              <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeLabel($index)">\n                <i class="fa fa-trash" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        \x3c!-- !labels-input-list --\x3e\n      </div>\n      \x3c!-- !labels --\x3e\n      \x3c!-- restart_policy --\x3e\n      <div class="form-group">\n        <label for="template_restart_policy" class="col-sm-3 col-lg-2 control-label text-left">\n          重启策略\n        </label>\n        <div class="col-sm-9 col-lg-10">\n          <select class="form-control" name="template_platform" ng-model="$ctrl.model.RestartPolicy">\n            <option value="always">任何</option>\n            <option value="unless-stopped">非停止</option>\n            <option value="on-failure">失败后</option>\n            <option value="no">空</option>\n          </select>\n        </div>\n      </div>\n      \x3c!-- !restart_policy --\x3e\n      \x3c!-- privileged-mode --\x3e\n      <div class="form-group">\n        <div class="col-sm-12">\n          <label for="tls" class="control-label text-left">\n            特权模式\n            <portainer-tooltip position="bottom" message="以特权模式启动容器。"></portainer-tooltip>\n          </label>\n          <label class="switch" style="margin-left: 20px;">\n            <input type="checkbox" ng-model="$ctrl.model.Privileged"><i></i>\n          </label>\n        </div>\n      </div>\n      \x3c!-- !privileged-mode --\x3e\n      \x3c!-- interactive-mode --\x3e\n      <div class="form-group">\n        <div class="col-sm-12">\n          <label for="tls" class="control-label text-left">\n            交互模式\n            <portainer-tooltip position="bottom" message="在前台启动容器<br/>（相当于使用“-i -t”标志）。"></portainer-tooltip>\n          </label>\n          <label class="switch" style="margin-left: 20px;">\n            <input type="checkbox" ng-model="$ctrl.model.Interactive"><i></i>\n          </label>\n        </div>\n      </div>\n      \x3c!-- !interactive-mode --\x3e\n    </div>\n    \x3c!-- !container-details --\x3e\n  </div>\n  <div class="col-sm-12 form-section-title interactive" ng-click="$ctrl.state.collapseEnv = !$ctrl.state.collapseEnv">\n    环境\n    <span class="small space-left">\n      <a ng-if="$ctrl.state.collapseEnv"><i class="fa fa-plus" aria-hidden="true"></i> 展开</a>\n      <a ng-if="!$ctrl.state.collapseEnv"><i class="fa fa-minus" aria-hidden="true"></i> 收起</a>\n    </span>\n  </div>\n  \x3c!-- environment-details --\x3e\n  <div uib-collapse="$ctrl.state.collapseEnv">\n    \x3c!-- env --\x3e\n    <div class="form-group" >\n      <div class="col-sm-12" style="margin-top: 5px;">\n        <label class="control-label text-left">环境变量</label>\n        <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addEnvVar()">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加变量\n        </span>\n      </div>\n      \x3c!-- env-var-list --\x3e\n      <div style="margin-top: 10px;">\n        <div class="col-sm-12 template-envvar" ng-repeat="var in $ctrl.model.Env" style="margin-top: 10px;">\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="preset_var_{{$index}}" ng-model="var.type" ng-value="1" ng-change="$ctrl.changeEnvVarType(var)">\n                <label for="preset_var_{{$index}}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-user-slash" aria-hidden="true" style="margin-right: 2px;"></i>\n                    预设置\n                  </div>\n                  <p>预设置的变量</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="text_var_{{$index}}" ng-model="var.type" ng-value="2" ng-change="$ctrl.changeEnvVarType(var)">\n                <label for="text_var_{{$index}}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-edit" aria-hidden="true" style="margin-right: 2px;"></i>\n                    文本\n                  </div>\n                  <p>自由文本值</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="select_var_{{$index}}" ng-model="var.type" ng-value="3">\n                <label for="select_var_{{$index}}">\n                  <div class="boxselector_header">\n                    <i class="fa fa-list-ol" aria-hidden="true" style="margin-right: 2px;"></i>\n                    选择\n                  </div>\n                  <p>从列表中选取值</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label text-left">\n              名称\n            </label>\n            <div class="col-sm-8">\n              <input type="text" class="form-control" ng-model="var.name" placeholder="env_var">\n            </div>\n            <div class="col-sm-2">\n              <button class="btn btn-sm btn-danger space-left" type="button" ng-click="$ctrl.removeEnvVar($index)">\n                <i class="fa fa-trash" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n          <div ng-if="var.type == 2 || var.type == 3">\n            <div  class="form-group">\n              <label class="col-sm-2 control-label text-left">\n                标签\n              </label>\n              <div class="col-sm-10">\n                <input type="text" class="form-control" ng-model="var.label" placeholder="选择一个标签">\n              </div>\n            </div>\n            <div  class="form-group">\n              <label class="col-sm-2 control-label text-left" style="margin-top: 2px;">\n                描述\n              </label>\n              <div class="col-sm-10" style="margin-top: 2px;">\n                <input type="text" class="form-control" ng-model="var.description" placeholder="提示">\n              </div>\n            </div>\n          </div>\n          <div class="form-group" ng-if="var.type === 1 || var.type === 2">\n            <label class="col-sm-2 control-label text-left">\n              默认值\n            </label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-model="var.default" placeholder="default_value">\n            </div>\n          </div>\n          <div ng-if="var.type === 3" style="margin-bottom: 5px;" class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">参数值</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="$ctrl.addEnvVarValue(var)">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> 添加允许的参数值\n              </span>\n            </div>\n            \x3c!-- envvar-values-list --\x3e\n            <div class="col-sm-12">\n              <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                <div ng-repeat="val in var.select" style="margin-top: 2px;">\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">名称</span>\n                    <input type="text" class="form-control" ng-model="val.text" placeholder="Yes, I agree">\n                  </div>\n                  <div class="input-group col-sm-5 input-group-sm">\n                    <span class="input-group-addon">参数值</span>\n                    <input type="text" class="form-control" ng-model="val.value" placeholder="Y">\n                  </div>\n                  <div class="input-group col-sm-1 input-group-sm">\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="$ctrl.removeEnvVarValue(var, $index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                    <input style="margin-left: 5px;" type="checkbox" ng-model="val.default" id="val_default_{{$index}}"><label for="val_default_{{$index}}" class="space-left">默认</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- envvar-values-list --\x3e\n          </div>\n          <div class="col-sm-12" ng-show="$ctrl.model.Env.length > 1">\n            <div class="line-separator"></div>\n          </div>\n        </div>\n      </div>\n      \x3c!-- !env-var-list --\x3e\n    </div>\n    \x3c!-- !env --\x3e\n  </div>\n  \x3c!-- !environment-details --\x3e\n  \x3c!-- actions --\x3e\n  <div class="col-sm-12 form-section-title">\n    操作\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12">\n      <button type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.formAction()" ng-disabled="$ctrl.actionInProgress || !templateForm.$valid" button-spinner="$ctrl.actionInProgress">\n        <span ng-hide="$ctrl.actionInProgress">{{ $ctrl.formActionLabel }}</span>\n        <span ng-show="$ctrl.actionInProgress">执行中...</span>\n      </button>\n    </div>\n  </div>\n  \x3c!-- !actions --\x3e\n</form>\n')}]),e.exports=n},function(e,t,n){var a=n(961);angular.module("portainer.app").component("groupAssociationTable",{templateUrl:a,controller:function(){this.state={orderBy:"Name",reverseOrder:!1,paginatedItemLimit:"10",textFilter:""},this.changeOrderBy=function(e){this.state.reverseOrder=this.state.orderBy===e&&!this.state.reverseOrder,this.state.orderBy=e}},bindings:{dataset:"<",entryClick:"<",emptyDatasetMessage:"@"}})},function(e,t){var n="app/portainer/components/group-association-table/groupAssociationTable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <table class="table table-hover">\n    <div class="col-sm-12">\n      <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n      <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索...">\n    </div>\n    <thead>\n      <tr>\n        <th>\n          <a ng-click="$ctrl.changeOrderBy(\'Name\')">\n            名称\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && !$ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-down"></span>\n            <span ng-show="$ctrl.state.orderBy == \'Name\' && $ctrl.state.reverseOrder" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-click="$ctrl.entryClick(item)" class="interactive" dir-paginate="item in $ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit">\n        <td>{{ item.Name }}</td>\n      </tr>\n      <tr ng-if="!$ctrl.dataset">\n        <td colspan="2" class="text-center text-muted">载入中...</td>\n      </tr>\n      <tr ng-if="$ctrl.dataset.length === 0 || ($ctrl.dataset | filter:$ctrl.state.textFilter | orderBy:$ctrl.state.orderBy:$ctrl.state.reverseOrder | itemsPerPage: $ctrl.state.paginatedItemLimit).length === 0">\n        <td colspan="2" class="text-center text-muted">{{ $ctrl.emptyDatasetMessage }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div class="footer" ng-if="$ctrl.dataset">\n    <div class="paginationControls">\n      <form class="form-inline">\n        <span class="limitSelector">\n          <span style="margin-right: 5px;">\n            每页项目\n          </span>\n          <select ng-model="$ctrl.state.paginatedItemLimit">\n            <option value="0">全部</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </span>\n        <dir-pagination-controls max-size="5"></dir-pagination-controls>\n      </form>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdHeaderContent",["Authentication",function(e){return{requires:"^rdHeader",transclude:!0,link:function(t){t.username=e.getUserDetails().username},template:'<div class="breadcrumb-links"><div class="pull-left" ng-transclude></div><div class="pull-right" ng-if="username"><a ui-sref="portainer.account" style="margin-right: 5px;"><u><i class="fa fa-wrench" aria-hidden="true"></i> 我的账户 </u></a><a ui-sref="portainer.auth({logout: true})" class="text-danger" style="margin-right: 25px;"><u><i class="fa fa-sign-out-alt" aria-hidden="true"></i> 登出</u></a></div></div>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdHeaderTitle",["Authentication",function(e){return{requires:"^rdHeader",scope:{titleText:"@"},link:function(t){t.username=e.getUserDetails().username},transclude:!0,template:'<div class="page white-space-normal">{{titleText}}<span class="header_title_content" ng-transclude></span><span class="pull-right user-box" ng-if="username"><i class="fa fa-user-circle" aria-hidden="true"></i> {{username}}</span><a ui-sref="portainer.about" class="pull-right" style="font-size:14px;margin-right:15px;margin-top:2px;"><span class="fa fa-life-ring fa-fw red-icon"></span>  帮助与支持</a><a ui-sref="portainer.uiplugin" class="pull-right" style="font-size:14px;margin-right:15px;margin-top:2px;"><span class="fa fa-tag fa-fw green-icon"></span>  汉化说明</a></div>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdHeader",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="row header"><div id="loadingbar-placeholder"></div><div class="col-xs-12"><div class="meta" ng-transclude></div></div></div>',restrict:"EA"}})},function(e,t,n){var a=n(966);angular.module("portainer.app").component("informationPanelOffline",{templateUrl:a,controller:"InformationPanelOfflineController"})},function(e,t){var n="app/portainer/components/information-panel-offline/informationPanelOffline.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<information-panel title-text="离线模式" cant-dismiss="true">\n  <span class="small">\n    <p class="text-muted">\n      <i class="fa fa-exclamation-circle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n      此节点当前处于离线的脱机状态（只读），显示的数据基于最近的可用快照。\n    </p>\n    <p class="text-muted">\n      <i class="fa fa-clock" aria-hidden="true" style="margin-right: 2px;"></i>\n      最近快照: {{ $ctrl.snapshotTime | getisodatefromtimestamp }}\n    </p>\n    <button type="button" class="btn btn-xs btn-primary" ng-click="$ctrl.triggerSnapshot()" ng-if="$ctrl.showRefreshButton">\n      <i class="fa fa-sync space-right" aria-hidden="true"></i>刷新\n    </button>\n  </span>\n</information-panel>')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("InformationPanelOfflineController",["$state","EndpointProvider","EndpointService","Authentication","Notifications",function(e,t,n,a,r){var i=this;this.$onInit=function(){var e=t.endpointID();i.showRefreshButton=a.isAdmin(),n.endpoint(e).then(function(e){i.snapshotTime=e.Snapshots[0].Time}).catch(function(e){r.error("失败",e,"无法检索节点信息")})},this.triggerSnapshot=function(){var a=t.endpointID();n.snapshotEndpoint(a).then(function(){e.reload()}).catch(function(e){r.error("失败",e,"节点快照期间发生错误")})}}])},function(e,t,n){var a=n(969);angular.module("portainer.app").component("informationPanel",{templateUrl:a,bindings:{titleText:"@",dismissAction:"&?"},transclude:!0})},function(e,t){var n="app/portainer/components/information-panel/informationPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="col-sm-12 form-section-title">\n          <span style="float: left;">\n            {{ $ctrl.titleText }}\n          </span>\n          <span class="small" style="float: right;" ng-if="$ctrl.dismissAction">\n            <a ng-click="$ctrl.dismissAction()"><i class="fa fa-times"></i> 弃用</a>\n          </span>\n        </div>\n        <div class="form-group">\n          <ng-transclude></ng-transclude>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdLoading",function(){return{restrict:"AE",template:'<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'}})},function(e,t,n){var a=n(972);angular.module("portainer.app").component("motdPanel",{templateUrl:a,bindings:{motd:"<",dismissAction:"&?"},transclude:!0})},function(e,t){var n="app/portainer/components/motd-panel/motdPanel.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body classes="motd-body">\n        <style ng-if="$ctrl.motd.Style">\n          {{ $ctrl.motd.Style }}\n        </style>\n        <div ng-style="{{ $ctrl.motd.ContentLayout ? $ctrl.motd.ContentLayout : {} }}">\n          <div class="col-sm-12 form-section-title">\n            <span style="float: left;">\n              {{ $ctrl.motd.Title }}\n            </span>\n            <span class="small" style="float: right;" ng-if="$ctrl.dismissAction">\n              <a ng-click="$ctrl.dismissAction()"><i class="fa fa-times"></i> 关闭</a>\n            </span>\n          </div>\n          <div class="form-group">\n            <span class="text-muted">\n              <p ng-bind-html="$ctrl.motd.Message"></p>\n            </span>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(974);angular.module("portainer.app").component("multiEndpointSelector",{templateUrl:a,controller:"MultiEndpointSelectorController",bindings:{model:"=",endpoints:"<",groups:"<"}})},function(e,t){var n="app/portainer/components/multi-endpoint-selector/multiEndpointSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<ui-select multiple ng-model="$ctrl.model" close-on-select="false" style="margin-top: 55px">\n  <ui-select-match placeholder="选择一个或多个节点">\n    <span>\n      {{ $item.Name }}\n      <span ng-if="$item.Tags.length">({{ $item.Tags | arraytostr }})</span>\n     </span>\n  </ui-select-match>\n  <ui-select-choices group-by="$ctrl.groupEndpoints" group-filter="$ctrl.sortGroups" repeat="endpoint.Id as endpoint in $ctrl.endpoints | filter: { Name: $select.search }">\n    <span>\n      {{ endpoint.Name }}\n      <span ng-if="endpoint.Tags.length">({{ endpoint.Tags | arraytostr }})</span>\n     </span>\n  </ui-select-choices>\n</ui-select>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(18);var a=n(114);angular.module("portainer.app").controller("MultiEndpointSelectorController",function(){var e=this;this.sortGroups=function(e){return Object(a.a)(e,["name"])},this.groupEndpoints=function(t){for(var n=0;n<e.availableGroups.length;n++){var a=e.availableGroups[n];if(t.GroupId===a.Id)return a.Name}},this.$onInit=function(){var e,t;this.availableGroups=(e=this.groups,t=this.endpoints,e.filter(function(e){for(var n=0;n<t.length;n++){var a=t[n];if(a.GroupId===e.Id)return!0}return!1}))}})},function(e,t,n){"use strict";n.r(t);n(70);angular.module("portainer.app").directive("onEnterKey",[function(){return{restrict:"A",link:function(e,t,n){t.bind("keydown keypress",function(t){13===t.which&&(t.preventDefault(),e.$apply(function(){e.$eval(n.onEnterKey)}))})}}}])},function(e,t,n){var a=n(978);angular.module("portainer.app").component("productItem",{templateUrl:a,bindings:{model:"<",goTo:"<"}})},function(e,t,n){var a="app/portainer/components/product-list/product-item/productItem.html",r='\x3c!-- extension --\x3e\n<div class="blocklist-item" ng-click="$ctrl.goTo($ctrl.model)">\n  <div class="blocklist-item-box">\n    \x3c!-- extension-image --\x3e\n    <span class="blocklist-item-logo">\n        <img class="blocklist-item-logo" ng-if="$ctrl.model.Id == 1" src="'+n(979)+'" />\n        <img class="blocklist-item-logo" ng-if="$ctrl.model.Id == 2" src="'+n(980)+'" />\n    </span>\n    \x3c!-- !extension-image --\x3e\n    \x3c!-- extension-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Name }}\n          </span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-desc">\n            {{ $ctrl.model.ShortDescription }}\n          </span>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !extension-details --\x3e\n  </div>\n  \x3c!-- !extension --\x3e\n</div>\n';window.angular.module("ng").run(["$templateCache",function(e){e.put(a,r)}]),e.exports=a},function(e,t,n){e.exports=n.p+"997504720ff4637f46908f29650e5b6b.png"},function(e,t,n){e.exports=n.p+"eefa133701bfa49ca250853cefbf7b89.png"},function(e,t,n){var a=n(982);angular.module("portainer.app").component("productList",{templateUrl:a,bindings:{titleText:"@",products:"<",goTo:"<"}})},function(e,t){var n="app/portainer/components/product-list/productList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n\n      <div class="blocklist">\n        <product-item ng-repeat="product in $ctrl.products"\n          model="product"\n          go-to="$ctrl.goTo"\n        ></product-item>\n      </div>\n\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(984);angular.module("portainer.app").component("slider",{templateUrl:a,controller:"SliderController",bindings:{model:"=",onChange:"&",floor:"<",ceil:"<",step:"<",precision:"<"}})},function(e,t){var n="app/portainer/components/slider/slider.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div>\n  <rzslider rz-slider-options="$ctrl.options" rz-slider-model="$ctrl.model"></rzslider>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").controller("SliderController",function(){var e=this;e.options={floor:e.floor,ceil:e.ceil,step:e.step,precision:e.precision,showSelectionBar:!0,enforceStep:!1,translate:function(t,n,a){return"floor"===a&&0===e.floor||0===t?"unlimited":t},onChange:function(){e.onChange()}}})},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("StackDuplicationFormController",["Notifications",function(e){var t=this;function n(){return t.formValues.endpoint&&t.formValues.endpoint.Id}t.state={duplicationInProgress:!1,migrationInProgress:!1},t.formValues={endpoint:null,newName:""},t.isFormValidForDuplication=function(){return n()&&t.formValues.newName},t.isFormValidForMigration=n,t.duplicateStack=function(){if(!t.formValues.newName)return void e.error("失败",null,"堆栈名称必须在复制时指定");t.state.duplicationInProgress=!0,t.onDuplicate({endpointId:t.formValues.endpoint.Id,name:t.formValues.newName?t.formValues.newName:void 0}).finally(function(){t.state.duplicationInProgress=!1})},t.migrateStack=function(){t.state.migrationInProgress=!0,t.onMigrate({endpointId:t.formValues.endpoint.Id,name:t.formValues.newName?t.formValues.newName:void 0}).finally(function(){t.state.migrationInProgress=!1})},t.isMigrationButtonDisabled=function(){return!t.isFormValidForMigration()||t.state.duplicationInProgress||t.state.migrationInProgress||t.formValues.endpoint&&t.formValues.endpoint.Id===t.currentEndpointId}}])},function(e,t,n){var a=n(988);angular.module("portainer.app").component("stackDuplicationForm",{templateUrl:a,controller:"StackDuplicationFormController",bindings:{onDuplicate:"&",onMigrate:"&",endpoints:"<",groups:"<",currentEndpointId:"<"}})},function(e,t){var n="app/portainer/components/stack-duplication-form/stack-duplication-form.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div authorization="PortainerStackMigrate">\n  <div class="col-sm-12 form-section-title">\n    堆栈 复制/迁移\n  </div>\n  <div class="form-group">\n    <span class="small" style="margin-top: 10px;">\n      <p class="text-muted">\n        此功能允许您复制或迁移此堆栈。\n      </p>\n    </span>\n    <div>\n      <div class="form-group">\n        <input class="form-control" placeholder="堆栈名称（迁移可选）"\n          aria-placeholder="Stack name"\n          ng-model="$ctrl.formValues.newName" />\n      </div>\n      <endpoint-selector ng-if="$ctrl.endpoints && $ctrl.groups" model="$ctrl.formValues.endpoint"\n        endpoints="$ctrl.endpoints" groups="$ctrl.groups"></endpoint-selector>\n      <button class="btn btn-sm btn-primary" ng-click="$ctrl.migrateStack()"\n        ng-disabled="$ctrl.isMigrationButtonDisabled()"\n        style="margin-top: 7px; margin-left: 0;"\n        button-spinner="$ctrl.state.migrationInProgress">\n          <span ng-hide="$ctrl.state.migrationInProgress">\n            <i class="fa fa-long-arrow-alt-right space-right"\n              aria-hidden="true"></i> 迁移\n          </span>\n          <span ng-show="$ctrl.state.migrationInProgress">正在迁移...</span>\n      </button>\n      <button\n        class="btn btn-sm btn-primary"\n        ng-click="$ctrl.duplicateStack()"\n        ng-disabled="!$ctrl.isFormValidForDuplication() || $ctrl.state.duplicationInProgress || $ctrl.state.migrationInProgress"\n        style="margin-top: 7px; margin-left: 0;"\n        button-spinner="$ctrl.state.duplicationInProgress">\n          <span ng-hide="$ctrl.state.duplicationInProgress">\n            <i class="fa fa-clone space-right"\n              aria-hidden="true"></i> 复制\n          </span>\n          <span ng-show="$ctrl.state.duplicationInProgress">正在复制...</span>\n      </button>\n    </div>\n  </div>\n</div>\n')}]),e.exports=n},function(e,t,n){var a=n(990);angular.module("portainer.app").component("tagSelector",{templateUrl:a,controller:"TagSelectorController",bindings:{tags:"<",model:"="}})},function(e,t){var n="app/portainer/components/tag-selector/tagSelector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div ng-show="$ctrl.model.length > 0" class="col-sm-12" style="padding: 0; margin-bottom: 15px;">\n  <label class="col-sm-3 col-lg-2 control-label text-left">\n    已选择的标签\n  </label>\n  <div class="col-sm-9 col-lg-10" style="padding-top: 4px;">\n    <span class="tag space-right interactive" ng-repeat="tag in $ctrl.model" ng-click="$ctrl.removeTag(tag)">\n      {{ tag }}\n      <a title="Remove tag" ng-click="$ctrl.removeTag(tag)" style="margin-left: 2px;">\n        <span class="fa fa-trash-alt white-icon" aria-hidden="true"></span>\n      </a>\n    </span>\n  </div>\n</div>\n<div class="col-sm-12" style="padding: 0">\n  <label for="tags" class="col-sm-3 col-lg-2 control-label text-left">\n    标签\n  </label>\n  <div class="col-sm-9 col-lg-10" ng-if="$ctrl.tags.length > 0">\n    <input\n      type="text" ng-model="$ctrl.state.selectedValue"\n      id="tags" class="form-control"\n      placeholder="选择标签..."\n      uib-typeahead="tag for tag in $ctrl.tags | filter:$viewValue | limitTo:7"\n      typeahead-on-select="$ctrl.selectTag($item, $model, $label)"\n      typeahead-no-results="$ctrl.state.noResult"\n      typeahead-show-hint="true" typeahead-min-length="0" />\n  </div>\n  <div class="col-sm-9 col-lg-10" ng-if="$ctrl.tags.length === 0">\n    <span class="small text-muted">\n      没有可用的标签。\n    </span>\n  </div>\n</div>\n<div class="col-sm-offset-3 col-lg-offset-2 col-sm-12" ng-if="$ctrl.state.noResult" style="margin-top: 2px;">\n  <span class="small text-muted">\n    没有标签与您的过滤器匹配。\n  </span>\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);n(5);var a=n(90),r=n(334);angular.module("portainer.app").controller("TagSelectorController",function(){this.$onChanges=function(e){angular.isDefined(e.tags.currentValue)&&(this.tags=Object(r.a)(e.tags.currentValue,this.model))},this.state={selectedValue:"",noResult:!1},this.selectTag=function(e){this.state.selectedValue="",this.model.push(e),this.tags=Object(a.a)(this.tags,function(t){return t!==e})},this.removeTag=function(e){var t=this.model.indexOf(e);t>-1&&(this.model.splice(t,1),this.tags.push(e))}})},function(e,t,n){var a=n(993);angular.module("portainer.app").component("templateItem",{templateUrl:a,bindings:{model:"=",onSelect:"<",onDelete:"<",showUpdateAction:"<",showDeleteAction:"<"}})},function(e,t){var n="app/portainer/components/template-list/template-item/templateItem.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'\x3c!-- template --\x3e\n<div ng-class="{ \'blocklist-item--selected\': $ctrl.model.Selected }" class="blocklist-item" ng-click="$ctrl.onSelect($ctrl.model)">\n  <div class="blocklist-item-box">\n    \x3c!-- template-image --\x3e\n    <span ng-if="$ctrl.model.Logo">\n      <img class="blocklist-item-logo" ng-src="{{ $ctrl.model.Logo }}" />\n    </span>\n    <span class="blocklist-item-logo" ng-if="!$ctrl.model.Logo">\n      <i class="fa fa-rocket fa-4x blue-icon" aria-hidden="true"></i>\n    </span>\n    \x3c!-- !template-image --\x3e\n    \x3c!-- template-details --\x3e\n    <span class="col-sm-12">\n      \x3c!-- blocklist-item-line1 --\x3e\n      <div class="blocklist-item-line">\n        <span>\n          <span class="blocklist-item-title">\n            {{ $ctrl.model.Title }}\n          </span>\n          <span class="space-left blocklist-item-subtitle">\n            <span>\n              <i class="fab fa-linux" aria-hidden="true" ng-if="$ctrl.model.Platform === \'linux\' || !$ctrl.model.Platform"></i>\n              <span ng-if="!$ctrl.model.Platform"> &amp; </span>\n              <i class="fab fa-windows" aria-hidden="true" ng-if="$ctrl.model.Platform === \'windows\' || !$ctrl.model.Platform"></i>\n            </span>\n            <span>\n              {{ $ctrl.model.Type === 1 ? \'container\' : \'stack\' }}\n            </span>\n          </span>\n        </span>\n        <span class="text-small">\n          <a ui-sref="portainer.templates.template({ id: $ctrl.model.Id })" class="btn btn-xs btn-primary" ng-click="$event.stopPropagation();" ng-if="$ctrl.showUpdateAction">\n            <i class="fa fa-edit" aria-hidden="true"></i>\n            更新\n          </a>\n          <btn class="btn btn-xs btn-danger" ng-click="$event.stopPropagation(); $ctrl.onDelete($ctrl.model)" ng-if="$ctrl.showDeleteAction">\n            <i class="fa fa-trash" aria-hidden="true"></i> 删除\n          </btn>\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line1 --\x3e\n      \x3c!-- blocklist-item-line2 --\x3e\n      <div class="blocklist-item-line">\n        <span class="blocklist-item-desc">\n          {{ $ctrl.model.Description }}\n        </span>\n        <span class="small text-muted" ng-if="$ctrl.model.Categories.length > 0">\n          {{ $ctrl.model.Categories.join(\', \') }}\n        </span>\n      </div>\n      \x3c!-- !blocklist-item-line2 --\x3e\n    </span>\n    \x3c!-- !template-details --\x3e\n  </div>\n  \x3c!-- !template --\x3e\n</div>\n')}]),e.exports=n},function(e,t,n){"use strict";n.r(t);var a=n(13),r=n(63),i=n(114);angular.module("portainer.app").controller("TemplateListController",["DatatableService",function(e){var t=this;this.state={textFilter:"",selectedCategory:"",categories:[],showContainerTemplates:!0},this.onTextFilterChange=function(){e.setDataTableTextFilters(this.tableKey,this.state.textFilter)},this.updateCategories=function(){for(var e=[],n=0;n<t.templates.length;n++){var a=t.templates[n];(1===a.Type&&t.state.showContainerTemplates||2===a.Type&&t.showSwarmStacks||3===a.Type&&!t.showSwarmStacks)&&(e=e.concat(a.Categories))}this.state.categories=Object(i.a)(Object(r.a)(e))},this.filterByCategory=function(e){return!t.state.selectedCategory||Object(a.a)(e.Categories,t.state.selectedCategory)},this.filterByType=function(e){return!!(1===e.Type&&t.state.showContainerTemplates||2===e.Type&&t.showSwarmStacks||3===e.Type&&!t.showSwarmStacks)},this.$onInit=function(){this.showSwarmStacks&&(this.state.showContainerTemplates=!1),this.updateCategories();var t=e.getDataTableTextFilters(this.tableKey);null!==t&&(this.state.textFilter=t)}}])},function(e,t,n){var a=n(996);angular.module("portainer.app").component("templateList",{templateUrl:a,controller:"TemplateListController",bindings:{titleText:"@",titleIcon:"@",templates:"<",tableKey:"@",selectAction:"<",deleteAction:"<",showSwarmStacks:"<",showAddAction:"<",showUpdateAction:"<",showDeleteAction:"<"}})},function(e,t){var n="app/portainer/components/template-list/templateList.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="datatable">\n  <rd-widget>\n    <rd-widget-body classes="no-padding">\n\n      <div class="toolBar">\n        <div class="toolBarTitle">\n          <i class="fa" ng-class="$ctrl.titleIcon" aria-hidden="true" style="margin-right: 2px;"></i> {{ $ctrl.titleText }}\n        </div>\n      </div>\n\n      <div class="actionBar">\n        <div>\n          <button type="button" class="btn btn-sm btn-primary" ui-sref="portainer.templates.new" ng-if="$ctrl.showAddAction">\n            <i class="fa fa-plus space-right" aria-hidden="true"></i>添加模板\n          </button>\n          <span ng-class="{ \'pull-right\': $ctrl.showAddAction }" style="width: 25%;">\n            <ui-select ng-model="$ctrl.state.selectedCategory">\n              <ui-select-match placeholder="选择一个分类" allow-clear="true">\n                <span>{{ $select.selected }}</span>\n              </ui-select-match>\n              <ui-select-choices repeat="category in ($ctrl.state.categories | filter: $select.search)">\n                <span>{{ category }}</span>\n              </ui-select-choices>\n            </ui-select>\n          </span>\n        </div>\n\n        <div class="small text-muted" style="margin: 15px 0 0 5px;">\n          <label for="show_stacks" class="control-label text-left">\n            显示容器模板\n          </label>\n          <label class="switch" style="margin-left: 20px;">\n            <input type="checkbox" name="show_stacks" ng-model="$ctrl.state.showContainerTemplates" ng-change="$ctrl.updateCategories()"><i></i>\n          </label>\n        </div>\n      </div>\n\n      <div class="searchBar" style="border-top: 2px solid #f6f6f6;">\n        <i class="fa fa-search searchIcon" aria-hidden="true"></i>\n        <input type="text" class="searchInput" ng-model="$ctrl.state.textFilter" ng-change="$ctrl.onTextFilterChange()" placeholder="搜索..." auto-focus>\n      </div>\n\n      <div class="blocklist">\n        <template-item\n          ng-repeat="template in $ctrl.templates | filter: $ctrl.filterByType | filter:$ctrl.filterByCategory | filter:$ctrl.state.textFilter"\n          model="template"\n          show-update-action="$ctrl.showUpdateAction"\n          show-delete-action="$ctrl.showDeleteAction"\n          on-select="$ctrl.selectAction"\n          on-delete="$ctrl.deleteAction"\n        ></template-item>\n        <div ng-if="!$ctrl.templates" class="text-center text-muted">\n          载入中...\n        </div>\n        <div ng-if="($ctrl.templates | filter: $ctrl.filterByType | filter:$ctrl.filterByCategory | filter:$ctrl.state.textFilter).length === 0" class="text-center text-muted">\n          没有可用的模板。\n        </div>\n      </div>\n\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),e.exports=n},function(e,t){angular.module("portainer.app").directive("rdTemplateWidget",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget template-widget" id="template-widget" ng-transclude></div>',restrict:"EA"}})},function(e,t){angular.module("portainer.app").directive("portainerTooltip",[function(){return{scope:{message:"@",position:"@"},template:'<span class="interactive" tooltip-append-to-body="true" tooltip-placement="{{position}}" tooltip-class="portainer-tooltip" uib-tooltip="{{message}}"><i class="fa fa-question-circle tooltip-icon" aria-hidden="true"></i></span>',restrict:"E"}}])},function(e,t){angular.module("portainer.app").directive("rdWidgetBody",function(){return{requires:"^rdWidget",scope:{loading:"@?",classes:"@?"},transclude:!0,template:'<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',restrict:"E"}})},function(e,t){angular.module("portainer.app").directive("rdWidgetCustomHeader",function(){return{requires:"^rdWidget",scope:{titleText:"=",icon:"="},transclude:!0,template:'<div class="widget-header"><div class="row"><span class="pull-left"><img class="custom-header-ico" ng-src="{{icon}}" ng-if="icon"></img><i class="fa fa-rocket" aria-hidden="true" ng-if="!icon"></i> <span class="text-muted"> {{titleText}} </span> </span><span class="pull-right col-xs-6 col-sm-4" ng-transclude></span></div></div>',restrict:"E"}})},function(e,t){angular.module("portainer.app").directive("rdWidgetFooter",function(){return{requires:"^rdWidget",transclude:!0,template:'<div class="widget-footer" ng-transclude></div>',restrict:"E"}})},function(e,t){angular.module("portainer.app").directive("rdWidgetHeader",function(){return{requires:"^rdWidget",scope:{titleText:"@",icon:"@",classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><span ng-class="classes" class="pull-left"><i class="fa" ng-class="icon"></i> {{titleText}} </span><span ng-class="classes" class="pull-right" ng-transclude></span></div></div>',restrict:"E"}})},function(e,t){angular.module("portainer.app").directive("rdWidgetTaskbar",function(){return{requires:"^rdWidget",scope:{classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><div ng-class="classes" ng-transclude></div></div></div>',restrict:"E"}})},function(e,t){angular.module("portainer.app").directive("rdWidget",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget" ng-transclude></div>',restrict:"EA"}})},function(e,t,n){"use strict";n.r(t);n(3),n(5),n(42),n(18);var a=n(86),r=n(76),i=n(336),o=n(2),s=n.n(o),l=n(64),c=n.n(l);angular.module("portainer.app").filter("truncate",function(){return function(e,t,n){return isNaN(t)&&(t=10),void 0===n&&(n="..."),e.length<=t||e.length-n.length<=t?e:String(e).substring(0,t-n.length)+n}}).filter("truncatelr",function(){return function(e,t,n,a){return t=isNaN(t)?50:t,n=isNaN(n)?25:n,a=isNaN(a)?25:a,e.length<=t?e:e.substring(0,n)+"[...]"+e.substring(e.length-a,e.length)}}).filter("capitalize",function(){return function(e){return e?Object(i.a)(e):""}}).filter("stripprotocol",function(){return function(e){return e.replace(/.*?:\/\//g,"")}}).filter("humansize",function(){return function(e,t,n){if(t||(t=1),n||(n=10),e||0===e)return c()(e,{base:n,round:t})}}).filter("getisodatefromtimestamp",function(){return function(e){return s.a.unix(e).format("YYYY-MM-DD HH:mm:ss")}}).filter("getisodate",function(){return function(e){return s()(e).format("YYYY-MM-DD HH:mm:ss")}}).filter("key",function(){return function(e,t){return e.slice(0,e.indexOf(t))}}).filter("value",function(){return function(e,t){return e.slice(e.indexOf(t)+1)}}).filter("emptyobject",function(){return function(e){return Object(r.a)(e)}}).filter("ipaddress",function(){return function(e){return e.slice(0,e.indexOf("/"))}}).filter("arraytostr",function(){return function(e,t){return e?Object(a.a)(e,t):""}}).filter("labelsToStr",function(){return function(e,t){return e?Object(a.a)(e.map(function(e){return e.key+":"+e.value}),t):""}}).filter("endpointtypename",function(){return function(e){return 1===e?"Docker":2===e?"Agent":3===e?"Azure ACI":""}}).filter("endpointtypeicon",function(){return function(e){return 3===e?"fab fa-microsoft":"fab fa-docker"}}).filter("ownershipicon",function(){return function(e){switch(e){case"private":case"administrators":return"fa fa-eye-slash";case"restricted":return"fa fa-users";default:return"fa fa-eye"}}}).filter("endpointstatusbadge",function(){return function(e){return 2===e?"danger":"success"}})},function(e,t,n){"use strict";n.r(t);var a=n(4);angular.module("portainer.app").factory("EndpointHelper",[function(){var e={};function t(e,t){return Object(a.a)(t,function(t){return t.Id===e.GroupId})}return e.mapGroupNameToEndpoint=function(e,n){for(var a=0;a<e.length;a++){var r=e[a],i=t(r,n);i&&(r.GroupName=i.Name)}},e}])},function(e,t,n){"use strict";n.r(t);n(11);angular.module("portainer.app").factory("FormHelper",[function(){var e={removeInvalidEnvVars:function(e){for(var t=e.length-1;t>=0;t--){var n=e[t];n.value&&n.name||e.splice(t,1)}return e}};return e}])},function(e,t){angular.module("portainer.app").factory("RegistryHelper",[function(){"use strict";var e={getRegistryByURL:function(e,t){for(var n=0;n<e.length;n++)if(e[n].URL===t)return e[n];return null}};return e}])},function(e,t,n){"use strict";n.r(t);n(1),n(6);var a=n(4);angular.module("portainer.app").factory("ResourceControlHelper",[function(){var e={retrieveAuthorizedUsers:function(e,t){var n=[];return angular.forEach(e.UserAccesses,function(e){var r=Object(a.a)(t,{Id:e.UserId});r&&n.push(r)}),n},retrieveAuthorizedTeams:function(e,t){var n=[];return angular.forEach(e.TeamAccesses,function(e){var r=Object(a.a)(t,{Id:e.TeamId});r&&n.push(r)}),n},isLeaderOfAnyRestrictedTeams:function(e,t){for(var n=!1,r=0;r<e.length;r++){var i=e[r];if(Object(a.a)(t.TeamAccesses,{TeamId:i.TeamId})&&1===i.Role){n=!0;break}}return n}};return e}])},function(e,t,n){"use strict";n.r(t);var a=n(63);angular.module("portainer.app").factory("StackHelper",[function(){var e={getExternalStackNamesFromContainers:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.Labels&&r.Labels["com.docker.compose.project"]){var i=r.Labels["com.docker.compose.project"];t.push(i)}}return Object(a.a)(t)},getExternalStackNamesFromServices:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.Labels&&r.Labels["com.docker.stack.namespace"]){var i=r.Labels["com.docker.stack.namespace"];t.push(i)}}return Object(a.a)(t)}};return e}])},function(e,t,n){"use strict";n.r(t);n(70),n(11),n(20),n(5),n(1),n(6);var a=n(63);angular.module("portainer.app").factory("TemplateHelper",[function(){var e={getDefaultContainerConfiguration:function(){return{Env:[],OpenStdin:!1,Tty:!1,ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:{},Binds:[],Privileged:!1,ExtraHosts:[]},Volumes:{},Labels:{}}},portArrayToPortConfiguration:function(e){var t={bindings:{},exposedPorts:{}};return e.forEach(function(e){if(e.containerPort){var n=e.containerPort+"/"+e.protocol,a={};if(e.hostPort&&(a.HostPort=e.hostPort,e.hostPort.indexOf(":")>-1)){var r=e.hostPort.split(":");a.HostIp=r[0],a.HostPort=r[1]}t.bindings[n]=[a],t.exposedPorts[n]={}}}),t},updateContainerConfigurationWithLabels:function(e){var t={};return e.forEach(function(e){e.name&&e.value&&(t[e.name]=e.value)}),t},EnvToStringArray:function(e){var t=[];return e.forEach(function(e){if(e.value||e.set){var n=e.set?e.set:e.value;t.push(e.name+"="+n)}}),t},getConsoleConfiguration:function(e){var t={openStdin:!1,tty:!1};return!0===e&&(t.openStdin=!0,t.tty=!0),t},createVolumeBindings:function(e,t){e.forEach(function(e){var n;e.container&&("auto"===e.type?n=t.pop().Id+":"+e.container:"auto"!==e.type&&e.bind&&(n=e.bind+":"+e.container),e.readonly&&(n+=":ro"),e.binding=n)})},determineRequiredGeneratedVolumeCount:function(e){var t=0;return e.forEach(function(e){"auto"===e.type&&++t}),t},getUniqueCategories:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];t=t.concat(r.Categories)}return Object(a.a)(t)}};return e}])},function(e,t,n){"use strict";n.r(t);n(296),n(1013),n(42),n(20);angular.module("portainer.app").factory("URLHelper",["$window",function(e){var t={};return t.getParameter=function(t){return e.location.search.replace(/.*?\?/,"").split("&").reduce(function(e,t){var n=t.split("="),a=n[0],r=n[1];return e[a]=r,e},{})[t]},t.cleanParameters=function(){e.location.search=""},t}])},,,function(e,t,n){"use strict";n.r(t);n(18);angular.module("portainer.app").factory("UserHelper",[function(){var e={filterNonAdministratorUsers:function(e){return e.filter(function(e){if(1!==e.Role)return e})}};return e}])},function(e,t){angular.module("portainer.app").factory("WebhookHelper",["$location","API_ENDPOINT_WEBHOOKS",function(e,t){"use strict";var n={returnWebhookUrl:function(n){var a="http"===e.protocol().toLowerCase()&&80===e.port()||"https"===e.protocol().toLowerCase()&&443===e.port()?"":":"+e.port();return e.protocol()+"://"+e.host()+a+"/"+t+"/"+n}};return n}])},function(e,t,n){"use strict";n.r(t);var a=n(13),r=n(340);angular.module("portainer.app").factory("EndpointStatusInterceptor",["$q","EndpointProvider",function(e,t){var n={};function i(e){return Object(r.a)(e,"api/")&&(Object(a.a)(e,"/containers")||Object(a.a)(e,"/images")||Object(a.a)(e,"/volumes")||Object(a.a)(e,"/networks")||Object(a.a)(e,"/info")||Object(a.a)(e,"/version"))}return n.response=function(n){var a=n.config.url;200===n.status&&i(a)&&t.offlineMode()&&t.setOfflineMode(!1);return n||e.when(n)},n.responseError=function(n){var a=n.config.url;502!==n.status&&503!==n.status&&-1!==n.status||!i(a)||t.offlineMode()||t.setOfflineMode(!0);return e.reject(n)},n}])},function(e,t){angular.module("portainer.app").factory("Auth",["$resource","API_ENDPOINT_AUTH",function(e,t){"use strict";return e(t,{},{login:{method:"POST",ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("DockerHub",["$resource","API_ENDPOINT_DOCKERHUB",function(e,t){"use strict";return e(t,{},{get:{method:"GET"},update:{method:"PUT"}})}])},function(e,t){angular.module("portainer.app").factory("Endpoints",["$resource","API_ENDPOINT_ENDPOINTS",function(e,t){"use strict";return e(t+"/:id/:action",{},{query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}},snapshots:{method:"POST",params:{action:"snapshot"}},snapshot:{method:"POST",params:{id:"@id",action:"snapshot"}},executeJob:{method:"POST",ignoreLoadingBar:!0,params:{id:"@id",action:"job"}}})}])},function(e,t){angular.module("portainer.app").factory("Extension",["$resource","API_ENDPOINT_EXTENSIONS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},delete:{method:"DELETE",params:{id:"@id"}},update:{method:"POST",params:{id:"@id",action:"update"}}})}])},function(e,t){angular.module("portainer.app").factory("EndpointGroups",["$resource","API_ENDPOINT_ENDPOINT_GROUPS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("LegacyExtensions",["$resource","EndpointProvider","API_ENDPOINT_ENDPOINTS",function(e,t,n){"use strict";return e(n+"/:endpointId/extensions/:type",{endpointId:t.endpointID},{register:{method:"POST"},deregister:{method:"DELETE",params:{type:"@type"}}})}])},function(e,t){angular.module("portainer.app").factory("Motd",["$resource","API_ENDPOINT_MOTD",function(e,t){"use strict";return e(t,{},{get:{method:"GET",ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Registries",["$resource","API_ENDPOINT_REGISTRIES",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}},configure:{method:"POST",params:{id:"@id",action:"configure"}}})}])},function(e,t){angular.module("portainer.app").factory("ResourceControl",["$resource","API_ENDPOINT_RESOURCE_CONTROLS",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST",ignoreLoadingBar:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Schedules",["$resource","API_ENDPOINT_SCHEDULES",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},file:{method:"GET",params:{id:"@id",action:"file"}},tasks:{method:"GET",isArray:!0,params:{id:"@id",action:"tasks"}}})}])},function(e,t){angular.module("portainer.app").factory("Settings",["$resource","API_ENDPOINT_SETTINGS",function(e,t){"use strict";return e(t+"/:subResource/:action",{},{get:{method:"GET"},update:{method:"PUT",ignoreLoadingBar:!0},publicSettings:{method:"GET",params:{subResource:"public"},ignoreLoadingBar:!0},checkLDAPConnectivity:{method:"PUT",params:{subResource:"authentication",action:"checkLDAP"}}})}])},function(e,t){angular.module("portainer.app").factory("Stack",["$resource","EndpointProvider","API_ENDPOINT_STACKS",function(e,t,n){"use strict";return e(n+"/:id/:action",{},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",ignoreLoadingBar:!0},update:{method:"PUT",params:{id:"@id"},ignoreLoadingBar:!0},remove:{method:"DELETE",params:{id:"@id",external:"@external",endpointId:"@endpointId"}},getStackFile:{method:"GET",params:{id:"@id",action:"file"}},migrate:{method:"POST",params:{id:"@id",action:"migrate",endpointId:"@endpointId"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Status",["$resource","API_ENDPOINT_STATUS",function(e,t){"use strict";return e(t,{},{get:{method:"GET"}})}])},function(e,t){angular.module("portainer.app").factory("Tags",["$resource","API_ENDPOINT_TAGS",function(e,t){"use strict";return e(t+"/:id",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Teams",["$resource","API_ENDPOINT_TEAMS",function(e,t){"use strict";return e(t+"/:id/:entity/:entityId",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}}})}])},function(e,t){angular.module("portainer.app").factory("TeamMemberships",["$resource","API_ENDPOINT_TEAM_MEMBERSHIPS",function(e,t){"use strict";return e(t+"/:id/:action",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Templates",["$resource","API_ENDPOINT_TEMPLATES",function(e,t){return e(t+"/:id",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t){angular.module("portainer.app").factory("Users",["$resource","API_ENDPOINT_USERS",function(e,t){"use strict";return e(t+"/:id/:entity/:entityId",{},{create:{method:"POST",ignoreLoadingBar:!0},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"},ignoreLoadingBar:!0},updatePassword:{method:"PUT",params:{id:"@id",entity:"passwd"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}},checkAdminUser:{method:"GET",params:{id:"admin",entity:"check"},isArray:!0,ignoreLoadingBar:!0},initAdminUser:{method:"POST",params:{id:"admin",entity:"init"},ignoreLoadingBar:!0}})}])},function(e,t){angular.module("portainer.app").factory("Webhooks",["$resource","API_ENDPOINT_WEBHOOKS",function(e,t){"use strict";return e(t+"/:id",{},{query:{method:"GET",isArray:!0},create:{method:"POST"},remove:{method:"DELETE",params:{id:"@id"}}})}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(55),r=n(264),i=n(4),o=n(138);angular.module("portainer.app").factory("AccessService",["$q","UserService","TeamService",function(e,t,n){var s={};function l(e,t){if(e.length){var n=Object(i.a)(e,function(e){return e.Id===t});return n||{Id:0,Name:"-"}}}function c(e,t,n,a){for(var r=[],i=[],o=0;o<e.length;o++){var s=e[o],c=t&&t[s.Id],d=n&&n[s.Id];c&&d?(s.Role=l(a,t[s.Id].RoleId),s.Override=!0,i.push(s)):c&&!d?(s.Role=l(a,t[s.Id].RoleId),i.push(s)):!c&&d?(s.Role=l(a,n[s.Id].RoleId),s.Inherited=!0,i.push(s),r.push(s)):r.push(s)}return{available:r,authorized:i}}return s.accesses=function(a,r,i,s,l){var d=e.defer();return e.all({users:t.users(!1),teams:n.teams()}).then(function(e){var t=e.users.map(function(e){return new o.UserAccessViewModel(e)}),n=e.teams.map(function(e){return new o.TeamAccessViewModel(e)}),p=c(t,a,i,l),u=c(n,r,s,l),m={availableUsersAndTeams:p.available.concat(u.available),authorizedUsersAndTeams:p.authorized.concat(u.authorized)};d.resolve(m)}).catch(function(e){d.reject({msg:"无法检索用户和用户组",err:e})}),d.promise},s.generateAccessPolicies=function(e,t,n,i,o){var s=Object(r.a)(e),l=Object(r.a)(t);return Object(a.a)(n,function(e){return s[e.Id]={RoleId:o||e.Role.Id}}),Object(a.a)(i,function(e){return l[e.Id]={RoleId:o||e.Role.Id}}),{userAccessPolicies:s,teamAccessPolicies:l}},s}])},function(e,t,n){"use strict";n.r(t);var a=n(256);angular.module("portainer.app").factory("DockerHubService",["$q","DockerHub",function(e,t){var n={dockerhub:function(){var n=e.defer();return t.get().$promise.then(function(e){var t=new a.DockerHubViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索DockerHub详细信息",err:e})}),n.promise},update:function(e){return t.update({},e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(18);angular.module("portainer.app").factory("EndpointService",["$q","Endpoints","FileUploadService",function(e,t,n){var a={endpoint:function(e){return t.get({id:e}).$promise},endpoints:function(){return t.query({}).$promise},snapshotEndpoints:function(){return t.snapshots({},{}).$promise},snapshotEndpoint:function(e){return t.snapshot({id:e},{}).$promise},endpointsByGroup:function(n){var a=e.defer();return t.query({}).$promise.then(function(e){var t=e.filter(function(e){return e.GroupId===n});a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索节点",err:e})}),a.promise},updateAccess:function(e,n,a){return t.updateAccess({id:e},{UserAccessPolicies:n,TeamAccessPolicies:a}).$promise},updateEndpoint:function(a,r){var i=e.defer();return n.uploadTLSFilesForEndpoint(a,r.TLSCACert,r.TLSCert,r.TLSKey).then(function(){return i.notify({upload:!1}),t.update({id:a},r).$promise}).then(function(e){i.resolve(e)}).catch(function(e){i.notify({upload:!1}),i.reject({msg:"无法更新节点",err:e})}),i.promise},deleteEndpoint:function(e){return t.remove({id:e}).$promise},createLocalEndpoint:function(){var t=e.defer();return n.createEndpoint("local",1,"","",1,[],!1).then(function(e){t.resolve(e.data)}).catch(function(e){t.reject({msg:"无法创建节点",err:e})}),t.promise},createRemoteEndpoint:function(t,a,r,i,o,s,l,c,d,p,u,m){var g=e.defer();return n.createEndpoint(t,a,"tcp://"+r,i,o,s,l,c,d,p,u,m).then(function(e){g.resolve(e.data)}).catch(function(e){g.reject({msg:"无法创建节点",err:e})}),g.promise},createAzureEndpoint:function(t,a,r,i,o,s){var l=e.defer();return n.createAzureEndpoint(t,a,r,i,o,s).then(function(e){l.resolve(e.data)}).catch(function(e){l.reject({msg:"无法连接到Azure",err:e})}),l.promise},executeJobFromFileUpload:function(e,t,a,r){return n.executeEndpointJob(e,t,a,r)},executeJobFromFileContent:function(e,n,a,r){var i={Image:e,FileContent:n};return t.executeJob({id:a,method:"string",nodeName:r},i).$promise}};return a}])},function(e,t,n){"use strict";n.r(t);n(44),n(45),n(3),n(295);var a=n(55),r=n(4),i=n(196);function o(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function s(e){return function(){var t=this,n=arguments;return new Promise(function(a,r){var i=e.apply(t,n);function s(e){o(i,a,r,s,l,"next",e)}function l(e){o(i,a,r,s,l,"throw",e)}s(void 0)})}}angular.module("portainer.app").factory("ExtensionService",["$q","Extension","StateManager",function(e,t,n){var o={};return o.EXTENSIONS=Object.freeze({REGISTRY_MANAGEMENT:1,OAUTH_AUTHENTICATION:2,RBAC:3}),o.enable=function(e){return t.create({license:e}).$promise},o.update=function(e,n){return t.update({id:e,version:n}).$promise},o.delete=function(e){return t.delete({id:e}).$promise},o.extensions=function(n){var a=e.defer();return t.query({store:n}).$promise.then(function(e){var t=e.map(function(e){return new i.ExtensionViewModel(e)});a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索扩展程序",err:e})}),a.promise},o.extension=function(n){var a=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new i.ExtensionViewModel(e);a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索扩展程序详细信息",err:e})}),a.promise},o.extensionEnabled=function(){var e=s(regeneratorRuntime.mark(function e(t){var a,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t!==o.EXTENSIONS.RBAC){e.next=4;break}return e.abrupt("return",!!n.getExtension(t));case 4:return e.next=6,o.extensions(!1);case 6:return a=e.sent,i=Object(r.a)(a,function(e){return e.Id===t}),e.abrupt("return",!!i&&i.Enabled);case 9:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),o.retrieveAndSaveEnabledExtensions=s(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,o.extensions(!1);case 2:t=e.sent,Object(a.a)(t,function(e){return delete e.License}),n.saveExtensions(t);case 5:case"end":return e.stop()}},e,this)})),o}])},function(e,t,n){"use strict";n.r(t);var a=n(89);angular.module("portainer.app").factory("GroupService",["$q","EndpointGroups",function(e,t){var n={group:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.EndpointGroupModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索节点组",err:e})}),r.promise},groups:function(){return t.query({}).$promise},createGroup:function(e,n){var r=new a.EndpointGroupCreateRequest(e,n);return t.create(r).$promise},updateGroup:function(e,n){var r=new a.EndpointGroupUpdateRequest(e,n);return t.update(r).$promise},updateAccess:function(e,n,a){return t.updateAccess({id:e},{UserAccessPolicies:n,TeamAccessPolicies:a}).$promise},deleteGroup:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t){angular.module("portainer.app").factory("LegacyExtensionService",["LegacyExtensions",function(e){"use strict";var t={registerStoridgeExtension:function(t){var n={Type:1,URL:t};return e.register(n).$promise},deregisterStoridgeExtension:function(){return e.deregister({type:1}).$promise}};return t}])},function(e,t,n){"use strict";n.r(t);var a=n(257);angular.module("portainer.app").factory("MotdService",["$q","Motd",function(e,t){var n={motd:function(){var n=e.defer();return t.get().$promise.then(function(e){var t=new a.MotdViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索到消息信息",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(62);angular.module("portainer.app").factory("RegistryService",["$q","Registries","DockerHubService","RegistryHelper","ImageHelper","FileUploadService",function(e,t,n,r,i,o){var s={registries:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.RegistryViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索仓库",err:e})}),n.promise},registry:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.RegistryViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索仓库详细信息",err:e})}),r.promise},encodedCredentials:function(e){var t={serveraddress:e.URL};return btoa(JSON.stringify(t))},updateAccess:function(e,n,a){return t.updateAccess({id:e},{UserAccessPolicies:n,TeamAccessPolicies:a}).$promise},deleteRegistry:function(e){return t.remove({id:e}).$promise},updateRegistry:function(e){return t.update({id:e.Id},e).$promise},configureRegistry:function(e,t){return o.configureRegistry(e,t)},createRegistry:function(e){var n=new a.RegistryCreateRequest(e);return t.create(n).$promise},retrieveRegistryFromRepository:function(t){var a=e.defer(),o=i.extractImageAndRegistryFromRepository(t);return e.when(o.registry?s.registries():n.dockerhub()).then(function(e){var t=e;o.registry&&(t=r.getRegistryByURL(e,o.registry)),a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索与存储库关联的仓库",err:e})}),a.promise}};return s}])},function(e,t,n){"use strict";n.r(t);n(1),n(6);var a=n(4);angular.module("portainer.app").factory("ResourceControlService",["$q","ResourceControl","UserService","TeamService","ResourceControlHelper",function(e,t,n,r,i){var o={createResourceControl:function(e,n,a,r,i,o){var s={Type:i,Public:e,ResourceID:r,Users:n,Teams:a,SubResourceIDs:o};return t.create({},s).$promise},deleteResourceControl:function(e){return t.remove({id:e}).$promise},updateResourceControl:function(e,n,a,r){var i={Public:e,Users:n,Teams:a};return t.update({id:r},i).$promise},applyResourceControl:function(e,t,n,a,r){a.AccessControlEnabled||(a.Ownership="public");var i=[],s=[],l=!1;switch(a.Ownership){case"public":l=!0;break;case"private":i.push(n);break;case"restricted":angular.forEach(a.AuthorizedUsers,function(e){i.push(e.Id)}),angular.forEach(a.AuthorizedTeams,function(e){s.push(e.Id)});break;default:return}return o.createResourceControl(l,i,s,t,e,r)},applyResourceControlChange:function(e,t,n,a){return n?"administrators"===a.ownership?o.deleteResourceControl(n.Id):o.updateResourceControl(a.publicOnly,a.authorizedUserIds,a.authorizedTeamIds,n.Id):o.createResourceControl(a.publicOnly,a.authorizedUserIds,a.authorizedTeamIds,t,e)},retrieveOwnershipDetails:function(t){var a=e.defer();return t?(e.all({users:t.UserAccesses.length>0?n.users(!1):[],teams:t.TeamAccesses.length>0?r.teams():[]}).then(function(e){var n=i.retrieveAuthorizedUsers(t,e.users),r=i.retrieveAuthorizedTeams(t,e.teams);a.resolve({authorizedUsers:n,authorizedTeams:r})}).catch(function(e){a.reject({msg:"无法检索用户和用户组信息",err:e})}),a.promise):(a.resolve({authorizedUsers:[],authorizedTeams:[]}),a.promise)},retrieveUserPermissionsOnResource:function(t,r,o){var s=e.defer();if(!o||r)return s.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:!1}),s.promise;if(Object(a.a)(o.UserAccesses,{UserId:t}))s.resolve({isPartOfRestrictedUsers:!0,isLeaderOfAnyRestrictedTeams:!1});else{var l=!1;n.userMemberships(t).then(function(e){var t=e;l=i.isLeaderOfAnyRestrictedTeams(t,o),s.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:l})}).catch(function(e){s.reject({msg:"无法检索用户成员资格",err:e})})}return s.promise}};return o}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(56);angular.module("portainer.app").factory("ScheduleService",["$q","Schedules","FileUploadService",function(e,t,n){var r={schedule:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.ScheduleModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索计划",err:e})}),r.promise},schedules:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.ScheduleModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索计划",err:e})}),n.promise},scriptExecutionTasks:function(n){var r=e.defer();return t.tasks({id:n}).$promise.then(function(e){var t=e.map(function(e){return new a.ScriptExecutionTaskModel(e)});r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索与计划相关联的任务",err:e})}),r.promise},createScheduleFromFileContent:function(e){var n=new a.ScheduleCreateRequest(e);return t.create({method:"string"},n).$promise},createScheduleFromFileUpload:function(e){var t=new a.ScheduleCreateRequest(e);return n.createSchedule(t)},updateSchedule:function(e){var n=new a.ScheduleUpdateRequest(e);return t.update(n).$promise},deleteSchedule:function(e){return t.remove({id:e}).$promise},getScriptFile:function(e){return t.file({id:e}).$promise}};return r}])},function(e,t,n){"use strict";n.r(t);var a=n(197);angular.module("portainer.app").factory("SettingsService",["$q","Settings",function(e,t){var n={settings:function(){var n=e.defer();return t.get().$promise.then(function(e){var t=new a.SettingsViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索应用程序设置",err:e})}),n.promise},update:function(e){return t.update({},e).$promise},publicSettings:function(){var n=e.defer();return t.publicSettings().$promise.then(function(e){var t=new a.PublicSettingsViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索应用程序设置",err:e})}),n.promise},checkLDAPConnectivity:function(e){return t.checkLDAPConnectivity({},e).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3),n(0);var a=n(263),r=n(91);angular.module("portainer.app").factory("StackService",["$q","Stack","ResourceControlService","FileUploadService","StackHelper","ServiceService","ContainerService","SwarmService","EndpointProvider",function(e,t,n,i,o,s,l,c,d){var p={stack:function(n){var a=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new r.StackViewModel(e);a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索堆栈详细信息",err:e})}),a.promise},getStackFile:function(n){var a=e.defer();return t.getStackFile({id:n}).$promise.then(function(e){a.resolve(e.StackFileContent)}).catch(function(e){a.reject({msg:"无法检索堆栈内容",err:e})}),a.promise},migrateSwarmStack:function(n,a,r){var i=e.defer();return d.setEndpointID(a),c.swarm().then(function(e){var o=e;if(o.Id!==n.SwarmId)return t.migrate({id:n.Id,endpointId:n.EndpointId},{EndpointID:a,SwarmID:o.Id,Name:r}).$promise;i.reject({msg:"目标节点与当前节点位于同一个Swarm集群中",err:null})}).then(function(){i.resolve()}).catch(function(e){i.reject({msg:"无法迁移堆栈",err:e})}).finally(function(){d.setEndpointID(n.EndpointId)}),i.promise},migrateComposeStack:function(n,a,r){var i=e.defer();return d.setEndpointID(a),t.migrate({id:n.Id,endpointId:n.EndpointId},{EndpointID:a,Name:r}).$promise.then(function(){i.resolve()}).catch(function(e){d.setEndpointID(n.EndpointId),i.reject({msg:"无法迁移堆栈",err:e})}),i.promise},stacks:function(t,n,a){var r=e.defer(),i=[];return t&&i.push(p.composeStacks(!0,{EndpointID:a})),n&&i.push(p.swarmStacks(!0)),e.all(i).then(function(e){var t=[];e[0]&&(t=t.concat(e[0])),e[1]&&(t=t.concat(e[1])),r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索堆栈",err:e})}),r.promise},externalSwarmStacks:function(){var t=e.defer();return s.services().then(function(e){var n=e,a=o.getExternalStackNamesFromServices(n).map(function(e){return new r.ExternalStackViewModel(e,1)});t.resolve(a)}).catch(function(e){t.reject({msg:"无法检索外部堆栈",err:e})}),t.promise},externalComposeStacks:function(){var t=e.defer();return l.containers(1).then(function(e){var n=e,a=o.getExternalStackNamesFromContainers(n).map(function(e){return new r.ExternalStackViewModel(e,2)});t.resolve(a)}).catch(function(e){t.reject({msg:"无法检索外部堆栈",err:e})}),t.promise},composeStacks:function(n,i){var o=e.defer();return e.all({stacks:t.query({filters:i}).$promise,externalStacks:n?p.externalComposeStacks():[]}).then(function(e){var t=e.stacks.map(function(e){return e.External=!1,new r.StackViewModel(e)}),n=e.externalStacks,i=Object(a.a)(t,n,function(e,t){return e.Name===t.Name});o.resolve(i)}).catch(function(e){o.reject({msg:"无法检索堆栈",err:e})}),o.promise},swarmStacks:function(n){var i=e.defer();return c.swarm().then(function(a){var r={SwarmID:a.Id};return e.all({stacks:t.query({filters:r}).$promise,externalStacks:n?p.externalSwarmStacks():[]})}).then(function(e){var t=e.stacks.map(function(e){return e.External=!1,new r.StackViewModel(e)}),n=e.externalStacks,o=Object(a.a)(t,n,function(e,t){return e.Name===t.Name});i.resolve(o)}).catch(function(e){i.reject({msg:"无法检索堆栈",err:e})}),i.promise},remove:function(a,r,i){var o=e.defer();return t.remove({id:a.Id?a.Id:a.Name,external:r,endpointId:i}).$promise.then(function(){if(a.ResourceControl&&a.ResourceControl.Id)return n.deleteResourceControl(a.ResourceControl.Id)}).then(function(){o.resolve()}).catch(function(e){o.reject({msg:"无法删除堆栈",err:e})}),o.promise},updateStack:function(e,n,a,r){return t.update({endpointId:e.EndpointId},{id:e.Id,StackFileContent:n,Env:a,Prune:r}).$promise},createComposeStackFromFileUpload:function(e,t,n,a){return i.createComposeStack(e,t,n,a)},createSwarmStackFromFileUpload:function(t,n,a,r){var o=e.defer();return c.swarm().then(function(e){var o=e;return i.createSwarmStack(t,o.Id,n,a,r)}).then(function(e){o.resolve(e.data)}).catch(function(e){o.reject({msg:"无法创建堆栈",err:e})}),o.promise},createComposeStackFromFileContent:function(e,n,a,r){var i={Name:e,StackFileContent:n,Env:a};return t.create({method:"string",type:2,endpointId:r},i).$promise},createSwarmStackFromFileContent:function(n,a,r,i){var o=e.defer();return c.swarm().then(function(e){var o={Name:n,SwarmID:e.Id,StackFileContent:a,Env:r};return t.create({method:"string",type:1,endpointId:i},o).$promise}).then(function(e){o.resolve(e)}).catch(function(e){o.reject({msg:"无法创建堆栈",err:e})}),o.promise},createComposeStackFromGitRepository:function(e,n,a,r){var i={Name:e,RepositoryURL:n.RepositoryURL,RepositoryReferenceName:n.RepositoryReferenceName,ComposeFilePathInRepository:n.ComposeFilePathInRepository,RepositoryAuthentication:n.RepositoryAuthentication,RepositoryUsername:n.RepositoryUsername,RepositoryPassword:n.RepositoryPassword,Env:a};return t.create({method:"repository",type:2,endpointId:r},i).$promise},createSwarmStackFromGitRepository:function(n,a,r,i){var o=e.defer();return c.swarm().then(function(e){var o={Name:n,SwarmID:e.Id,RepositoryURL:a.RepositoryURL,RepositoryReferenceName:a.RepositoryReferenceName,ComposeFilePathInRepository:a.ComposeFilePathInRepository,RepositoryAuthentication:a.RepositoryAuthentication,RepositoryUsername:a.RepositoryUsername,RepositoryPassword:a.RepositoryPassword,Env:r};return t.create({method:"repository",type:1,endpointId:i},o).$promise}).then(function(e){o.resolve(e)}).catch(function(e){o.reject({msg:"无法创建堆栈",err:e})}),o.promise},duplicateStack:function(e,t,n,a,r){return(1===r?p.createSwarmStackFromFileContent:p.createComposeStackFromFileContent)(e,t,n,a)}};return p}])},function(e,t,n){"use strict";n.r(t);var a=n(258);angular.module("portainer.app").factory("StatusService",["$q","Status",function(e,t){var n={status:function(){var n=e.defer();return t.get().$promise.then(function(e){var t=new a.StatusViewModel(e);n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索应用程序状态",err:e})}),n.promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(259);angular.module("portainer.app").factory("TagService",["$q","Tags",function(e,t){var n={tags:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.TagViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索标签",err:e})}),n.promise},tagNames:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return e.Name});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索标签",err:e})}),n.promise},createTag:function(e){var n={Name:e};return t.create({},n).$promise},deleteTag:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(85);angular.module("portainer.app").factory("TeamMembershipService",["$q","TeamMemberships",function(e,t){var n={memberships:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.TeamMembershipModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索用户组成员资格",err:e})}),n.promise},createMembership:function(e,n,a){var r={UserID:e,TeamID:n,Role:a};return t.create({},r).$promise},deleteMembership:function(e){return t.remove({id:e}).$promise},updateMembership:function(e,n,a,r){var i={UserID:n,TeamID:a,Role:r};return t.update({id:e},i).$promise}};return n}])},function(e,t,n){"use strict";n.r(t);n(1),n(6),n(3);var a=n(198),r=n(85);angular.module("portainer.app").factory("TeamService",["$q","Teams","TeamMembershipService",function(e,t,n){var i={teams:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.TeamViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索用户组",err:e})}),n.promise},team:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.TeamViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索用户组详细信息",err:e})}),r.promise},createTeam:function(a,r){var i=e.defer(),o={Name:a};return t.create({},o).$promise.then(function(t){var a=t.Id,o=[];angular.forEach(r,function(e){o.push(n.createMembership(e,a,1))}),e.all(o).then(function(){i.resolve()})}).catch(function(e){i.reject({msg:"无法创建用户组",err:e})}),i.promise},deleteTeam:function(e){return t.remove({id:e}).$promise},userMemberships:function(n){var a=e.defer();return t.queryMemberships({id:n}).$promise.then(function(e){var t=e.map(function(e){return new r.TeamMembershipModel(e)});a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索用户组的用户成员资格",err:e})}),a.promise}};return i}])},function(e,t,n){"use strict";n.r(t);n(1),n(6),n(3);var a=n(77);angular.module("portainer.app").factory("TemplateService",["$q","Templates","TemplateHelper","ImageHelper","ContainerHelper",function(e,t,n,r,i){var o={templates:function(){var n=e.defer();return t.query().$promise.then(function(e){var t=e.map(function(e){return new a.TemplateViewModel(e)});n.resolve(t)}).catch(function(e){n.reject({msg:"无法检索模板",err:e})}),n.promise},template:function(n){var r=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new a.TemplateViewModel(e);r.resolve(t)}).catch(function(e){r.reject({msg:"无法检索模板详细信息",err:e})}),r.promise},delete:function(e){return t.remove({id:e}).$promise},create:function(e){var n=new a.TemplateCreateRequest(e);return t.create(n).$promise},update:function(e){var n=new a.TemplateUpdateRequest(e);return t.update(n).$promise},createTemplateConfiguration:function(e,t,n){var a=r.createImageConfigForContainer(e.Image,e.Registry),i=o.createContainerConfiguration(e,t,n);return i.Image=a.fromImage+":"+a.tag,i},createContainerConfiguration:function(e,t,a){var r=n.getDefaultContainerConfiguration();r.HostConfig.NetworkMode=a.Name,r.HostConfig.Privileged=e.Privileged,r.HostConfig.RestartPolicy={Name:e.RestartPolicy},r.HostConfig.ExtraHosts=e.Hosts?e.Hosts:[],r.name=t,r.Hostname=e.Hostname,r.Image=e.Image,r.Env=n.EnvToStringArray(e.Env),r.Cmd=i.commandStringToArray(e.Command);var o=n.portArrayToPortConfiguration(e.Ports);r.HostConfig.PortBindings=o.bindings,r.ExposedPorts=o.exposedPorts;var s=n.getConsoleConfiguration(e.Interactive);return r.OpenStdin=s.openStdin,r.Tty=s.tty,r.Labels=n.updateContainerConfigurationWithLabels(e.Labels),r},updateContainerConfigurationWithVolumes:function(e,t,a){var r=t.Volumes;n.createVolumeBindings(r,a),r.forEach(function(t){t.binding&&(e.Volumes[t.container]={},e.HostConfig.Binds.push(t.binding))})}};return o}])},function(e,t,n){"use strict";n.r(t);n(18),n(1),n(6),n(3);var a=n(4),r=n(199),i=n(85);angular.module("portainer.app").factory("UserService",["$q","Users","UserHelper","TeamService","TeamMembershipService",function(e,t,n,o,s){var l={users:function(a){var i=e.defer();return t.query({}).$promise.then(function(e){var t=e.map(function(e){return new r.UserViewModel(e)});a||(t=n.filterNonAdministratorUsers(t)),i.resolve(t)}).catch(function(e){i.reject({msg:"无法检索用户",err:e})}),i.promise},user:function(n){var a=e.defer();return t.get({id:n}).$promise.then(function(e){var t=new r.UserViewModel(e);a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索用户详细信息",err:e})}),a.promise},createUser:function(n,a,r,i){var o=e.defer(),l={username:n,password:a,role:r};return t.create({},l).$promise.then(function(t){var n=t.Id,a=[];angular.forEach(i,function(e){a.push(s.createMembership(n,e,2))}),e.all(a).then(function(){o.resolve()})}).catch(function(e){o.reject({msg:"无法创建用户",err:e})}),o.promise},deleteUser:function(e){return t.remove({id:e}).$promise},updateUser:function(e,n,a){var r={password:n,role:a};return t.update({id:e},r).$promise},updateUserPassword:function(e,n,a){var r={Password:n,NewPassword:a};return t.updatePassword({id:e},r).$promise},userMemberships:function(n){var a=e.defer();return t.queryMemberships({id:n}).$promise.then(function(e){var t=e.map(function(e){return new i.TeamMembershipModel(e)});a.resolve(t)}).catch(function(e){a.reject({msg:"无法检索用户成员资格",err:e})}),a.promise},userLeadingTeams:function(t){var n=e.defer();return e.all({teams:o.teams(),memberships:l.userMemberships(t)}).then(function(e){var t=e.memberships,r=e.teams.filter(function(e){var n=Object(a.a)(t,{TeamId:e.Id});if(n&&1===n.Role)return e});n.resolve(r)}).catch(function(e){n.reject({msg:"无法检索用户组",err:e})}),n.promise},initAdministrator:function(e,n){return t.initAdminUser({Username:e,Password:n}).$promise},administratorExists:function(){var n=e.defer();return t.checkAdminUser({}).$promise.then(function(){n.resolve(!0)}).catch(function(e){404===e.status&&n.resolve(!1),n.reject({msg:"无法验证管理员帐户是否存在",err:e})}),n.promise}};return l}])},function(e,t,n){"use strict";n.r(t);n(3);var a=n(260);angular.module("portainer.app").factory("WebhookService",["$q","Webhooks",function(e,t){var n={webhooks:function(n,r){var i=e.defer(),o={ResourceID:n,EndpointID:r};return t.query({filters:o}).$promise.then(function(e){var t=e.map(function(e){return new a.WebhookViewModel(e)});i.resolve(t)}).catch(function(e){i.reject({msg:"无法检索webhook",err:e})}),i.promise},createServiceWebhook:function(e,n){return t.create({ResourceID:e,EndpointID:n,WebhookType:1}).$promise},deleteWebhook:function(e){return t.remove({id:e}).$promise}};return n}])},function(e,t){angular.module("portainer.app").factory("Authentication",["Auth","OAuth","jwtHelper","LocalStorage","StateManager","EndpointProvider",function(e,t,n,a,r,i){"use strict";var o={},s={};function l(e){a.storeJWT(e);var t=n.decodeToken(e);s.username=t.username,s.ID=t.id,s.role=t.role,s.endpointAuthorizations=t.endpointAuthorizations,s.portainerAuthorizations=t.portainerAuthorizations}function c(){return 1===s.role}return o.init=function(){var e=a.getJWT();e&&l(e)},o.OAuthLogin=function(e){return t.validate({code:e}).$promise.then(function(e){return l(e.jwt)})},o.login=function(t,n){return e.login({username:t,password:n}).$promise.then(function(e){return l(e.jwt)})},o.logout=function(){r.clean(),i.clean(),a.clean()},o.isAuthenticated=function(){var e=a.getJWT();return e&&!n.isTokenExpired(e)},o.getUserDetails=function(){return s},o.isAdmin=c,o.hasAuthorizations=function(e){var t=i.endpointID();if(c())return!0;if(!s.endpointAuthorizations||s.endpointAuthorizations&&!s.endpointAuthorizations[t])return!1;for(var n=0;n<e.length;n++){var a=e[n];if(s.endpointAuthorizations[t][a])return!0}return!1},o}])},function(e,t,n){"use strict";n.r(t);var a=n(79),r=n.n(a),i=n(64),o=n.n(i);angular.module("portainer.app").factory("ChartService",[function(){var e=600,t={};function n(e,t,n,a){return{animation:{duration:0},responsiveAnimationDuration:0,responsive:!0,tooltips:{mode:"index",intersect:!1,position:e,callbacks:{label:function(e,n){var a=n.datasets[e.datasetIndex].label;return t(a,e.yLabel)}}},hover:{animationDuration:0},scales:{yAxes:[{stacked:a,ticks:{beginAtZero:!0,callback:n}}]}}}function a(e,t){e.data.datasets[0].data.length>t&&(e.data.labels.pop(),e.data.datasets[0].data.pop(),e.data.datasets[1].data.pop())}function i(e,t){return e+": "+(t>5?o()(t,{base:10,round:1}):t.toFixed(1)+"B")}function s(e){return e>5?o()(e,{base:10,round:1}):e.toFixed(1)+"B"}function l(e){return e>1?Math.round(e)+"%":e.toFixed(1)+"%"}function c(e,t){return e+": "+(t>1?Math.round(t):t.toFixed(1))+"%"}return t.CreateCPUChart=function(e){return function(e,t,a,i){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:t,data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2}]},options:n("nearest",a,i)})}(e,"CPU",c,l)},t.CreateMemoryChart=function(e){return function(e,t,a){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"Memory",data:[],fill:!0,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2},{label:"Cache",data:[],fill:!0,backgroundColor:"rgba(255,180,174,0.4)",borderColor:"rgba(255,180,174,0.6)",pointBackgroundColor:"rgba(255,180,174,1)",pointBorderColor:"rgba(255,180,174,1)",pointRadius:2,borderWidth:2}]},options:n("nearest",t,a,!0)})}(e,i,s)},t.CreateNetworkChart=function(e){return new r.a(e,{type:"line",data:{labels:[],datasets:[{label:"RX on eth0",data:[],fill:!1,backgroundColor:"rgba(151,187,205,0.4)",borderColor:"rgba(151,187,205,0.6)",pointBackgroundColor:"rgba(151,187,205,1)",pointBorderColor:"rgba(151,187,205,1)",pointRadius:2,borderWidth:2},{label:"TX on eth0",data:[],fill:!1,backgroundColor:"rgba(255,180,174,0.4)",borderColor:"rgba(255,180,174,0.6)",pointBackgroundColor:"rgba(255,180,174,1)",pointBorderColor:"rgba(255,180,174,1)",pointRadius:2,borderWidth:2}]},options:n("average",i,s)})},t.UpdateMemoryChart=function(e,t,n,r){r.data.labels.push(e),r.data.datasets[0].data.push(t),n?r.data.datasets[1].data.push(n):r.data.datasets.splice(1,1),a(r),r.update(0)},t.UpdateCPUChart=function(t,n,a){a.data.labels.push(t),a.data.datasets[0].data.push(n),a.data.datasets[0].data.length>e&&(a.data.labels.pop(),a.data.datasets[0].data.pop()),a.update(0)},t.UpdateNetworkChart=function(e,t,n,r){r.data.labels.push(e),r.data.datasets[0].data.push(t),r.data.datasets[1].data.push(n),a(r),r.update(0)},t}])},function(e,t,n){"use strict";n.r(t);var a=n(339),r=n(101),i=n.n(r);n(1059),n(1060),n(1061),n(1087);angular.module("portainer.app").factory("CodeMirrorService",function(){var e={},t={lineNumbers:!0},n={mode:"text/x-yaml",gutters:["CodeMirror-lint-markers"],lint:!0,extraKeys:{Tab:function(e){var t=Array(e.getOption("indentUnit")+1).join(" ");e.replaceSelection(t)}}};return e.applyCodeMirrorOnElement=function(e,r,o){var s=angular.copy(t);r&&Object(a.a)(s,n),o&&(s.readOnly=!0);var l=i.a.fromTextArea(e,s);return l.setSize("100%",500),l},e})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){angular.module("portainer.app").factory("DatatableService",["LocalStorage",function(e){"use strict";var t={setDataTableSettings:function(t,n){e.storeDataTableSettings(t,n)},getDataTableSettings:function(t){return e.getDataTableSettings(t)},setDataTableTextFilters:function(t,n){e.storeDataTableTextFilters(t,n)},getDataTableTextFilters:function(t){return e.getDataTableTextFilters(t)},setDataTableFilters:function(t,n){e.storeDataTableFilters(t,n)},getDataTableFilters:function(t){return e.getDataTableFilters(t)},getDataTableOrder:function(t){return e.getDataTableOrder(t)},setDataTableOrder:function(t,n,a){var r={orderBy:n,reverse:a};e.storeDataTableOrder(t,r)},setDataTableExpandedItems:function(t,n){e.storeDataTableExpandedItems(t,n)},setColumnVisibilitySettings:function(t,n){e.storeColumnVisibilitySettings(t,n)},getDataTableExpandedItems:function(t){return e.getDataTableExpandedItems(t)},setDataTableSelectedItems:function(t,n){e.storeDataTableSelectedItems(t,n)},getDataTableSelectedItems:function(t){return e.getDataTableSelectedItems(t)},getColumnVisibilitySettings:function(t){return e.getColumnVisibilitySettings(t)}};return t}])},function(e,t,n){"use strict";n.r(t);var a=n(4);angular.module("portainer.app").factory("EndpointProvider",["LocalStorage",function(e){var t={},n={};return t.initialize=function(){var t=e.getEndpointID(),a=e.getEndpointPublicURL(),r=e.getOfflineMode();t&&(n.ID=t),a&&(n.PublicURL=a),r&&(n.OfflineMode=r)},t.clean=function(){n={}},t.endpoint=function(){return n},t.endpointID=function(){return void 0===n.ID&&(n.ID=e.getEndpointID()),n.ID},t.setEndpointID=function(t){n.ID=t,e.storeEndpointID(t)},t.endpointPublicURL=function(){return void 0===n.PublicURL&&(n.PublicURL=e.getEndpointPublicURL()),n.PublicURL},t.setEndpointPublicURL=function(t){n.PublicURL=t,e.storeEndpointPublicURL(t)},t.endpoints=function(){return e.getEndpoints()},t.setEndpoints=function(t){e.storeEndpoints(t)},t.offlineMode=function(){return n.OfflineMode},t.setOfflineMode=function(t){n.OfflineMode=t,e.storeOfflineMode(t)},t.setOfflineModeFromStatus=function(t){var a=1!==t;n.OfflineMode=a,e.storeOfflineMode(a)},t.currentEndpoint=function(){var t=n.ID,r=e.getEndpoints();return Object(a.a)(r,function(e){return e.Id===t})},t}])},function(e,t,n){"use strict";n.r(t);var a=n(9);angular.module("portainer.app").factory("FileUploadService",["$q","Upload","EndpointProvider",function(e,t,n){var r={};function i(e,n){return t.upload({url:e,data:{file:n}})}return r.buildImage=function(e,r,i){var o=n.endpointID();return t.http({url:"api/endpoints/"+o+"/docker/build",headers:{"Content-Type":r.type},data:r,params:{t:e,dockerfile:i},ignoreLoadingBar:!0,transformResponse:function(e){return Object(a.jsonObjectsToArrayHandler)(e)}})},r.loadImages=function(e){var r=n.endpointID();return t.http({url:"api/endpoints/"+r+"/docker/images/load",headers:{"Content-Type":e.type},data:e,ignoreLoadingBar:!0,transformResponse:a.genericHandler})},r.createSchedule=function(e){return t.upload({url:"api/schedules?method=file",data:{file:e.File,Name:e.Name,CronExpression:e.CronExpression,Image:e.Image,Endpoints:t.json(e.Endpoints),RetryCount:e.RetryCount,RetryInterval:e.RetryInterval}})},r.createSwarmStack=function(e,n,a,r,i){return t.upload({url:"api/stacks?method=file&type=1&endpointId="+i,data:{file:a,Name:e,SwarmID:n,Env:t.json(r)},ignoreLoadingBar:!0})},r.createComposeStack=function(e,n,a,r){return t.upload({url:"api/stacks?method=file&type=2&endpointId="+r,data:{file:n,Name:e,Env:t.json(a)},ignoreLoadingBar:!0})},r.configureRegistry=function(e,n){return t.upload({url:"api/registries/"+e+"/configure",data:n})},r.executeEndpointJob=function(e,n,a,r){return t.upload({url:"api/endpoints/"+a+"/job?method=file&nodeName="+r,data:{File:n,Image:e},ignoreLoadingBar:!0})},r.createEndpoint=function(e,n,a,r,i,o,s,l,c,d,p,u){return t.upload({url:"api/endpoints",data:{Name:e,EndpointType:n,URL:a,PublicURL:r,GroupID:i,Tags:t.json(o),TLS:s,TLSSkipVerify:l,TLSSkipClientVerify:c,TLSCACertFile:d,TLSCertFile:p,TLSKeyFile:u},ignoreLoadingBar:!0})},r.createAzureEndpoint=function(e,n,a,r,i,o){return t.upload({url:"api/endpoints",data:{Name:e,EndpointType:3,GroupID:i,Tags:t.json(o),AzureApplicationID:n,AzureTenantID:a,AzureAuthenticationKey:r},ignoreLoadingBar:!0})},r.uploadLDAPTLSFiles=function(t,n,a){var r=[];return t&&r.push(i("api/upload/tls/ca?folder=ldap",t)),n&&r.push(i("api/upload/tls/cert?folder=ldap",n)),a&&r.push(i("api/upload/tls/key?folder=ldap",a)),e.all(r)},r.uploadTLSFilesForEndpoint=function(t,n,a,r){var o=[];return n&&o.push(i("api/upload/tls/ca?folder="+t,n)),a&&o.push(i("api/upload/tls/cert?folder="+t,a)),r&&o.push(i("api/upload/tls/key?folder="+t,r)),e.all(o)},r}])},function(e,t){angular.module("portainer.app").factory("FormValidator",[function(){"use strict";var e={validateAccessControl:function(e,t){return e.AccessControlEnabled?t&&"restricted"===e.Ownership&&0===e.AuthorizedUsers.length&&0===e.AuthorizedTeams.length?"您必须至少指定一个用户组或用户。":t||"restricted"!==e.Ownership||0!==e.AuthorizedTeams.length?"":"您必须至少指定一个用户组。":""}};return e}])},function(e,t){angular.module("portainer.app").factory("HttpRequestHelper",[function(){"use strict";var e={},t={agentTargetQueue:[],agentManagerOperation:!1};return e.registryAuthenticationHeader=function(){return t.registryAuthentication},e.setRegistryAuthenticationHeader=function(e){t.registryAuthentication=e},e.portainerAgentTargetHeader=function(){return 0===t.agentTargetQueue.length?t.agentTargetLastValue:(1===t.agentTargetQueue.length&&(t.agentTargetLastValue=t.agentTargetQueue[0]),t.agentTargetQueue.shift())},e.setPortainerAgentTargetHeader=function(e){e&&t.agentTargetQueue.push(e)},e.setPortainerAgentManagerOperation=function(e){t.agentManagerOperation=e},e.portainerAgentManagerOperation=function(){return t.agentManagerOperation},e.resetAgentHeaders=function(){t.agentTargetQueue=[],delete t.agentTargetLastValue,t.agentManagerOperation=!1},e}])},function(e,t,n){"use strict";n.r(t);var a=n(13);angular.module("portainer.app").factory("LegacyExtensionManager",["$q","PluginService","SystemService","NodeService","LegacyExtensionService",function(e,t,n,r,i){var o={};return o.initEndpointExtensions=function(o){var s=e.defer();return 1!==o.Status?(s.resolve([]),s.promise):(n.version().then(function(n){var o,s=parseFloat(n.ApiVersion);return e.all([s>=1.25?(o=e.defer(),t.volumePlugins().then(function(t){var n,o=t;return Object(a.a)(o,"cio:latest")?(n=e.defer(),r.getActiveManager().then(function(e){var t="tcp://"+e.Addr+":8282";return i.registerStoridgeExtension(t)}).then(function(e){n.resolve(e)}).catch(function(e){n.reject({msg:"初始化Storidge扩展期间发生错误",err:e})}),n.promise):i.deregisterStoridgeExtension()}).then(function(e){o.resolve(e)}).catch(function(e){o.reject({msg:"检查Storidge扩展期间发生错误",err:e})}),o.promise):{}])}).then(function(e){var t=e;s.resolve(t)}).catch(function(e){s.reject({msg:"无法连接到Docker环境",err:e})}),s.promise)},o}])},function(e,t){angular.module("portainer.app").factory("LocalStorage",["localStorageService",function(e){"use strict";return{storeEndpointID:function(t){e.set("ENDPOINT_ID",t)},getEndpointID:function(){return e.get("ENDPOINT_ID")},storeEndpointPublicURL:function(t){e.set("ENDPOINT_PUBLIC_URL",t)},getEndpointPublicURL:function(){return e.get("ENDPOINT_PUBLIC_URL")},storeOfflineMode:function(t){e.set("ENDPOINT_OFFLINE_MODE",t)},getOfflineMode:function(){return e.get("ENDPOINT_OFFLINE_MODE")},storeEndpoints:function(t){e.set("ENDPOINTS_DATA",t)},getEndpoints:function(){return e.get("ENDPOINTS_DATA")},storeEndpointState:function(t){e.set("ENDPOINT_STATE",t)},getEndpointState:function(){return e.get("ENDPOINT_STATE")},storeApplicationState:function(t){e.set("APPLICATION_STATE",t)},getApplicationState:function(){return e.get("APPLICATION_STATE")},storeUIState:function(t){e.cookie.set("UI_STATE",t)},getUIState:function(){return e.cookie.get("UI_STATE")},storeExtensionState:function(t){e.set("EXTENSION_STATE",t)},getExtensionState:function(){return e.get("EXTENSION_STATE")},storeJWT:function(t){e.set("JWT",t)},getJWT:function(){return e.get("JWT")},deleteJWT:function(){e.remove("JWT")},storePaginationLimit:function(t,n){e.set("datatable_pagination_"+t,n)},getPaginationLimit:function(t){return e.get("datatable_pagination_"+t)},getDataTableOrder:function(t){return e.get("datatable_order_"+t)},storeDataTableOrder:function(t,n){e.set("datatable_order_"+t,n)},getDataTableTextFilters:function(t){return e.get("datatable_text_filter_"+t)},storeDataTableTextFilters:function(t,n){e.set("datatable_text_filter_"+t,n)},getDataTableFilters:function(t){return e.get("datatable_filters_"+t)},storeDataTableFilters:function(t,n){e.set("datatable_filters_"+t,n)},getDataTableSettings:function(t){return e.get("datatable_settings_"+t)},storeDataTableSettings:function(t,n){e.set("datatable_settings_"+t,n)},getDataTableExpandedItems:function(t){return e.get("datatable_expandeditems_"+t)},storeDataTableExpandedItems:function(t,n){e.set("datatable_expandeditems_"+t,n)},getDataTableSelectedItems:function(t){return e.get("datatable_selecteditems_"+t)},storeDataTableSelectedItems:function(t,n){e.set("datatable_selecteditems_"+t,n)},storeSwarmVisualizerSettings:function(t,n){e.set("swarmvisualizer_"+t,n)},getSwarmVisualizerSettings:function(t){return e.get("swarmvisualizer_"+t)},storeColumnVisibilitySettings:function(t,n){e.set("col_visibility_"+t,n)},getColumnVisibilitySettings:function(t){return e.get("col_visibility_"+t)},storeJobImage:function(t){e.set("job_image",t)},getJobImage:function(){return e.get("job_image")},clean:function(){e.clearAll()}}}])},function(e,t,n){"use strict";n.r(t);n(228);var a=n(142),r=n.n(a);angular.module("portainer.app").factory("ModalService",[function(){var e={},t=function(e){e.css({top:"50%","margin-top":function(){return-e.height()/2}})},n=function(e){return{confirm:{label:e.buttons.confirm.label,className:e.buttons.confirm.className},cancel:{label:e.buttons.cancel&&e.buttons.cancel.label?e.buttons.cancel.label:"退出"}}};return e.enlargeImage=function(e){r.a.dialog({message:'<img src="'+e+'" style="width:100%" />',className:"image-zoom-modal",onEscape:!0})},e.confirm=function(e){var a=r.a.confirm({title:e.title,message:e.message,buttons:n(e),callback:e.callback});t(a)},e.prompt=function(e){var a=r.a.prompt({title:e.title,inputType:e.inputType,inputOptions:e.inputOptions,buttons:n(e),callback:e.callback});t(a)},e.customPrompt=function(e,a){var i=r.a.prompt({title:e.title,inputType:e.inputType,inputOptions:e.inputOptions,buttons:n(e),callback:e.callback});t(i),i.find(".bootbox-body").prepend("<p>"+e.message+"</p>"),i.find(".bootbox-input-checkbox").prop("checked",a)},e.confirmAccessControlUpdate=function(t){e.confirm({title:"您确定吗?",message:"更改此资源的所有权可能会将其管理权限限制于某些用户。",buttons:{confirm:{label:"改变所有权",className:"btn-primary"}},callback:t})},e.confirmImageForceRemoval=function(t){e.confirm({title:"您确定吗?",message:"强制删除镜像将彻底删除镜像，即使它有多个标签或被已停用的容器在使用。",buttons:{confirm:{label:"删除镜像",className:"btn-danger"}},callback:t})},e.confirmDeletion=function(t,n){e.confirm({title:"您确定吗?",message:t,buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:n})},e.confirmContainerDeletion=function(t,n){e.prompt({title:t,inputType:"checkbox",inputOptions:[{text:"自动删除非持久性存储卷<i></i>",value:"1"}],buttons:{confirm:{label:"删除",className:"btn-danger"}},callback:n})},e.confirmContainerRecreation=function(t){e.customPrompt({title:"您确定吗?",message:"您即将重新创建此容器，任何未保留的数据都将丢失，此容器将被删除，另一个将使用相同的配置创建。",inputType:"checkbox",inputOptions:[{text:"拉取最新的镜像<i></i>",value:"1"}],buttons:{confirm:{label:"重建",className:"btn-danger"}},callback:t},!1)},e.confirmEndpointSnapshot=function(t){e.confirm({title:"您确定吗？",message:"手动刷新将轮询检索每个节点的信息，这可能需要一段时间。",buttons:{confirm:{label:"继续",className:"btn-primary"}},callback:t})},e.confirmImageExport=function(t){e.confirm({title:"警告",message:"导出可能需要几分钟才能完成，请不要在导出过程中离开。",buttons:{confirm:{label:"继续",className:"btn-primary"}},callback:t})},e.confirmServiceForceUpdate=function(t,n){e.customPrompt({title:"您确定吗?",message:t,inputType:"checkbox",inputOptions:[{text:"拉取最新的镜像版本<i></i>",value:"1"}],buttons:{confirm:{label:"更新",className:"btn-primary"}},callback:n},!1)},e}])},function(e,t,n){"use strict";n.r(t);var a=n(118),r=n.n(a);angular.module("portainer.app").factory("Notifications",["$sanitize",function(e){var t={success:function(t,n){r.a.success(e(n),e(t))},warning:function(t,n){r.a.warning(e(n),e(t),{timeOut:6e3})},error:function(t,n,a){var i=a;n.err&&n.err.data&&n.err.data.details?i=n.err.data.details:n.data&&n.data.details?i=n.data.details:n.data&&n.data.message?i=n.data.message:n.data&&n.data.content?i=n.data.content:n.message?i=n.message:n.err&&n.err.data&&n.err.data.message?i=n.err.data.message:n.err&&n.err.data&&n.err.data.length>0&&n.err.data[0].message?i=n.err.data[0].message:n.err&&n.err.data&&n.err.data.err?i=n.err.data.err:n.data&&n.data.err?i=n.data.err:n.msg&&(i=n.msg),"无效的JWT令牌"!==i&&r.a.error(e(i),e(t),{timeOut:6e3})}};return t}])},function(e,t){angular.module("portainer.app").factory("PaginationService",["LocalStorage","PAGINATION_MAX_ITEMS",function(e,t){"use strict";var n={getPaginationLimit:function(n){var a=t,r=e.getPaginationLimit(n);return null!==r&&(a=r),""+a},setPaginationLimit:function(t,n){e.storePaginationLimit(t,n)}};return n}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(4),r=n(2),i=n.n(r);angular.module("portainer.app").factory("StateManager",["$q","SystemService","InfoHelper","LocalStorage","SettingsService","StatusService","APPLICATION_CACHE_VALIDITY","AgentPingService",function(e,t,n,r,o,s,l,c){var d={},p={loading:!0,application:{},endpoint:{},UI:{dismissedInfoPanels:{},dismissedInfoHash:""},extensions:[]};function u(){var t=e.defer();return e.all({settings:o.publicSettings(),status:s.status()}).then(function(e){!function(e,t){p.application.authentication=e.Authentication,p.application.analytics=e.Analytics,p.application.endpointManagement=e.EndpointManagement,p.application.snapshot=e.Snapshot,p.application.version=e.Version,p.application.logo=t.LogoURL,p.application.snapshotInterval=t.SnapshotInterval,p.application.enableHostManagementFeatures=t.EnableHostManagementFeatures,p.application.validity=i()().unix()}(e.status,e.settings),r.storeApplicationState(p.application),t.resolve(p)}).catch(function(e){t.reject({msg:"无法检索服务器设置和状态",err:e})}).finally(function(){p.loading=!1}),t.promise}return d.dismissInformationPanel=function(e){p.UI.dismissedInfoPanels[e]=!0,r.storeUIState(p.UI)},d.dismissImportantInformation=function(e){p.UI.dismissedInfoHash=e,r.storeUIState(p.UI)},d.getState=function(){return p},d.clean=function(){p.endpoint={},p.extensions=[]},d.updateLogo=function(e){p.application.logo=e,r.storeApplicationState(p.application)},d.updateSnapshotInterval=function(e){p.application.snapshotInterval=e,r.storeApplicationState(p.application)},d.updateEnableHostManagementFeatures=function(e){p.application.enableHostManagementFeatures=e,r.storeApplicationState(p.application)},d.initialize=function(){var t=e.defer(),n=r.getUIState();n&&(p.UI=n);var a=r.getExtensionState();a&&(p.extensions=a);var o=r.getEndpointState();o&&(p.endpoint=o);var s=r.getApplicationState();s?i()().unix()-s.validity>l?u().then(function(){t.resolve(p)}).catch(function(e){t.reject(e)}):(p.application=s,p.loading=!1,t.resolve(p)):u().then(function(){t.resolve(p)}).catch(function(e){t.reject(e)});return t.promise},d.updateEndpointState=function(a,i){var o=e.defer();return 3===a.Type?(p.endpoint.name=a.Name,p.endpoint.mode={provider:"AZURE"},r.storeEndpointState(p.endpoint),o.resolve(),o.promise):(e.all({version:1===a.Status?t.version():e.when(a.Snapshots[0].SnapshotRaw.Version),info:1===a.Status?t.info():e.when(a.Snapshots[0].SnapshotRaw.Info)}).then(function(e){var t=n.determineEndpointMode(e.info,a.Type),r=parseFloat(e.version.ApiVersion);if(p.endpoint.mode=t,p.endpoint.name=a.Name,p.endpoint.apiVersion=r,p.endpoint.extensions=function(e){for(var t=[],n=0;n<e.length;n++)1===e[n].Type&&t.push("storidge");return t}(i),t.agentProxy&&1===a.Status)return c.ping().then(function(e){p.endpoint.agentApiVersion=e.version})}).then(function(){r.storeEndpointState(p.endpoint),o.resolve()}).catch(function(e){o.reject({msg:"无法连接到Docker节点",err:e})}).finally(function(){p.loading=!1}),o.promise)},d.getAgentApiVersion=function(){return p.endpoint.agentApiVersion},d.saveExtensions=function(e){p.extensions=e,r.storeExtensionState(p.extensions)},d.getExtensions=function(){return p.extensions},d.getExtension=function(e){return Object(a.a)(p.extensions,{Id:e,Enabled:!0})},d}])},function(e,t){angular.module("portainer.app").controller("AccountController",["$scope","$state","Authentication","UserService","Notifications","SettingsService",function(e,t,n,a,r,i){e.formValues={currentPassword:"",newPassword:"",confirmPassword:""},e.updatePassword=function(){a.updateUserPassword(e.userID,e.formValues.currentPassword,e.formValues.newPassword).then(function(){r.success("成功","已成功更新密码"),t.reload()}).catch(function(e){r.error("失败",e,e.msg)})},e.userID=n.getUserDetails().ID,i.publicSettings().then(function(t){e.AuthenticationMethod=t.AuthenticationMethod}).catch(function(e){r.error("失败",e,"无法检索应用程序设置")})}])},function(e,t,n){"use strict";n.r(t);n(44),n(45),n(5);function a(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}angular.module("portainer.app").controller("AuthenticationController",["$q","$scope","$state","$stateParams","$sanitize","Authentication","UserService","EndpointService","ExtensionService","StateManager","Notifications","SettingsService","URLHelper",function(e,t,n,r,i,o,s,l,c,d,p,u,m){function g(){return f.apply(this,arguments)}function f(){var e;return e=regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c.retrieveAndSaveEnabledExtensions();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),p.error("Failure",e.t0,"无法检索已启用的扩展程序");case 8:case"end":return e.stop()}},e,this,[[0,5]])}),(f=function(){var t=this,n=arguments;return new Promise(function(r,i){var o=e.apply(t,n);function s(e){a(o,r,i,s,l,"next",e)}function l(e){a(o,r,i,s,l,"throw",e)}s(void 0)})}).apply(this,arguments)}t.logo=d.getState().application.logo,t.formValues={Username:"",Password:""},t.state={AuthenticationError:"",isInOAuthProcess:!0,OAuthProvider:""},t.authenticateUser=function(){var a=t.formValues.Username,r=t.formValues.Password;o.login(a,r).then(function(){return g()}).then(function(){l.endpoints().then(function(e){var t=e;0===t.length&&o.isAdmin()?n.go("portainer.init.endpoint"):n.go("portainer.home")}).catch(function(e){p.error("失败",e,"无法检索节点")})}).catch(function(){u.publicSettings().then(function(t){return 1===t.AuthenticationMethod?o.login(i(a),i(r)):e.reject()}).then(function(){return g()}).then(function(){n.go("portainer.updatePassword")}).catch(function(){t.state.AuthenticationError="认证无效"})})},function(){if(u.publicSettings().then(function(e){var n;t.AuthenticationMethod=e.AuthenticationMethod,t.OAuthLoginURI=e.OAuthLoginURI,t.state.OAuthProvider=-1!==(n=e.OAuthLoginURI).indexOf("login.microsoftonline.com")?"Microsoft":-1!==n.indexOf("accounts.google.com")?"Google":-1!==n.indexOf("github.com")?"Github":"OAuth"}),r.logout||r.error)return o.logout(),t.state.AuthenticationError=r.error,void(t.state.isInOAuthProcess=!1);o.isAuthenticated()&&n.go("portainer.home"),t.applicationState.application.authentication?s.administratorExists().then(function(e){e||n.go("portainer.init.admin")}).catch(function(e){p.error("失败",e,"无法验证管理员帐户是否存在")}):l.endpoints().then(function(e){0===e.length?n.go("portainer.init.endpoint"):n.go("portainer.home")}).catch(function(e){p.error("失败",e,"无法检索节点")});var e=m.getParameter("code");e?function(e){o.OAuthLogin(e).then(function(){return g()}).then(function(){m.cleanParameters()}).catch(function(){t.state.AuthenticationError="无法通过OAuth登录",t.state.isInOAuthProcess=!1})}(e):t.state.isInOAuthProcess=!1}()}])},function(e,t,n){"use strict";n.r(t);n(44),n(95),n(45),n(70);var a=n(16),r=n.n(a);function i(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}function o(e){return function(){var t=this,n=arguments;return new Promise(function(a,r){var o=e.apply(t,n);function s(e){i(o,a,r,s,l,"next",e)}function l(e){i(o,a,r,s,l,"throw",e)}s(void 0)})}}function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var l=function(){function e(t,n,a,r,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=t,this.$transition$=n,this.Notifications=a,this.EndpointService=r,this.GroupService=i,this.updateAccess=this.updateAccess.bind(this)}var t,n,a,r,i;return e.$inject=["$state","$transition$","Notifications","EndpointService","GroupService"],t=e,(n=[{key:"$onInit",value:(i=o(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.state={actionInProgress:!1},e.prev=1,e.next=4,this.EndpointService.endpoint(this.$transition$.params().id);case 4:return this.endpoint=e.sent,e.next=7,this.GroupService.group(this.endpoint.GroupId);case 7:this.group=e.sent,e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),this.Notifications.error("失败",e.t0,"无法检索端点信息");case 13:case"end":return e.stop()}},e,this,[[1,10]])})),function(){return i.apply(this,arguments)})},{key:"updateAccess",value:(r=o(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,this.state.actionInProgress=!0,e.next=4,this.EndpointService.updateEndpoint(this.$transition$.params().id,this.endpoint);case 4:this.Notifications.success("访问已成功更新"),this.$state.reload(),e.next=12;break;case 8:e.prev=8,e.t0=e.catch(0),this.state.actionInProgress=!1,this.Notifications.error("失败",e.t0,"无法更新访问权限");case 12:case"end":return e.stop()}},e,this,[[0,8]])})),function(){return r.apply(this,arguments)})}])&&s(t.prototype,n),a&&s(t,a),e}();t.default=l,r.a.module("portainer.app").controller("EndpointAccessController",l)},function(e,t,n){"use strict";n.r(t),function(e){n(0),n(20);var t=n(137);angular.module("portainer.app").controller("CreateEndpointController",["$q","$scope","$state","$filter","clipboard","EndpointService","GroupService","TagService","Notifications",function(n,a,r,i,o,s,l,c,d){function p(e,t,n,i,o,l,c,p,u,m,g,f){a.state.actionInProgress=!0,s.createRemoteEndpoint(e,t,n,i,o,l,c,p,u,m,g,f).then(function(){d.success("已成功创建节点",e),r.go("portainer.endpoints",{},{reload:!0})}).catch(function(e){d.error("失败",e,"无法创建节点")}).finally(function(){a.state.actionInProgress=!1})}a.state={EnvironmentType:"docker",actionInProgress:!1},a.formValues={Name:"",URL:"",PublicURL:"",GroupId:1,SecurityFormData:new t.EndpointSecurityFormData,AzureApplicationId:"",AzureTenantId:"",AzureAuthenticationKey:"",Tags:[]},a.copyAgentCommand=function(){o.copyText("curl -L https://downloads.example.com/agent-stack.yml -o agent-stack.yml && docker stack deploy --compose-file=agent-stack.yml caas-agent"),e("#copyNotification").show(),e("#copyNotification").fadeOut(2e3)},a.addDockerEndpoint=function(){var e=a.formValues.Name,t=i("stripprotocol")(a.formValues.URL),n=""===a.formValues.PublicURL?t.split(":")[0]:a.formValues.PublicURL,r=a.formValues.GroupId,o=a.formValues.Tags,s=a.formValues.SecurityFormData,l=s.TLS,c=s.TLSMode,d=l&&("tls_client_noca"===c||"tls_only"===c),u=l&&("tls_ca"===c||"tls_only"===c);p(e,1,t,n,r,o,l,d,u,d?null:s.TLSCACert,u?null:s.TLSCert,u?null:s.TLSKey)},a.addAgentEndpoint=function(){var e=a.formValues.Name,t=i("stripprotocol")(a.formValues.URL),n=""===a.formValues.PublicURL?t.split(":")[0]:a.formValues.PublicURL;p(e,2,t,n,a.formValues.GroupId,a.formValues.Tags,!0,!0,!0,null,null,null)},a.addAzureEndpoint=function(){!function(e,t,n,i,o,l){a.state.actionInProgress=!0,s.createAzureEndpoint(e,t,n,i,o,l).then(function(){d.success("已成功创建节点",e),r.go("portainer.endpoints",{},{reload:!0})}).catch(function(e){d.error("失败",e,"无法创建节点")}).finally(function(){a.state.actionInProgress=!1})}(a.formValues.Name,a.formValues.AzureApplicationId,a.formValues.AzureTenantId,a.formValues.AzureAuthenticationKey,a.formValues.GroupId,a.formValues.Tags)},n.all({groups:l.groups(),tags:c.tagNames()}).then(function(e){a.groups=e.groups,a.availableTags=e.tags}).catch(function(e){d.error("失败",e,"无法载入节点组")})}])}.call(this,n(30))},function(e,t,n){"use strict";n.r(t);n(5);var a=n(137);angular.module("portainer.app").controller("EndpointController",["$q","$scope","$state","$transition$","$filter","EndpointService","GroupService","TagService","EndpointProvider","Notifications",function(e,t,n,r,i,o,s,l,c,d){t.applicationState.application.endpointManagement||n.go("portainer.endpoints"),t.state={uploadInProgress:!1,actionInProgress:!1},t.formValues={SecurityFormData:new a.EndpointSecurityFormData},t.updateEndpoint=function(){var e=t.endpoint,a=t.formValues.SecurityFormData,r=a.TLS,i=a.TLSMode,s=r&&("tls_client_noca"===i||"tls_only"===i),l=r&&("tls_ca"===i||"tls_only"===i),p={Name:e.Name,PublicURL:e.PublicURL,GroupID:e.GroupId,Tags:e.Tags,TLS:r,TLSSkipVerify:s,TLSSkipClientVerify:l,TLSCACert:s||a.TLSCACert===e.TLSConfig.TLSCACert?null:a.TLSCACert,TLSCert:l||a.TLSCert===e.TLSConfig.TLSCert?null:a.TLSCert,TLSKey:l||a.TLSKey===e.TLSConfig.TLSKey?null:a.TLSKey,AzureApplicationID:e.AzureCredentials.ApplicationID,AzureTenantID:e.AzureCredentials.TenantID,AzureAuthenticationKey:e.AzureCredentials.AuthenticationKey};"local"!==t.endpointType&&3!==e.Type&&(p.URL="tcp://"+e.URL),t.state.actionInProgress=!0,o.updateEndpoint(e.Id,p).then(function(){d.success("已成功更新节点",t.endpoint.Name),c.setEndpointPublicURL(e.PublicURL),n.go("portainer.endpoints",{},{reload:!0})},function(e){d.error("失败",e,"无法更新节点"),t.state.actionInProgress=!1},function(e){e.upload&&(t.state.uploadInProgress=e.upload)})},e.all({endpoint:o.endpoint(r.params().id),groups:s.groups(),tags:l.tagNames()}).then(function(e){var n=e.endpoint;0===n.URL.indexOf("unix://")||0===n.URL.indexOf("npipe://")?t.endpointType="local":t.endpointType="remote",n.URL=i("stripprotocol")(n.URL),t.endpoint=n,t.groups=e.groups,t.availableTags=e.tags}).catch(function(e){d.error("失败",e,"无法检索节点详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("EndpointsController",["$q","$scope","$state","EndpointService","GroupService","EndpointHelper","Notifications",function(e,t,n,a,r,i,o){t.removeAction=function(e){var r=e.length;angular.forEach(e,function(e){a.deleteEndpoint(e.Id).then(function(){o.success("已成功删除节点",e.Name);var n=t.endpoints.indexOf(e);t.endpoints.splice(n,1)}).catch(function(e){o.error("失败",e,"无法删除节点")}).finally(function(){0===--r&&n.reload()})})},e.all({endpoints:a.endpoints(),groups:r.groups()}).then(function(e){var n=e.endpoints,a=e.groups;i.mapGroupNameToEndpoint(n,a),t.groups=a,t.endpoints=n}).catch(function(e){o.error("失败",e,"无法加载视图")})}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(2),r=n.n(a);angular.module("portainer.app").controller("ExtensionsController",["$scope","$state","ExtensionService","Notifications",function(e,t,n,a){e.state={actionInProgress:!1,currentDate:r()().format("YYYY-MM-dd")},e.formValues={License:""},e.enableExtension=function(){var r=e.formValues.License;e.state.actionInProgress=!0,n.enable(r).then(function(){return n.retrieveAndSaveEnabledExtensions()}).then(function(){a.success("已成功启用扩展"),t.reload()}).catch(function(e){a.error("失败",e,"无法启用扩展")}).finally(function(){e.state.actionInProgress=!1})},e.isValidLicenseFormat=function(t){var n=!0;e.formValues.License&&(isNaN(e.formValues.License[0])&&(n=!1),t.extension_license.$setValidity("invalidLicense",n))},n.extensions(!0).then(function(t){e.extensions=t}).catch(function(t){e.extensions=[],a.error("失败",t,"无法访问扩展存储")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("ExtensionController",["$q","$scope","$transition$","$state","ExtensionService","Notifications","ModalService",function(e,t,n,a,r,i,o){t.state={updateInProgress:!1,deleteInProgress:!1},t.formValues={instances:1},t.updateExtension=function(e){t.state.updateInProgress=!0,r.update(e.Id,e.Version).then(function(){i.success("已成功更新扩展"),a.reload()}).catch(function(e){i.error("失败",e,"无法更新扩展")}).finally(function(){t.state.updateInProgress=!1})},t.deleteExtension=function(e){t.state.deleteInProgress=!0,r.delete(e.Id).then(function(){i.success("已成功删除扩展"),a.reload()}).catch(function(e){i.error("失败",e,"无法删除扩展")}).finally(function(){t.state.deleteInProgress=!1})},t.enlargeImage=function(e){o.enlargeImage(e)},r.extension(n.params().id).then(function(e){t.extension=e}).catch(function(e){i.error("失败",e,"无法检索扩展信息")})}])},function(e,t){angular.module("portainer.app").controller("GroupAccessController",["$scope","$state","$transition$","GroupService","Notifications",function(e,t,n,a,r){var i;e.updateAccess=function(){e.state.actionInProgress=!0,a.updateGroup(e.group,e.group.AssociatedEndpoints).then(function(){r.success("访问已成功更新"),t.reload()}).catch(function(t){e.state.actionInProgress=!1,r.error("失败",t,"访问无法更新")})},i=n.params().id,e.state={actionInProgress:!1},a.group(i).then(function(t){e.group=t}).catch(function(e){r.error("失败",e,"无法加载视图")})}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(89);angular.module("portainer.app").controller("CreateGroupController",["$q","$scope","$state","GroupService","EndpointService","TagService","Notifications",function(e,t,n,r,i,o,s){t.state={actionInProgress:!1},t.create=function(){for(var e=t.model,a=[],i=0;i<t.associatedEndpoints.length;i++){var o=t.associatedEndpoints[i];a.push(o.Id)}t.state.actionInProgress=!0,r.createGroup(e,a).then(function(){s.success("已成功创建节点组"),n.go("portainer.groups",{},{reload:!0})}).catch(function(e){s.error("失败",e,"无法创建节点组")}).finally(function(){t.state.actionInProgress=!1})},t.model=new a.EndpointGroupDefaultModel,e.all({endpoints:i.endpointsByGroup(1),tags:o.tagNames()}).then(function(e){t.availableEndpoints=e.endpoints,t.associatedEndpoints=[],t.availableTags=e.tags}).catch(function(e){s.error("失败",e,"无法检索节点")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("GroupController",["$q","$scope","$state","$transition$","GroupService","EndpointService","TagService","Notifications",function(e,t,n,a,r,i,o,s){var l;t.state={actionInProgress:!1},t.update=function(){for(var e=t.group,a=[],i=0;i<t.associatedEndpoints.length;i++){var o=t.associatedEndpoints[i];a.push(o.Id)}t.state.actionInProgress=!0,r.updateGroup(e,a).then(function(){s.success("已成功更新组"),n.go("portainer.groups",{},{reload:!0})}).catch(function(e){s.error("失败",e,"无法更新组")}).finally(function(){t.state.actionInProgress=!1})},l=a.params().id,e.all({group:r.group(l),endpoints:i.endpoints(),tags:o.tagNames()}).then(function(e){t.group=e.group;for(var n=[],a=[],r=0;r<e.endpoints.length;r++){var i=e.endpoints[r];i.GroupId===+l?a.push(i):1===i.GroupId&&n.push(i)}t.availableEndpoints=n,t.associatedEndpoints=a,t.availableTags=e.tags}).catch(function(e){s.error("失败",e,"无法加载视图")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("GroupsController",["$scope","$state","$filter","GroupService","Notifications",function(e,t,n,a,r){e.removeAction=function(n){var i=n.length;angular.forEach(n,function(n){a.deleteGroup(n.Id).then(function(){r.success("已成功删除节点组",n.Name);var t=e.groups.indexOf(n);e.groups.splice(t,1)}).catch(function(e){r.error("失败",e,"无法删除节点组")}).finally(function(){0===--i&&t.reload()})})},a.groups().then(function(t){e.groups=t}).catch(function(t){r.error("失败",t,"无法检索节点组"),e.groups=[]})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("HomeController",["$q","$scope","$state","Authentication","EndpointService","EndpointHelper","GroupService","Notifications","EndpointProvider","StateManager","LegacyExtensionManager","ModalService","MotdService","SystemService",function(e,t,n,a,r,i,o,s,l,c,d,p,u,m){t.goToEdit=function(e){n.go("portainer.endpoints.endpoint",{id:e})},t.goToDashboard=function(t){if(3===t.Type)return function(e){l.setEndpointID(e.Id),l.setEndpointPublicURL(e.PublicURL),l.setOfflineModeFromStatus(e.Status),c.updateEndpointState(e,[]).then(function(){n.go("azure.dashboard")}).catch(function(e){s.error("失败",e,"无法连接到Azure节点")})}(t);(function(t){var n=e.defer(),a=1;return m.ping(t.Id).then(function(){a=1}).catch(function(){a=2}).finally(function(){if(t.Status===a)return n.resolve(t),n.promise;r.updateEndpoint(t.Id,{Status:a}).then(function(){n.resolve(t)}).catch(function(e){n.reject({msg:"无法更新节点状态",err:e})})}),n.promise})(t).then(function(){return function(e){if(2===e.Status&&e.Snapshots[0]&&!0===e.Snapshots[0].Swarm)return void s.error("失败","","无法访问节点。将连接到另一个swarm群集管理器。");if(2===e.Status&&!e.Snapshots[0])return void s.error("失败","","无法访问节点，且没有可用于脱机浏览的快照。");l.setEndpointID(e.Id),l.setEndpointPublicURL(e.PublicURL),l.setOfflineModeFromStatus(e.Status),d.initEndpointExtensions(e).then(function(t){var n=t;return c.updateEndpointState(e,n)}).then(function(){n.go("docker.dashboard")}).catch(function(e){s.error("失败",e,"无法连接到Docker节点")})}(t)}).catch(function(e){s.error("失败",e,"无法确认节点状态")})},t.dismissImportantInformation=function(e){c.dismissImportantInformation(e)},t.dismissInformationPanel=function(e){c.dismissInformationPanel(e)},t.triggerSnapshot=function(){p.confirmEndpointSnapshot(function(e){e&&r.snapshotEndpoints().then(function(){s.success("成功","节点已更新"),n.reload()}).catch(function(e){s.error("失败",e,"节点快照期间发生错误")})})},t.isAdmin=a.isAdmin(),u.motd().then(function(e){t.motd=e}),e.all({endpoints:r.endpoints(),groups:o.groups()}).then(function(e){var n=e.endpoints,a=e.groups;i.mapGroupNameToEndpoint(n,a),t.endpoints=n,l.setEndpoints(n)}).catch(function(e){s.error("失败",e,"无法检索节点信息")})}])},function(e,t,n){"use strict";n.r(t);n(44),n(45),n(0);function a(e,t,n,a,r,i,o){try{var s=e[i](o),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(a,r)}angular.module("portainer.app").controller("InitAdminController",["$scope","$state","Notifications","Authentication","StateManager","UserService","EndpointService","ExtensionService",function(e,t,n,r,i,o,s,l){function c(){var e;return e=regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,l.retrieveAndSaveEnabledExtensions();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),n.error("失败",e.t0,"无法检索已启用的扩展程序");case 8:case"end":return e.stop()}},e,this,[[0,5]])}),(c=function(){var t=this,n=arguments;return new Promise(function(r,i){var o=e.apply(t,n);function s(e){a(o,r,i,s,l,"next",e)}function l(e){a(o,r,i,s,l,"throw",e)}s(void 0)})}).apply(this,arguments)}e.logo=i.getState().application.logo,e.formValues={Username:"admin",Password:"",ConfirmPassword:""},e.state={actionInProgress:!1},e.createAdminUser=function(){var a=e.formValues.Username,i=e.formValues.Password;e.state.actionInProgress=!0,o.initAdministrator(a,i).then(function(){return r.login(a,i)}).then(function(){return function(){return c.apply(this,arguments)}()}).then(function(){return s.endpoints()}).then(function(e){0===e.length?t.go("portainer.init.endpoint"):t.go("portainer.home")}).catch(function(e){n.error("失败",e,"无法创建管理员用户")}).finally(function(){e.state.actionInProgress=!1})},o.administratorExists().then(function(e){e&&t.go("portainer.home")}).catch(function(e){n.error("失败",e,"无法验证是否存在管理员帐户")})}])},function(e,t,n){"use strict";n.r(t);n(20),n(0);var a=n(76);angular.module("portainer.app").controller("InitEndpointController",["$scope","$state","EndpointService","StateManager","Notifications",function(e,t,n,r,i){function o(a,r,o,s,l,c,d,p,u,m){e.state.actionInProgress=!0,n.createRemoteEndpoint(a,r,o,s,1,[],l,c,d,p,u,m).then(function(){t.go("portainer.home")}).catch(function(e){i.error("失败",e,"无法连接到Docker环境")}).finally(function(){e.state.actionInProgress=!1})}Object(a.a)(e.applicationState.endpoint)||t.go("portainer.home"),e.logo=r.getState().application.logo,e.state={uploadInProgress:!1,actionInProgress:!1},e.formValues={EndpointType:"remote",Name:"",URL:"",TLS:!1,TLSSkipVerify:!1,TLSSKipClientVerify:!1,TLSCACert:null,TLSCert:null,TLSKey:null,AzureApplicationId:"",AzureTenantId:"",AzureAuthenticationKey:""},e.createLocalEndpoint=function(){e.state.actionInProgress=!0,n.createLocalEndpoint().then(function(){t.go("portainer.home")}).catch(function(e){i.error("失败",e,"无法连接到Docker环境")}).finally(function(){e.state.actionInProgress=!1})},e.createAzureEndpoint=function(){!function(a,r,o,s){e.state.actionInProgress=!0,n.createAzureEndpoint(a,r,o,s,1,[]).then(function(){t.go("portainer.home")}).catch(function(e){i.error("失败",e,"无法连接到Azure环境")}).finally(function(){e.state.actionInProgress=!1})}(e.formValues.Name,e.formValues.AzureApplicationId,e.formValues.AzureTenantId,e.formValues.AzureAuthenticationKey)},e.createAgentEndpoint=function(){var t=e.formValues.Name,n=e.formValues.URL,a=n.split(":")[0];o(t,2,n,a,!0,!0,!0,null,null,null)},e.createRemoteEndpoint=function(){var t=e.formValues.Name,n=e.formValues.URL,a=n.split(":")[0],r=e.formValues.TLS,i=r&&e.formValues.TLSSkipVerify,s=r&&e.formValues.TLSSKipClientVerify;o(t,1,n,a,r,i,s,i?null:e.formValues.TLSCACert,s?null:e.formValues.TLSCert,s?null:e.formValues.TLSKey)}}])},function(e,t){angular.module("portainer.app").controller("MainController",["$scope","$cookieStore","StateManager","EndpointProvider",function(e,t,n,a){e.getWidth=function(){return window.innerWidth},e.applicationState=n.getState(),e.endpointState=a.endpoint(),e.$watch(e.getWidth,function(n){n>=992?angular.isDefined(t.get("toggle"))?e.toggle=!!t.get("toggle"):e.toggle=!0:e.toggle=!1}),e.toggleSidebar=function(){e.toggle=!e.toggle,t.put("toggle",e.toggle)},window.onresize=function(){e.$apply()}}])},function(e,t){angular.module("portainer.app").controller("RegistryAccessController",["$scope","$state","$transition$","RegistryService","Notifications",function(e,t,n,a,r){e.updateAccess=function(){e.state.actionInProgress=!0,a.updateRegistry(e.registry).then(function(){r.success("访问已成功更新"),t.reload()}).catch(function(t){e.state.actionInProgress=!1,r.error("失败",t,"访问无法更新")})},e.state={actionInProgress:!1},a.registry(n.params().id).then(function(t){e.registry=t}).catch(function(e){r.error("失败",e,"无法检索仓库详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(0),n(42);var a=n(62);angular.module("portainer.app").controller("CreateRegistryController",["$scope","$state","RegistryService","Notifications",function(e,t,n,r){e.selectQuayRegistry=function(){e.model.Name="Quay",e.model.URL="quay.io",e.model.Authentication=!0},e.selectAzureRegistry=function(){e.model.Name="",e.model.URL="",e.model.Authentication=!0},e.selectCustomRegistry=function(){e.model.Name="",e.model.URL="",e.model.Authentication=!1},e.create=function(){e.model.URL=e.model.URL.replace(/^https?\:\/\//i,""),e.state.actionInProgress=!0,n.createRegistry(e.model).then(function(){r.success("已成功创建仓库"),t.go("portainer.registries")}).catch(function(e){r.error("失败",e,"无法创建仓库")}).finally(function(){e.state.actionInProgress=!1})},e.state={actionInProgress:!1},e.model=new a.RegistryDefaultModel}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("RegistryController",["$scope","$state","$transition$","$filter","RegistryService","Notifications",function(e,t,n,a,r,i){var o;e.state={actionInProgress:!1},e.formValues={Password:""},e.updateRegistry=function(){var n=e.registry;n.Password=e.formValues.Password,e.state.actionInProgress=!0,r.updateRegistry(n).then(function(){i.success("已成功更新仓库"),t.go("portainer.registries")}).catch(function(e){i.error("失败",e,"无法更新仓库")}).finally(function(){e.state.actionInProgress=!1})},o=n.params().id,r.registry(o).then(function(t){e.registry=t}).catch(function(e){i.error("失败",e,"无法检索仓库详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(1),n(6),n(0);angular.module("portainer.app").controller("RegistriesController",["$q","$scope","$state","RegistryService","DockerHubService","ModalService","Notifications","ExtensionService","Authentication",function(e,t,n,a,r,i,o,s,l){t.state={actionInProgress:!1},t.formValues={dockerHubPassword:""},t.updateDockerHub=function(){var e=t.dockerhub;e.Password=t.formValues.dockerHubPassword,t.state.actionInProgress=!0,r.update(e).then(function(){o.success("已成功更新DockerHub仓库")}).catch(function(e){o.error("失败",e,"无法更新DockerHub的详细信息")}).finally(function(){t.state.actionInProgress=!1})},t.removeAction=function(e){i.confirmDeletion("您想删除选定的仓库吗？",function(r){r&&function(e){var r=e.length;angular.forEach(e,function(e){a.deleteRegistry(e.Id).then(function(){o.success("已成功删除仓库",e.Name);var n=t.registries.indexOf(e);t.registries.splice(n,1)}).catch(function(e){o.error("失败",e,"无法删除仓库")}).finally(function(){0===--r&&n.reload()})})}(e)})},e.all({registries:a.registries(),dockerhub:r.dockerhub(),registryManagement:s.extensionEnabled(s.EXTENSIONS.REGISTRY_MANAGEMENT)}).then(function(e){t.registries=e.registries,t.dockerhub=e.dockerhub,t.registryManagementAvailable=e.registryManagement,t.applicationState.application.authentication&&(t.isAdmin=l.isAdmin())}).catch(function(e){t.registries=[],o.error("失败",e,"无法检索仓库")})}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(56);angular.module("portainer.app").controller("CreateScheduleController",["$q","$scope","$state","Notifications","EndpointService","GroupService","ScheduleService",function(e,t,n,r,i,o,s){t.state={actionInProgress:!1},t.create=function(){var e=t.model;t.state.actionInProgress=!0,function(e){if("editor"===e.Job.Method)return s.createScheduleFromFileContent(e);return s.createScheduleFromFileUpload(e)}(e).then(function(){r.success("已成功创建计划"),n.go("portainer.schedules",{},{reload:!0})}).catch(function(e){r.error("失败",e,"无法创建计划")}).finally(function(){t.state.actionInProgress=!1})},t.model=new a.ScheduleDefaultModel,e.all({endpoints:i.endpoints(),groups:o.groups()}).then(function(e){t.endpoints=e.endpoints,t.groups=e.groups}).catch(function(e){r.error("失败",e,"无法检索节点列表")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("ScheduleController",["$q","$scope","$transition$","$state","Notifications","EndpointService","GroupService","ScheduleService","EndpointProvider",function(e,t,n,a,r,i,o,s,l){var c;t.state={actionInProgress:!1},t.update=function(){var e=t.schedule;t.state.actionInProgress=!0,s.updateSchedule(e).then(function(){r.success("已成功更新计划"),a.go("portainer.schedules",{},{reload:!0})}).catch(function(e){r.error("失败",e,"无法更新计划")}).finally(function(){t.state.actionInProgress=!1})},t.goToContainerLogs=function(e,t){l.setEndpointID(e),a.go("docker.containers.container.logs",{id:t})},c=n.params().id,e.all({schedule:s.schedule(c),file:s.getScriptFile(c),tasks:s.scriptExecutionTasks(c),endpoints:i.endpoints(),groups:o.groups()}).then(function(e){var n=e.schedule;n.Job.FileContent=e.file.ScheduleFileContent;var a=e.endpoints;!function(e,t){for(var n=0;n<e.length;n++)for(var a=e[n],r=0;r<t.length;r++){var i=t[r];if(a.EndpointId===i.Id){a.Endpoint=i;break}}}(e.tasks,a),t.schedule=n,t.tasks=e.tasks,t.endpoints=e.endpoints,t.groups=e.groups}).catch(function(e){r.error("失败",e,"无法检索节点列表")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("SchedulesController",["$scope","$state","Notifications","ModalService","ScheduleService",function(e,t,n,a,r){e.removeAction=function(i){a.confirmDeletion("您要删除所选择的计划吗？",function(a){var o,s;a&&(s=(o=i).length,angular.forEach(o,function(a){r.deleteSchedule(a.Id).then(function(){n.success("已成功删除计划",a.Name);var t=e.schedules.indexOf(a);e.schedules.splice(t,1)}).catch(function(e){n.error("失败",e,"无法删除计划 "+a.Name)}).finally(function(){0==--s&&t.reload()})}))})},r.schedules().then(function(t){e.schedules=t}).catch(function(t){n.error("失败",t,"无法检索计划"),e.schedules=[]})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0);angular.module("portainer.app").controller("SettingsAuthenticationController",["$q","$scope","$state","Notifications","SettingsService","FileUploadService","TeamService","ExtensionService",function(e,t,n,a,r,i,o,s){function l(e,t){-1===e.LDAPSettings.URL.indexOf(":")&&(e.LDAPSettings.URL+=t?":636":":389")}t.state={successfulConnectivityCheck:!1,failedConnectivityCheck:!1,uploadInProgress:!1,connectivityCheckInProgress:!1,actionInProgress:!1},t.formValues={TLSCACert:""},t.goToOAuthExtensionView=function(){n.go("portainer.extensions.extension",{id:2})},t.isOauthEnabled=function(){return t.settings&&3===t.settings.AuthenticationMethod},t.addSearchConfiguration=function(){t.LDAPSettings.SearchSettings.push({BaseDN:"",UserNameAttribute:"",Filter:""})},t.removeSearchConfiguration=function(e){t.LDAPSettings.SearchSettings.splice(e,1)},t.addGroupSearchConfiguration=function(){t.LDAPSettings.GroupSearchSettings.push({GroupBaseDN:"",GroupAttribute:"",GroupFilter:""})},t.removeGroupSearchConfiguration=function(e){t.LDAPSettings.GroupSearchSettings.splice(e,1)},t.LDAPConnectivityCheck=function(){var n=t.settings,o=t.formValues.TLSCACert!==n.LDAPSettings.TLSConfig.TLSCACert?t.formValues.TLSCACert:null,s=(t.LDAPSettings.TLSConfig.TLS||t.LDAPSettings.StartTLS)&&!t.LDAPSettings.TLSConfig.TLSSkipVerify;t.state.uploadInProgress=s,t.state.connectivityCheckInProgress=!0,e.when(!s||i.uploadLDAPTLSFiles(o,null,null)).then(function(){return l(n,t.LDAPSettings.TLSConfig.TLS),r.checkLDAPConnectivity(n)}).then(function(){t.state.failedConnectivityCheck=!1,t.state.successfulConnectivityCheck=!0,a.success("已成功连接到LDAP")}).catch(function(e){t.state.failedConnectivityCheck=!0,t.state.successfulConnectivityCheck=!1,a.error("失败",e,"无法连接到LDAP")}).finally(function(){t.state.uploadInProgress=!1,t.state.connectivityCheckInProgress=!1})},t.saveSettings=function(){var n=t.settings,o=t.formValues.TLSCACert!==n.LDAPSettings.TLSConfig.TLSCACert?t.formValues.TLSCACert:null,s=(t.LDAPSettings.TLSConfig.TLS||t.LDAPSettings.StartTLS)&&!t.LDAPSettings.TLSConfig.TLSSkipVerify;t.state.uploadInProgress=s,t.state.actionInProgress=!0,e.when(!s||i.uploadLDAPTLSFiles(o,null,null)).then(function(){return l(n,t.LDAPSettings.TLSConfig.TLS),r.update(n)}).then(function(){a.success("已成功更新验证设置")}).catch(function(e){a.error("失败",e,"无法更新验证设置")}).finally(function(){t.state.uploadInProgress=!1,t.state.actionInProgress=!1})},e.all({settings:r.settings(),teams:o.teams(),oauthAuthentication:s.extensionEnabled(s.EXTENSIONS.OAUTH_AUTHENTICATION)}).then(function(e){var n=e.settings;t.teams=e.teams,t.settings=n,t.LDAPSettings=n.LDAPSettings,t.OAuthSettings=n.OAuthSettings,t.formValues.TLSCACert=n.LDAPSettings.TLSConfig.TLSCACert,t.oauthAuthenticationAvailable=e.oauthAuthentication}).catch(function(e){a.error("失败",e,"无法检索应用程序设置")})}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("SettingsController",["$scope","$state","Notifications","SettingsService","StateManager",function(e,t,n,a,r){function i(i){a.update(i).then(function(){n.success("已成功更新设置"),r.updateLogo(i.LogoURL),r.updateSnapshotInterval(i.SnapshotInterval),r.updateEnableHostManagementFeatures(i.EnableHostManagementFeatures),t.reload()}).catch(function(e){n.error("失败",e,"无法更新设置")}).finally(function(){e.state.actionInProgress=!1})}e.state={actionInProgress:!1},e.formValues={customLogo:!1,externalTemplates:!1,restrictBindMounts:!1,restrictPrivilegedMode:!1,labelName:"",labelValue:"",enableHostManagementFeatures:!1},e.removeFilteredContainerLabel=function(t){var n=e.settings;n.BlackListedLabels.splice(t,1),i(n)},e.addFilteredContainerLabel=function(){var t=e.settings,n={name:e.formValues.labelName,value:e.formValues.labelValue};t.BlackListedLabels.push(n),i(t)},e.saveApplicationSettings=function(){var t=e.settings;e.formValues.customLogo||(t.LogoURL=""),e.formValues.externalTemplates||(t.TemplatesURL=""),t.AllowBindMountsForRegularUsers=!e.formValues.restrictBindMounts,t.AllowPrivilegedModeForRegularUsers=!e.formValues.restrictPrivilegedMode,t.EnableHostManagementFeatures=e.formValues.enableHostManagementFeatures,e.state.actionInProgress=!0,i(t)},a.settings().then(function(t){var n=t;e.settings=n,""!==n.LogoURL&&(e.formValues.customLogo=!0),""!==n.TemplatesURL&&(e.formValues.externalTemplates=!0),e.formValues.restrictBindMounts=!n.AllowBindMountsForRegularUsers,e.formValues.restrictPrivilegedMode=!n.AllowPrivilegedModeForRegularUsers,e.formValues.enableHostManagementFeatures=n.EnableHostManagementFeatures}).catch(function(e){n.error("失败",e,"无法检索应用程序设置")})}])},function(e,t,n){"use strict";n.r(t);n(1),n(6);angular.module("portainer.app").controller("SidebarController",["$q","$scope","StateManager","Notifications","Authentication","UserService",function(e,t,n,a,r,i){!function(){if(t.uiVersion=n.getState().application.version,t.logo=n.getState().application.logo,t.applicationState.application.authentication){var o=r.getUserDetails(),s=r.isAdmin();t.isAdmin=s,e.when(s?[]:i.userMemberships(o.ID)).then(function(e){var n,a;n=e,a=!1,angular.forEach(n,function(e){1===e.Role&&(a=!0)}),t.isTeamLeader=a}).catch(function(e){a.error("失败",e,"无法检索用户成员身份")})}}()}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(24);angular.module("portainer.app").controller("CreateStackController",["$scope","$state","StackService","Authentication","Notifications","FormValidator","ResourceControlService","FormHelper","EndpointProvider",function(e,t,n,r,i,o,s,l,c){function d(t,a){var r=l.removeInvalidEnvVars(e.formValues.Env),i=c.endpointID();if("editor"===a){var o=e.formValues.StackFileContent;return n.createSwarmStackFromFileContent(t,o,r,i)}if("upload"===a){var s=e.formValues.StackFile;return n.createSwarmStackFromFileUpload(t,s,r,i)}if("repository"===a){var d={RepositoryURL:e.formValues.RepositoryURL,RepositoryReferenceName:e.formValues.RepositoryReferenceName,ComposeFilePathInRepository:e.formValues.ComposeFilePathInRepository,RepositoryAuthentication:e.formValues.RepositoryAuthentication,RepositoryUsername:e.formValues.RepositoryUsername,RepositoryPassword:e.formValues.RepositoryPassword};return n.createSwarmStackFromGitRepository(t,d,r,i)}}function p(t,a){var r=l.removeInvalidEnvVars(e.formValues.Env),i=c.endpointID();if("editor"===a){var o=e.formValues.StackFileContent;return n.createComposeStackFromFileContent(t,o,r,i)}if("upload"===a){var s=e.formValues.StackFile;return n.createComposeStackFromFileUpload(t,s,r,i)}if("repository"===a){var d={RepositoryURL:e.formValues.RepositoryURL,RepositoryReferenceName:e.formValues.RepositoryReferenceName,ComposeFilePathInRepository:e.formValues.ComposeFilePathInRepository,RepositoryAuthentication:e.formValues.RepositoryAuthentication,RepositoryUsername:e.formValues.RepositoryUsername,RepositoryPassword:e.formValues.RepositoryPassword};return n.createComposeStackFromGitRepository(t,d,r,i)}}var u;e.formValues={Name:"",StackFileContent:"",StackFile:null,RepositoryURL:"",RepositoryReferenceName:"",RepositoryAuthentication:!1,RepositoryUsername:"",RepositoryPassword:"",Env:[],ComposeFilePathInRepository:"docker-compose.yml",AccessControlData:new a.AccessControlFormData},e.state={Method:"editor",formValidationError:"",actionInProgress:!1,StackType:null},e.addEnvironmentVariable=function(){e.formValues.Env.push({name:"",value:""})},e.removeEnvironmentVariable=function(t){e.formValues.Env.splice(t,1)},e.deployStack=function(){var n=e.formValues.Name,a=e.state.Method,l=e.formValues.AccessControlData,c=r.getUserDetails(),u=r.isAdmin(),m=c.ID;if("editor"!==a||""!==e.formValues.StackFileContent){if(function(t,n){var a;return e.state.formValidationError="",!(a=o.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(l,u)){var g=e.state.StackType,f=d;2===g&&(f=p),e.state.actionInProgress=!0,f(n,a).then(function(){return s.applyResourceControl("stack",n,m,l,[])}).then(function(){i.success("已成功部署堆栈"),t.go("portainer.stacks")}).catch(function(e){i.warning("部署错误",1===g?e.err.data.err:e.data.err)}).finally(function(){e.state.actionInProgress=!1})}}else e.state.formValidationError="堆栈文件内容不能为空"},e.editorUpdate=function(t){e.formValues.StackFileContent=t.getValue()},u=e.applicationState.endpoint.mode,e.state.StackType=2,"DOCKER_SWARM_MODE"===u.provider&&"MANAGER"===u.role&&(e.state.StackType=1)}])},function(e,t,n){"use strict";n.r(t);n(11),n(0);angular.module("portainer.app").controller("StackController",["$q","$scope","$state","$transition$","StackService","NodeService","ServiceService","TaskService","ContainerService","ServiceHelper","TaskHelper","Notifications","FormHelper","EndpointProvider","EndpointService","GroupService","ModalService",function(e,t,n,a,r,i,o,s,l,c,d,p,u,m,g,f,v){function h(t,n){var a={label:["com.docker.stack.namespace="+t]};return e.all({services:o.services(a),tasks:s.tasks(a),containers:n?l.containers(1):[],nodes:i.nodes()})}function b(e,n){var a=e.services,r=e.tasks;if(n)for(var i=e.containers,o=0;o<r.length;o++){var s=r[o];d.associateContainerToTask(s,i)}for(var l=0;l<a.length;l++){var p=a[l];c.associateTasksToService(p,r)}t.nodes=e.nodes,t.tasks=r,t.services=a}function x(t){var n={label:["com.docker.compose.project="+t]};return e.all({containers:l.containers(1,n)})}function y(e){t.containers=e.containers}function w(e){var n=a.params().type;!n||"1"!==n&&"2"!==n?p.error("失败",null,"无效的URL参数类型。"):"1"===n?function(e){var n=t.applicationState.endpoint.mode.agentProxy;h(e,n).then(function(e){b(e,n)}).catch(function(e){p.error("失败",e,"无法检索堆栈详细信息")})}(e):function(e){x(e).then(function(e){y(e)}).catch(function(e){p.error("失败",e,"无法检索堆栈详细信息")})}(e)}t.state={actionInProgress:!1,migrationInProgress:!1,externalStack:!1,showEditorTab:!1},t.formValues={Prune:!1,Endpoint:null},t.duplicateStack=function(e,a){var i=t.stack,o=u.removeInvalidEnvVars(i.Env);return m.setEndpointID(a),r.duplicateStack(e,t.stackFileContent,o,a,i.Type).then(function(){p.success("已成功复制堆栈"),n.go("portainer.stacks",{},{reload:!0}),m.setEndpointID(i.EndpointId)}).catch(function(e){p.error("失败",e,"无法复制堆栈")})},t.showEditor=function(){t.state.showEditorTab=!0},t.migrateStack=function(a,i){return e(function(e){v.confirm({title:"您确定吗？",message:"此操作将在目标节点上部署该堆栈的新实例。请注意：这不会重新定位已附加到该堆栈的任何持久卷的内容。",buttons:{confirm:{label:"迁移",className:"btn-danger"}},callback:function(o){return o?e(function(e,a){var i=t.stack,o=a,s=r.migrateSwarmStack;2===i.Type&&(s=r.migrateComposeStack);var l=m.endpointID();0===i.EndpointId&&(i.EndpointId=l);return t.state.migrationInProgress=!0,s(i,o,e).then(function(){p.success("已成功迁移堆栈",i.Name),n.go("portainer.stacks",{},{reload:!0})}).catch(function(e){p.error("失败",e,"无法迁移堆栈")}).finally(function(){t.state.migrationInProgress=!1})}(a,i)):e()}})})},t.removeStack=function(){v.confirmDeletion("您想删除堆栈吗？相关服务也将被删除。",function(e){var i,o;e&&(i=m.endpointID(),o=t.stack,r.remove(o,a.params().external,i).then(function(){p.success("已成功删除堆栈",o.Name),n.go("portainer.stacks")}).catch(function(e){p.error("失败",e,"无法删除堆栈"+o.Name)}))})},t.deployStack=function(){var e=t.stackFileContent,a=u.removeInvalidEnvVars(t.stack.Env),i=t.formValues.Prune,o=t.stack,s=m.endpointID();0===o.EndpointId&&(o.EndpointId=s),t.state.actionInProgress=!0,r.updateStack(o,e,a,i).then(function(){p.success("已成功部署堆栈"),n.reload()}).catch(function(e){p.error("失败",e,"无法创建堆栈")}).finally(function(){t.state.actionInProgress=!1})},t.addEnvironmentVariable=function(){t.stack.Env.push({name:"",value:""})},t.removeEnvironmentVariable=function(e){t.stack.Env.splice(e,1)},t.editorUpdate=function(e){t.stackFileContent=e.getValue()},function(){var n=a.params().name;t.stackName=n;var i,o,s=a.params().external;if(t.currentEndpointId=m.endpointID(),"true"===s)t.state.externalStack=!0,w(n);else{var l=a.params().id;i=l,o=t.applicationState.endpoint.mode.agentProxy,e.all({stack:r.stack(i),endpoints:g.endpoints(),groups:f.groups()}).then(function(n){var a=n.stack;return t.endpoints=n.endpoints,t.groups=n.groups,t.stack=a,e.all({stackFile:r.getStackFile(i),resources:1===a.Type?h(a.Name,o):x(a.Name)})}).then(function(e){t.stackFileContent=e.stackFile,1===t.stack.Type?b(e.resources,o):y(e.resources)}).catch(function(e){p.error("失败",e,"无法检索堆栈详细信息")})}}()}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("StacksController",["$scope","$state","Notifications","StackService","ModalService","EndpointProvider",function(e,t,n,a,r,i){var o,s;e.removeAction=function(o){r.confirmDeletion("您想删除选定的堆栈？相关服务也将被删除。",function(r){var s,l,c;r&&(s=o,l=i.endpointID(),c=s.length,angular.forEach(s,function(r){a.remove(r,r.External,l).then(function(){n.success("已成功删除堆栈",r.Name);var t=e.stacks.indexOf(r);e.stacks.splice(t,1)}).catch(function(e){n.error("失败",e,"无法删除堆栈 "+r.Name)}).finally(function(){0==--c&&t.reload()})}))})},e.offlineMode=!1,o=e.applicationState.endpoint.mode,s=i.endpointID(),a.stacks(!0,"DOCKER_SWARM_MODE"===o.provider&&"MANAGER"===o.role,s).then(function(t){var n=t;e.stacks=n,e.offlineMode=i.offlineMode()}).catch(function(t){e.stacks=[],n.error("失败",t,"无法检索堆栈")})}])},function(e,t){angular.module("portainer.app").controller("SupportProductController",["$scope","$transition$",function(e,t){e.formValues={hostCount:10},e.product=t.params().product}])},function(e,t){angular.module("portainer.app").controller("SupportController",["$scope","$state",function(e,t){e.goToProductView=function(e){t.go("portainer.support.product",{product:e})},e.products=[{Id:1,Name:"Business Support Standard",ShortDescription:"11x5 support with 4 hour response",Price:"USD 120",PriceDescription:"Price per month per host (minimum 10 hosts)",Description:"Business Support Standard:\n\n* 7am – 6pm business days, local time.\n* 4 Hour response for issues, 4 named support contacts.\n\nSupport provides you with an easy way to interact directly with the development team; whether you have an issue with the product, think you have found a bug, or need help on how to use it, we are here to help. Support is initiated from our web based ticketing system, and support is provided either by Slack messaging, Zoom remote support, or email.\n\nPrice is per Docker Host, with a 10 Host minimum, and is an annual support subscription.",ProductId:"1163"},{Id:2,Name:"Business Support Critical",ShortDescription:"24x7 support with 1 hour response",Price:"USD 240",PriceDescription:"Price per month per host (minimum 10 hosts)",Description:"Business Support Critical:\n\n* 24x7\n* 1 Hour response for issues, 4 named support contacts.\n\nSupport provides you with advanced support for critical requirements. Business Support Critical is an easy way to interact directly with the development team; whether you have an issue with the product, think you have found a bug, or need help on how to use it, we are here to help. Support is initiated from our web based ticketing system, and support is provided either by Slack messaging, Zoom remote support, or email.\n\nPrice is per Docker Host, with a 10 Host minimum, and is an annual support subscription.",ProductId:"1162"}]}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6),n(11);angular.module("portainer.app").controller("TagsController",["$scope","$state","TagService","Notifications",function(e,t,n,a){e.state={actionInProgress:!1},e.formValues={Name:""},e.checkNameValidity=function(t){for(var n=!0,a=0;a<e.tags.length;a++)if(e.formValues.Name===e.tags[a].Name){n=!1;break}t.name.$setValidity("validName",n)},e.removeAction=function(r){var i=r.length;angular.forEach(r,function(r){n.deleteTag(r.Id).then(function(){a.success("已成功删除标签",r.Name);var t=e.tags.indexOf(r);e.tags.splice(t,1)}).catch(function(e){a.error("失败",e,"无法标记标签")}).finally(function(){0===--i&&t.reload()})})},e.createTag=function(){var r=e.formValues.Name;n.createTag(r).then(function(){a.success("已成功创建标签",r),t.reload()}).catch(function(e){a.error("失败",e,"无法创建标签")})},n.tags().then(function(t){e.tags=t}).catch(function(t){a.error("失败",t,"无法检索标签"),e.tags=[]})}])},function(e,t,n){"use strict";n.r(t);n(1),n(6);angular.module("portainer.app").controller("TeamController",["$q","$scope","$state","$transition$","TeamService","UserService","TeamMembershipService","ModalService","Notifications","PaginationService","Authentication",function(e,t,n,a,r,i,o,s,l,c,d){function p(e,t){for(var n=0,a=t.length;n<a;n++)if(t[n].Id===e)return void t.splice(n,1)}t.state={pagination_count_users:c.getPaginationLimit("team_available_users"),pagination_count_members:c.getPaginationLimit("team_members")},t.sortTypeUsers="Username",t.sortReverseUsers=!0,t.users=[],t.teamMembers=[],t.leaderCount=0,t.orderUsers=function(e){t.sortReverseUsers=t.sortTypeUsers===e&&!t.sortReverseUsers,t.sortTypeUsers=e},t.changePaginationCountUsers=function(){c.setPaginationLimit("team_available_users",t.state.pagination_count_users)},t.sortTypeGroupMembers="TeamRole",t.sortReverseGroupMembers=!1,t.orderGroupMembers=function(e){t.sortReverseGroupMembers=t.sortTypeGroupMembers===e&&!t.sortReverseGroupMembers,t.sortTypeGroupMembers=e},t.changePaginationCountGroupMembers=function(){c.setPaginationLimit("team_members",t.state.pagination_count_members)},t.deleteTeam=function(){s.confirmDeletion("您想删除这个用户组吗？这个用户组中的用户不会被删除。",function(e){e&&r.deleteTeam(t.team.Id).then(function(){l.success("已成功删除用户组",t.team.Name),n.go("portainer.teams")}).catch(function(e){l.error("失败",e,"无法删除用户组")})})},t.promoteToLeader=function(e){o.updateMembership(e.MembershipId,e.Id,t.team.Id,1).then(function(){t.leaderCount++,e.TeamRole="Leader",l.success("已创建用户组管理员",e.Username)}).catch(function(e){l.error("失败",e,"无法更新用户角色")})},t.demoteToMember=function(e){o.updateMembership(e.MembershipId,e.Id,t.team.Id,2).then(function(){e.TeamRole="Member",t.leaderCount--,l.success("已成功添加用户组成员",e.Username)}).catch(function(e){l.error("失败",e,"无法更新用户角色")})},t.addAllUsers=function(){var n=[];angular.forEach(t.users,function(e){n.push(o.createMembership(e.Id,t.team.Id,2))}),e.all(n).then(function(e){for(var n=t.users,a=0;a<n.length;a++){var r=n[a];r.MembershipId=e[a].Id,r.TeamRole="Member"}t.teamMembers=t.teamMembers.concat(n),t.users=[],l.success("已成功添加所有用户")}).catch(function(e){l.error("失败",e,"无法更新用户组成员")})},t.addUser=function(e){o.createMembership(e.Id,t.team.Id,2).then(function(n){p(e.Id,t.users),e.TeamRole="Member",e.MembershipId=n.Id,t.teamMembers.push(e),l.success("已为用户组成功添加用户",e.Username)}).catch(function(e){l.error("失败",e,"无法更新用户组成员")})},t.removeAllUsers=function(){var n=[];angular.forEach(t.teamMembers,function(e){n.push(o.deleteMembership(e.MembershipId))}),e.all(n).then(function(){t.users=t.users.concat(t.teamMembers),t.teamMembers=[],t.leaderCount=0,l.success("已成功删除所有用户")}).catch(function(e){l.error("失败",e,"无法更新用户组成员")})},t.removeUser=function(e){o.deleteMembership(e.MembershipId).then(function(){p(e.Id,t.teamMembers),"Leader"===e.TeamRole&&t.leaderCount--,t.users.push(e),l.success("已成功从用户组删除用户",e.Username)}).catch(function(e){l.error("失败",e,"无法更新用户组成员")})},t.isAdmin=d.isAdmin(),e.all({team:r.team(a.params().id),users:i.users(!1),memberships:r.userMemberships(a.params().id)}).then(function(e){var n=e.users;t.team=e.team,function(e,n){for(var a=0;a<e.length;a++){for(var r=e[a],i=!1,o=0;o<n.length;o++){var s=n[o];if(r.Id===s.UserId){i=!0,1===s.Role?(r.TeamRole="Leader",t.leaderCount++):r.TeamRole="Member",r.MembershipId=s.Id,t.teamMembers.push(r);break}}i||t.users.push(r)}}(n,e.memberships)}).catch(function(e){l.error("失败",e,"无法检索用户组详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("TeamsController",["$q","$scope","$state","TeamService","UserService","ModalService","Notifications","Authentication",function(e,t,n,a,r,i,o,s){var l,c;t.state={actionInProgress:!1},t.formValues={Name:"",Leaders:[]},t.checkNameValidity=function(e){for(var n=!0,a=0;a<t.teams.length;a++)if(t.formValues.Name===t.teams[a].Name){n=!1;break}e.team_name.$setValidity("validName",n)},t.addTeam=function(){var e=t.formValues.Name,r=[];angular.forEach(t.formValues.Leaders,function(e){r.push(e.Id)}),t.state.actionInProgress=!0,a.createTeam(e,r).then(function(){o.success("已成功创建用户组",e),n.reload()}).catch(function(e){o.error("失败",e,"无法创建用户组")}).finally(function(){t.state.actionInProgress=!1})},t.removeAction=function(e){i.confirmDeletion("您想删除选定的用户组吗？用户组中的用户不会被删除。",function(r){r&&function(e){var r=e.length;angular.forEach(e,function(e){a.deleteTeam(e.Id).then(function(){o.success("已成功删除用户组",e.Name);var n=t.teams.indexOf(e);t.teams.splice(n,1)}).catch(function(e){o.error("失败",e,"无法删除用户组")}).finally(function(){0===--r&&n.reload()})})}(e)})},l=s.getUserDetails(),c=s.isAdmin(),t.isAdmin=c,e.all({users:r.users(!1),teams:c?a.teams():r.userLeadingTeams(l.ID)}).then(function(e){var n=e.teams;t.teams=n,t.users=e.users}).catch(function(e){t.teams=[],t.users=[],o.error("失败",e,"无法检索用户组")})}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(77);angular.module("portainer.app").controller("CreateTemplateController",["$q","$scope","$state","TemplateService","TemplateHelper","NetworkService","Notifications",function(e,t,n,r,i,o,s){t.state={actionInProgress:!1},t.create=function(){var e=t.model;t.state.actionInProgress=!0,r.create(e).then(function(){s.success("已成功创建模板",e.Title),n.go("portainer.templates")}).catch(function(e){s.error("失败",e,"无法创建模板")}).finally(function(){t.state.actionInProgress=!1})},function(){t.model=new a.TemplateDefaultModel;var n=t.applicationState.endpoint.mode.provider,l=t.applicationState.endpoint.apiVersion;e.all({templates:r.templates(),networks:o.networks("DOCKER_STANDALONE"===n||"DOCKER_SWARM_MODE"===n,!1,"DOCKER_SWARM_MODE"===n&&l>=1.25)}).then(function(e){t.categories=i.getUniqueCategories(e.templates),t.networks=e.networks}).catch(function(e){s.error("失败",e,"无法检索模板详细信息")})}()}])},function(e,t,n){"use strict";n.r(t);n(0);var a=n(4);angular.module("portainer.app").controller("TemplateController",["$q","$scope","$state","$transition$","TemplateService","TemplateHelper","NetworkService","Notifications",function(e,t,n,r,i,o,s,l){var c,d,p;t.state={actionInProgress:!1},t.update=function(){var e=t.template;t.state.actionInProgress=!0,i.update(e).then(function(){l.success("已成功更新模板",e.Title),n.go("portainer.templates")}).catch(function(e){l.error("失败",e,"无法更新模板")}).finally(function(){t.state.actionInProgress=!1})},c=t.applicationState.endpoint.mode.provider,d=t.applicationState.endpoint.apiVersion,p=r.params().id,e.all({templates:i.templates(),template:i.template(p),networks:s.networks("DOCKER_STANDALONE"===c||"DOCKER_SWARM_MODE"===c,!1,"DOCKER_SWARM_MODE"===c&&d>=1.25)}).then(function(e){var n=e.template;n.Network?n.Network=Object(a.a)(e.networks,function(e){return e.Name===n.Network}):n.Network=Object(a.a)(e.networks,function(e){return"bridge"===e.Name}),t.categories=o.getUniqueCategories(e.templates),t.template=e.template,t.networks=e.networks}).catch(function(e){l.error("失败",e,"无法检索模板详细信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(11),n(1),n(6),n(0);var a=n(4),r=n(111),i=n(36),o=n(24);angular.module("portainer.app").controller("TemplatesController",["$scope","$q","$state","$transition$","$anchorScroll","ContainerService","ImageService","NetworkService","TemplateService","TemplateHelper","VolumeService","Notifications","ResourceControlService","Authentication","FormValidator","SettingsService","StackService","EndpointProvider","ModalService",function(e,t,n,s,l,c,d,p,u,m,g,f,v,h,b,x,y,w,k){function $(t,a,r){var i=function(t){var n=e.formValues.network,a=e.formValues.name;return u.createTemplateConfiguration(t,a,n)}(t),o=m.determineRequiredGeneratedVolumeCount(t.Volumes),s=[];g.createXAutoGeneratedLocalVolumes(o).then(function(e){return angular.forEach(e,function(e){var t=e.Id;s.push(t)}),u.updateContainerConfigurationWithVolumes(i,t,e),d.pullImage(t.Image,{URL:t.Registry},!0)}).then(function(){return c.createAndStartContainer(i)}).then(function(e){var t=e.Id;return v.applyResourceControl("container",t,a,r,s)}).then(function(){f.success("已成功创建容器"),n.go("docker.containers",{},{reload:!0})}).catch(function(e){f.error("失败",e,e.msg)}).finally(function(){e.state.actionInProgress=!1})}e.state={selectedTemplate:null,showAdvancedOptions:!1,formValidationError:"",actionInProgress:!1,templateManagement:!0},e.formValues={network:"",name:"",AccessControlData:new o.AccessControlFormData},e.addVolume=function(){e.state.selectedTemplate.Volumes.push({containerPath:"",bind:"",readonly:!1,type:"auto"})},e.removeVolume=function(t){e.state.selectedTemplate.Volumes.splice(t,1)},e.addPortBinding=function(){e.state.selectedTemplate.Ports.push({hostPort:"",containerPort:"",protocol:"tcp"})},e.removePortBinding=function(t){e.state.selectedTemplate.Ports.splice(t,1)},e.addExtraHost=function(){e.state.selectedTemplate.Hosts.push("")},e.removeExtraHost=function(t){e.state.selectedTemplate.Hosts.splice(t,1)},e.addLabel=function(){e.state.selectedTemplate.Labels.push({name:"",value:""})},e.removeLabel=function(t){e.state.selectedTemplate.Labels.splice(t,1)},e.createTemplate=function(){var t=h.getUserDetails().ID,a=e.formValues.AccessControlData;if(function(t,n){var a;return e.state.formValidationError="",!(a=b.validateAccessControl(t,n))||(e.state.formValidationError=a,!1)}(a,e.isAdmin)){var o=e.state.selectedTemplate;e.state.actionInProgress=!0,2===o.Type?function(t,a,o){var s=e.formValues.name,l=Object(i.a)(Object(r.a)(t.Env,function(e){return{name:e.name,value:e.preset||!e.value?e.default:e.value}}),function(e){return e.value&&e.name}),c={RepositoryURL:t.Repository.url,ComposeFilePathInRepository:t.Repository.stackfile},d=w.endpointID();y.createSwarmStackFromGitRepository(s,c,l,d).then(function(){return v.applyResourceControl("stack",s,a,o,[])}).then(function(){f.success("已成功部署堆栈"),n.go("portainer.stacks")}).catch(function(e){f.warning("部署错误",e.err.data.err)}).finally(function(){e.state.actionInProgress=!1})}(o,t,a):3===o.Type?function(t,a,r){for(var i=e.formValues.name,o=0;o<t.Env.length;o++){var s=t.Env[o];s.preset&&(s.value=s.default)}var l={RepositoryURL:t.Repository.url,ComposeFilePathInRepository:t.Repository.stackfile},c=w.endpointID();y.createComposeStackFromGitRepository(i,l,t.Env,c).then(function(){return v.applyResourceControl("stack",i,a,r,[])}).then(function(){f.success("堆栈已成功部署堆栈"),n.go("portainer.stacks")}).catch(function(e){f.warning("部署错误",e.data.err)}).finally(function(){e.state.actionInProgress=!1})}(o,t,a):$(o,t,a)}},e.unselectTemplate=function(t){t.Selected=!1,e.state.selectedTemplate=null},e.selectTemplate=function(t){e.state.selectedTemplate&&e.unselectTemplate(e.state.selectedTemplate),t.Selected=!0,t.Network?e.formValues.network=Object(a.a)(e.availableNetworks,function(e){return e.Name===t.Network}):e.formValues.network=Object(a.a)(e.availableNetworks,function(e){return"bridge"===e.Name}),e.formValues.name=t.Name?t.Name:"",e.state.selectedTemplate=t,l("view-top")},e.deleteTemplate=function(t){k.confirmDeletion("要删除此模板吗？",function(n){n&&function(t){u.delete(t.Id).then(function(){f.success("已成功删除模板");var n=e.templates.indexOf(t);e.templates.splice(n,1)}).catch(function(e){f.error("失败",e,"无法删除模板")})}(t)})},function(){e.isAdmin=h.isAdmin();var n=e.applicationState.endpoint.mode,a=e.applicationState.endpoint.apiVersion;t.all({templates:u.templates(),volumes:g.getVolumes(),networks:p.networks("DOCKER_STANDALONE"===n.provider||"DOCKER_SWARM_MODE"===n.provider,!1,"DOCKER_SWARM_MODE"===n.provider&&a>=1.25),settings:x.publicSettings()}).then(function(t){var n=t.templates;e.templates=n,e.availableVolumes=t.volumes.Volumes;var a=t.networks;e.availableNetworks=a;var r=t.settings;e.allowBindMounts=r.AllowBindMountsForRegularUsers,e.state.templateManagement=!r.ExternalTemplates}).catch(function(t){e.templates=[],f.error("失败",t,"应用程序初始化期间发生错误。")})}()}])},function(e,t,n){"use strict";n.r(t);n(0);angular.module("portainer.app").controller("UpdatePasswordController",["$scope","$state","$transition$","$sanitize","UserService","Authentication","Notifications",function(e,t,n,a,r,i,o){e.formValues={CurrentPassword:"",Password:"",ConfirmPassword:""},e.state={actionInProgress:!1},e.updatePassword=function(){var n=i.getUserDetails().ID;e.state.actionInProgress=!0,r.updateUserPassword(n,a(e.formValues.CurrentPassword),e.formValues.Password).then(function(){t.go("portainer.home")}).catch(function(e){o.error("失败",e,"无法更新密码")}).finally(function(){e.state.actionInProgress=!1})},i.isAuthenticated()||t.go("portainer.auth")}])},function(e,t){angular.module("portainer.app").controller("UserController",["$q","$scope","$state","$transition$","UserService","ModalService","Notifications","SettingsService","Authentication",function(e,t,n,a,r,i,o,s,l){t.state={updatePasswordError:""},t.formValues={newPassword:"",confirmPassword:"",Administrator:!1},t.deleteUser=function(){i.confirmDeletion("您想删除这个用户吗？此用户将无法再登录到Portainer系统平台。",function(e){e&&r.deleteUser(t.user.Id).then(function(){o.success("已成功删除用户",t.user.Username),n.go("portainer.users")}).catch(function(e){o.error("失败",e,"无法删除用户")})})},t.updatePermissions=function(){var e=t.formValues.Administrator?1:2;r.updateUser(t.user.Id,void 0,e,0).then(function(){var a=1===e?"administrator":"user";o.success("已成功更新权限",t.user.Username+" 现已更改为 "+a),n.reload()}).catch(function(e){o.error("失败",e,"无法更新用户权限")})},t.updatePassword=function(){r.updateUser(t.user.Id,t.formValues.newPassword,void 0,-1).then(function(){o.success("已成功更新密码"),n.reload()}).catch(function(e){o.error("失败",e,"无法更新用户密码")})},t.isAdmin=l.isAdmin(),e.all({user:r.user(a.params().id),settings:s.publicSettings()}).then(function(e){var n=e.user;t.user=n,t.formValues.Administrator=1===n.Role,t.AuthenticationMethod=e.settings.AuthenticationMethod}).catch(function(e){o.error("失败",e,"无法检索用户信息")})}])},function(e,t,n){"use strict";n.r(t);n(5),n(0),n(1),n(6);angular.module("portainer.app").controller("UsersController",["$q","$scope","$state","UserService","TeamService","TeamMembershipService","ModalService","Notifications","Authentication","SettingsService",function(e,t,n,a,r,i,o,s,l,c){var d,p;t.state={userCreationError:"",validUsername:!1,actionInProgress:!1},t.formValues={Username:"",Password:"",ConfirmPassword:"",Administrator:!1,Teams:[]},t.checkUsernameValidity=function(){for(var e=!0,n=0;n<t.users.length;n++)if(t.formValues.Username===t.users[n].Username){e=!1;break}t.state.validUsername=e,t.state.userCreationError=e?"":"用户名已存在"},t.addUser=function(){t.state.actionInProgress=!0,t.state.userCreationError="";var e=t.formValues.Username,r=t.formValues.Password,i=t.formValues.Administrator?1:2,o=[];angular.forEach(t.formValues.Teams,function(e){o.push(e.Id)}),a.createUser(e,r,i,o).then(function(){s.success("已成功创建用户",e),n.reload()}).catch(function(e){s.error("失败",e,"无法创建用户")}).finally(function(){t.state.actionInProgress=!1})},t.removeAction=function(e){o.confirmDeletion("您想删除选定的用户？他们将无法再登录到系统。",function(r){r&&function(e){var r=e.length;angular.forEach(e,function(e){a.deleteUser(e.Id).then(function(){s.success("已成功删除用户",e.Username);var n=t.users.indexOf(e);t.users.splice(n,1)}).catch(function(e){s.error("失败",e,"无法删除用户")}).finally(function(){0==--r&&n.reload()})})}(e)})},d=l.getUserDetails(),p=l.isAdmin(),t.isAdmin=p,e.all({users:a.users(!0),teams:p?r.teams():a.userLeadingTeams(d.ID),memberships:i.memberships(),settings:c.publicSettings()}).then(function(e){var n=e.users;!function(e,t){for(var n=0;n<e.length;n++){var a=e[n];a.isTeamLeader=!1;for(var r=0;r<t.length;r++){var i=t[r];if(a.Id===i.UserId&&1===i.Role){a.isTeamLeader=!0,a.RoleName="team leader";break}}}}(n,e.memberships),t.users=n,t.teams=e.teams,t.AuthenticationMethod=e.settings.AuthenticationMethod}).catch(function(e){s.error("失败",e,"无法检索用户和用户组"),t.users=[],t.teams=[]})}])},function(e,t,n){"use strict";n.r(t);n(1140),n(1141),n(1142),n(1143),n(1144),n(1145),n(1146),n(1147),n(1148),n(1149),n(1150),n(1151),n(1152),n(1153),n(1154);var a=n(16),r=n.n(a);n(2),n(1155),n(1177),n(1179),n(1180),n(1182),n(1184),n(1186),n(1188),n(1190),n(1192),n(1194),n(1196),n(1197),n(1198),n(1200),n(1201),n(1202),n(1203),n(1204),n(1205),n(1206),n(1208);window.angular=r.a}]);